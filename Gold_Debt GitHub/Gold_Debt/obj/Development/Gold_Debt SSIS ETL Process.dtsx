<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/21/2024 6:19:03 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-L3H8CVG"
  DTS:CreatorName="DESKTOP-L3H8CVG\Felipe"
  DTS:DTSID="{1FB1B78C-2898-4D75-8236-166884C08243}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5397.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="Gold_Debt SSIS ETL Process"
  DTS:PackageType="5"
  DTS:VersionBuild="120"
  DTS:VersionGUID="{A4FC9554-C91A-4AF5-BA6B-CC232C480673}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[BingCovid19DataRaw]"
      DTS:CreationName="FLATFILE"
      DTS:Description="BingCovid19DataRaw"
      DTS:DTSID="{AF5E1A5B-8A4A-408A-BE99-DE2F665FE7E4}"
      DTS:ObjectName="BingCovid19DataRaw">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\_BISolutions\Gold_Debt\Data\bing_covid-19_data.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="id"
              DTS:DTSID="{A811A0FD-B586-41D1-8001-92378877F96B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="updated"
              DTS:DTSID="{8730C22C-6F8F-48FB-88B9-EC4B397212BF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="confirmed"
              DTS:DTSID="{EB13DB60-4EB3-44B7-9A42-4839818B9BD7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="confirmed_change"
              DTS:DTSID="{DD1B3A33-2178-4378-9BE6-4255C06C2393}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="deaths"
              DTS:DTSID="{04FE4749-8AD5-451F-98CF-82FDE0BBFA34}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="deaths_change"
              DTS:DTSID="{A8235BD0-B6DE-4B1B-A4D2-93EAA1EC8E42}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="recovered"
              DTS:DTSID="{57A5F5F5-9F5C-430A-8522-DB686FBA244C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="recovered_change"
              DTS:DTSID="{69E26D6F-2A35-41BE-97F9-E62EF27BEFEF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="latitude"
              DTS:DTSID="{4122EA2D-2A65-4A6E-A221-5786EDCD638F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="longitude"
              DTS:DTSID="{881B657E-7EC8-4DCA-B893-C779E109F25B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="iso2"
              DTS:DTSID="{967BCDDC-2FB1-4F03-A15C-A2D087E991E7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="iso3"
              DTS:DTSID="{1D5F0097-C4D0-4B91-BC22-7F8586176326}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="country_region"
              DTS:DTSID="{B2BB5AF6-6E0C-4C30-ACFF-9F40DB862343}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="admin_region_1"
              DTS:DTSID="{DE4BC608-5BCF-4981-9456-2976C863998D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="iso_subdivision"
              DTS:DTSID="{FCA21A79-27E6-4D43-9028-504D391491BD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="admin_region_2"
              DTS:DTSID="{D69A8B03-4F1A-48F2-A8A0-14C78493962D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="load_time"
              DTS:DTSID="{184EB061-F427-4375-86B4-6D0662851DD6}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Debt Penny]"
      DTS:CreationName="FLATFILE"
      DTS:Description="Debt PennyRaw"
      DTS:DTSID="{D8934D0E-78CF-4E1D-AB7E-D5057C8E9B19}"
      DTS:ObjectName="Debt Penny">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\_BISolutions\Gold_Debt\Data\DebtPenny_20140426_20240425.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Record Date"
              DTS:DTSID="{0D20C2F7-379F-47CA-B5AB-8167DF12F3FD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Debt Held by the Public"
              DTS:DTSID="{88984DAA-50D3-45C0-A7D9-F21719BD5E8D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Intragovernmental Holdings"
              DTS:DTSID="{6B198967-DA2B-4BDE-9493-09BECC16DF07}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Total Public Debt Outstanding"
              DTS:DTSID="{8902067B-0B4F-45C3-963C-990CA9EEA3A1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Source Line Number"
              DTS:DTSID="{2E93FDA4-6CA8-4EAC-AC70-E53CEE7F08F7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Fiscal Year"
              DTS:DTSID="{5C694F23-6B36-4960-8FA5-719850857CE8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Fiscal Quarter Number"
              DTS:DTSID="{72A7B3FA-5438-49BC-9AB0-95FC8A734729}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Calendar Year"
              DTS:DTSID="{9B83CDAE-E1B5-49C2-B3F8-A837FB2AB106}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Calendar Quarter Number"
              DTS:DTSID="{F96C33CB-8971-484F-8304-04D758A57BE6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Calendar Month Number"
              DTS:DTSID="{F658AC22-C888-4E7E-9340-E89D833D1420}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Calendar Day Number"
              DTS:DTSID="{B6FD696D-17DE-487B-AD11-4FB110CA78DA}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.Gold_Debt]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
      DTS:ObjectName="LocalHost.Gold_Debt">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LocalHost;User ID=;Initial Catalog=Gold_Debt;Provider=MSOLEDBSQL.1;Persist Security Info=False;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Gold_Debt SSIS ETL Process-{37D7DCC5-6601-42F5-9FB8-C59DE5855246}LocalHost.Gold_Debt;Initial File Name=;Server SPN=;Authentication=;Access Token=;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.Gold_Debt_Test]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{1183608D-9B4B-475B-A5C1-F3A40CE2D64F}"
      DTS:ObjectName="LocalHost.Gold_Debt_Test">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LocalHost;Initial Catalog=Gold_Debt_Test;Provider=MSOLEDBSQL.1;Persist Security Info=False;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package-{1183608D-9B4B-475B-A5C1-F3A40CE2D64F}LocalHost.Gold_Debt_Test;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.master]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{4767EDFD-AA7D-4EF0-B7BE-1CE40C6D0623}"
      DTS:ObjectName="LocalHost.master">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LocalHost;Initial Catalog=master;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package-{4767EDFD-AA7D-4EF0-B7BE-1CE40C6D0623}LocalHost.master;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.msdb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{206E145E-0BF0-4F36-969E-8839F40C0A2B}"
      DTS:ObjectName="LocalHost.msdb">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LocalHost;User ID=;Initial Catalog=msdb;Provider=MSOLEDBSQL.1;Persist Security Info=False;Integrated Security=SSPI;Initial File Name=;Server SPN=;Authentication=;Access Token=;Application Name=SSIS-Gold_Debt SSIS ETL Process-{206E145E-0BF0-4F36-969E-8839F40C0A2B}LocalHost.msdb;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt.fdgomez]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{78F0DA29-A6D8-41C1-8B02-A5FA4BA937B1}"
      DTS:ObjectName="uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt.fdgomez">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=uwc-studentsql.continuum.uw.edu\uwcbiddsql;User ID=fdgomez;Initial Catalog=Gold_Debt;Provider=MSOLEDBSQL.1;Persist Security Info=True;Initial File Name=;Server SPN=;Authentication=;Access Token=;Application Name=SSIS-Package-{78F0DA29-A6D8-41C1-8B02-A5FA4BA937B1}uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt.fdgomez;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAIiRhD8CkjEqMPYOH28MixQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACf8bT2xIAjgkGotdYaSUFOMxEJzNJZklYjlYM6EYZOZAAAAAAOgAAAAAIAACAAAAANLRP1EX3f7W31XuPRojh65qHWPlYbLVfaAeh98Ud1zCAAAADMy7JdAI1yrRcwia/i+hYQc/55Kb5Y/c76r5E0bMeSTUAAAABduX3xNPUXKgfE7sdHKV7ZNI6dyTL1iUm750b9cw22TevhMucqF6gFoUITwUslyo38AXsOVB1khgeXLsuUDJqp</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt_Test.fdgomez]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{3DC02E21-4610-488E-80C6-2A549ECBB4E3}"
      DTS:ObjectName="uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt_Test.fdgomez">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=uwc-studentsql.continuum.uw.edu\uwcbiddsql;User ID=fdgomez;Initial Catalog=Gold_Debt_Test;Provider=MSOLEDBSQL.1;Persist Security Info=True;Initial File Name=;Server SPN=;Authentication=;Access Token=;Application Name=SSIS-Gold_Debt SSIS ETL Process-{3DC02E21-4610-488E-80C6-2A549ECBB4E3}uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt_Tes;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAIiRhD8CkjEqMPYOH28MixQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAABYYAOfAYoSn8WQWGqZpjfxxO4XapRergbZlCSwkmoKEwAAAAAOgAAAAAIAACAAAAA0HILwzUAUV8VOdp0UTKLMHclWJoNo2E8wuEP4D4BqUyAAAACvz0bXCqU365UdknjHa5zCfr18Ma4kxmrE42Hk137soEAAAAARW6HoJCfrqy9K9WsX3paaW0J62B7CkYPISVf6F5F7GOv9s/z0v8/LEAtewDllX77FiIbVPpHxZujOVHhnlWXr</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[uwc-studentsql.continuum.uw.edu\uwcbiddsql.master.fdgomez]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{FCFC58AF-0BFF-4CD4-9220-C3921B617FC3}"
      DTS:ObjectName="uwc-studentsql.continuum.uw.edu\uwcbiddsql.master.fdgomez">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=uwc-studentsql.continuum.uw.edu\uwcbiddsql;User ID=fdgomez;Initial Catalog=master;Provider=MSOLEDBSQL.1;Persist Security Info=True;Initial File Name=;Server SPN=;Authentication=;Access Token=;Application Name=SSIS-Package-{FCFC58AF-0BFF-4CD4-9220-C3921B617FC3}uwc-studentsql.continuum.uw.edu\uwcbiddsql.master.fdgomez;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAIiRhD8CkjEqMPYOH28MixQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADCBR8c7i3dRNHwS629dZpF8+S9KhM58PiAaCKq6S3R2AAAAAAOgAAAAAIAACAAAAD7ybdyHWoqnfN1u/iVGLfj0bKnN4uYcyvZe0tdz5p0MSAAAADiggUt2N5rKh6Icnufu0InhqP6c3iUY1cPTAnluGChVEAAAAD8cOdB39IuCmHB/vLOyKCBonjnIxd0zaJwrUTEQ2vmWg/89OiyWPUJwdXxez3oPQj5m+o+m3rTv5jKuCvCbmo+</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[uwc-studentsql.continuum.uw.edu\uwcbiddsql.msdb.fdgomez]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{11E8AA05-E94A-4B4C-B0CC-6A1C8DE2BB6A}"
      DTS:ObjectName="uwc-studentsql.continuum.uw.edu\uwcbiddsql.msdb.fdgomez">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=uwc-studentsql.continuum.uw.edu\uwcbiddsql;User ID=fdgomez;Initial Catalog=msdb;Provider=MSOLEDBSQL.1;Persist Security Info=True;Initial File Name=;Server SPN=;Authentication=;Access Token=;Application Name=SSIS-Gold_Debt SSIS ETL Process-{11E8AA05-E94A-4B4C-B0CC-6A1C8DE2BB6A}uwc-studentsql.continuum.uw.edu\uwcbiddsql.msdb.fdgomez;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAIiRhD8CkjEqMPYOH28MixQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADGmWRwuu7i0pR61hpDcjqguFM1J43Q7K+kvn5Coaj1EAAAAAAOgAAAAAIAACAAAADplVj213qiZtNufOemLradhQAG6ZZ83nu2/3c/Wd9hoCAAAACt7Uqb0x6+YaWeLhvFVAuKfYTwINfct10khPjeQouDYEAAAACrQhPd9ed9bLKg//dTqmut51NBkcTDJ+FNBQfp3o2hdvHs9e+Kb5TIe+ZFKzTDeQcwQw4xBZWvQXu5MNsbBDz+</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Add Back Foreign Keys"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{DCFA1DF0-E37E-4E45-A6F5-79162E3D6C6C}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Add Back Foreign Keys">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Add Back Foreign Keys\Add Back Foreign Keys"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Add Back Foreign Keys After Filling Up Our Dimension and Fact Tables"
          DTS:DTSID="{7792652F-69AB-4B07-9694-56F6B556357E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Add Back Foreign Keys"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLAddForeignKeyConstraints;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create Dimension and Fact ETL Views"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{12AE6FFE-E2A3-42B0-AB84-2A7C73DFBF05}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Dimension and Fact ETL Views">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Create Dimension and Fact ETL Views\Create DimCountries ETL View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vETLDimCountries View To Use For Inserting Data Into Our DimCountries Table"
          DTS:DTSID="{465E8470-7875-4127-9485-438553C6A837}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create DimCountries ETL View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLvETLDimCountries;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Create Dimension and Fact ETL Views\Create DimRegions ETL View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vETLDimRegions View To Use For Inserting Data Into Our DimRegions Table"
          DTS:DTSID="{6C0D3BAA-0723-49A7-9B49-96D316C90AC7}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create DimRegions ETL View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLvETLDimRegions;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Create Dimension and Fact ETL Views\Create FactCovid ETL View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vETLFactCovid View To Use For Inserting Data Into Our FactCovid Table"
          DTS:DTSID="{E348AFD5-BA8E-4A8F-A98B-BF2FCC8971FC}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create FactCovid ETL View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLvETLFactCovid;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Create Dimension and Fact ETL Views\Create FactDebt ETL View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vETLFactDebt View To Use For Inserting Data Into Our FactDebt Table"
          DTS:DTSID="{6D69899B-BEBF-4FF0-AB30-41B53C05BBBB}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create FactDebt ETL View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLvETLFactDebt;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create ETLLog Table &amp; ETLLogView"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{6AA00EFD-6210-48F1-B1F7-E170DAB4278D}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create ETLLog Table &amp; ETLLogView">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Create ETLLog Table &amp; ETLLogView\Create ETL Log Table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our ETL Log Table for Admin Tasks"
          DTS:DTSID="{C74ACB26-507D-4AF0-8031-59B7D3EDD6AF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create ETL Log Table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLLogTable;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Create ETLLog Table &amp; ETLLogView\Create ETL Log View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create ETL Log View For Our Power BI Report"
          DTS:DTSID="{0FACB1D1-228B-45D4-91A7-0C2A739066CF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create ETL Log View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLLogView;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Create ETLLog Table &amp; ETLLogView.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{DCB85246-161D-42C2-9088-A08A3401AEE7}"
          DTS:From="Package\Create ETLLog Table &amp; ETLLogView\Create ETL Log Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Create ETLLog Table &amp; ETLLogView\Create ETL Log View" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Dimension &amp; Fact Tables Refresh"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{0E3AA428-BCC7-4AED-BA77-02218494A26A}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Dimension &amp; Fact Tables Refresh">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh\Dim Countries Flush and Fill Stored Procedure"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Fill Our DimCountries Table"
          DTS:DTSID="{8CE4C251-0993-47B0-90DD-FD5DA1F6E6A9}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Dim Countries Flush and Fill Stored Procedure"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFillDimCountries;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh\Dim Dates Flush and Fill Stored Procedure"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Fill Our DimDates Table"
          DTS:DTSID="{31D5B32F-42CC-438D-BB6D-058D58D8BE65}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Dim Dates Flush and Fill Stored Procedure"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFillDimDates;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh\Dim Regions Flush and Fill Stored Procedure"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Fill Our DimRegions Table"
          DTS:DTSID="{525A3AB3-8B2D-4E67-9544-04D01B16CDC9}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Dim Regions Flush and Fill Stored Procedure"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFillDimRegions;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh\Fact Covid Flush and Fill Stored Procedure"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Fill Our FactCovid Table"
          DTS:DTSID="{E3537B19-8FC5-4556-AE49-587FA9CE71C3}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fact Covid Flush and Fill Stored Procedure"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFillFactCovid;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh\Fact Debt Flush and Fill Stored Procedure"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Fill Our FactDebt Table"
          DTS:DTSID="{E5F7738A-4F16-49F6-AD58-53BD90516C92}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fact Debt Flush and Fill Stored Procedure"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFillFactDebt;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{FC44DF4C-A6B1-4625-98DB-9385A9139761}"
          DTS:From="Package\Dimension &amp; Fact Tables Refresh\Dim Dates Flush and Fill Stored Procedure"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Dimension &amp; Fact Tables Refresh\Dim Countries Flush and Fill Stored Procedure" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{314A4809-A2D5-4FD4-A964-50B59CE2270B}"
          DTS:From="Package\Dimension &amp; Fact Tables Refresh\Dim Countries Flush and Fill Stored Procedure"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Dimension &amp; Fact Tables Refresh\Dim Regions Flush and Fill Stored Procedure" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{BBFA7D65-3172-425B-927D-47695302A42F}"
          DTS:From="Package\Dimension &amp; Fact Tables Refresh\Dim Regions Flush and Fill Stored Procedure"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Dimension &amp; Fact Tables Refresh\Fact Covid Flush and Fill Stored Procedure" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{180EAEB9-77C8-4857-8D15-3A5359200AEF}"
          DTS:From="Package\Dimension &amp; Fact Tables Refresh\Fact Covid Flush and Fill Stored Procedure"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Dimension &amp; Fact Tables Refresh\Fact Debt Flush and Fill Stored Procedure" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Drop Foreign Keys &amp; Truncate Tables"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{C9BD13E3-5AC5-4D94-91CA-0A212CFA9480}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Drop Foreign Keys &amp; Truncate Tables">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Drop Foreign Keys &amp; Truncate Tables\Drop Foreign Keys"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Drop Foreign Keys In Order To Truncate Our Tables And Proceed To Fill Them Up Again"
          DTS:DTSID="{C516E322-5E23-490F-A425-F10AC6CE7ECD}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Drop Foreign Keys"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLDropForeignKeyConstraints;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Drop Foreign Keys &amp; Truncate Tables\Truncate Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Truncate Our Tables After Dropping Our Foreign Keys In Order To Proceed To Fill Up Our Dimension and Fact Tables With Up To Date Data"
          DTS:DTSID="{D02F694E-04F8-4416-853E-7AD05DEF364C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLTruncateTables;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Drop Foreign Keys &amp; Truncate Tables.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{DFBC6E87-541B-4885-8539-17B52E03E09E}"
          DTS:From="Package\Drop Foreign Keys &amp; Truncate Tables\Drop Foreign Keys"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Drop Foreign Keys &amp; Truncate Tables\Truncate Tables" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Generate Views Refresh"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{237582D8-4067-45B1-B152-B0ACE32F6DE9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate Views Refresh">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Generate Views Refresh\Create Or Alter vDimCountries View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vDimCountries View for Power BI"
          DTS:DTSID="{727675EF-46FB-49FC-90F9-74B4CE8FA499}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Or Alter vDimCountries View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLDimCountriesView;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Generate Views Refresh\Create Or Alter vDimDates View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vDimDates View for Power BI"
          DTS:DTSID="{13808611-BC15-42BE-B413-B97ECAE0173E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Or Alter vDimDates View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLDimDatesView;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Generate Views Refresh\Create Or Alter vDimRegions View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vDimRegion View For Power BI"
          DTS:DTSID="{979FE3DF-9A4F-40C4-BCCA-9CC00BF70241}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Or Alter vDimRegions View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLDimRegionsView;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Generate Views Refresh\Create Or Alter vFactCovid View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vFactCovid View for Power BI"
          DTS:DTSID="{A9D3465F-7088-4049-8441-DC8E597E761F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Or Alter vFactCovid View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFactCovidView;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Generate Views Refresh\Create Or alter vFactDebt View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vFactDebt View for Power BI"
          DTS:DTSID="{2E3DE336-85A6-4606-82CF-934AFFE4BA97}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Or alter vFactDebt View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFactDebtView;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Gold_Debt Database Creation"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{F00958EE-C288-4F38-BBBB-1D138CD2A19D}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Gold_Debt Database Creation">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Gold_Debt Database Creation\Gold_Debt Database Creation"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="DROPS EXISTING GOLD_DEBT DATABASE AND CREATES DEBT_GOLD DATABASE"
          DTS:DTSID="{8AF10F3F-7113-4861-9C9A-12E6926FD60E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Gold_Debt Database Creation"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4767EDFD-AA7D-4EF0-B7BE-1CE40C6D0623}"
              SQLTask:SqlStatementSource="EXEC sp_ETLGoldDebtDatabaseCreation;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{1F59A9DE-CEF4-41C5-B480-4EBF67F7F011}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation\Gold_Debt Add Foreign Key Constraints To Dimension and Fact Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Gold_Debt Add Foreign Key Constraints To Our Dimension and Fact Tables"
          DTS:DTSID="{F65F76A3-EE0A-42B2-8B6E-E06F5302A21F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Gold_Debt Add Foreign Key Constraints To Dimension and Fact Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLGoldDebtForeignKeyConstraints;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation\Gold_Debt Dimension and Fact Tables Creation"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Dimension and Fact Tables For Our Gold_Debt Database"
          DTS:DTSID="{312A5B47-B96C-4F06-B251-5774AB1BBC62}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Gold_Debt Dimension and Fact Tables Creation"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLGoldDebtDimensionAndFactTablesCreation;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{35961CB3-0A22-4A1F-BF2F-F1DE1565FC89}"
          DTS:From="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation\Gold_Debt Dimension and Fact Tables Creation"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation\Gold_Debt Add Foreign Key Constraints To Dimension and Fact Tables" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Gold_Debt Staging Tables Creation"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{40BB2203-9D03-4EB1-A25E-4AD51E2B5D19}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Gold_Debt Staging Tables Creation">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Gold_Debt Staging Tables Creation\StagingBingCovid19DataRaw Staging Table Creation"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="CREATION OF STAGING TABLE STAGINGBINGCOVID19DATARAW"
          DTS:DTSID="{23B31406-2E4E-4F81-8771-FA22AE3D0C80}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="StagingBingCovid19DataRaw Staging Table Creation"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLStagingBingCovid19DataRaw;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Gold_Debt Staging Tables Creation\StagingDebtPennyRaw Staging Table Creation"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="CREATION OF STAGING TABLE STAGINGDEBTPENNYRAW"
          DTS:DTSID="{022F6ED1-1A75-4340-A98A-366EDE650009}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="StagingDebtPennyRaw Staging Table Creation"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLStagingDebtPennyRaw;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\PRE SSIS RUN"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{F8087F98-155B-4A2F-A9FC-AA1B372769CC}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="PRE SSIS RUN">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\PRE SSIS RUN\Run Gold_Debt SQL Queries"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Run ALL Gold_Debt SQL Scripts"
          DTS:DTSID="{BF383023-6929-45D2-8EAF-FC23E255A348}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Run Gold_Debt SQL Queries"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="--*************************************************************************--&#xA;-- Title: BIDD330A Final&#xA;-- Author: Felipe Gomez&#xA;-- Desc: This file creates our Gold_Data Database, Staging Tables, BULK INSERT INTO our Staging Tables, Dimension and Fact Tables &amp; our Foreign Key Constraints, Flush and Fill ETL process with SQL code&#xA;-- Change Log: When,Who,What&#xA;-- 2024-05-27,Felipe Gomez,Created File&#xA;-- TODO: 05/27/2024,Felipe Gomez,Updated code to include logging and transaction handling&#xA;---------------------------------&#xA;--PLEASE MAKE SURE TO ADD BOTH COVID19 AND DEBT PENNY CSV FILES DO YOUR C:\Data directory!!!!!!!!!!!!!!!!!!!&#xA;USE MASTER&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLGoldDebtDatabaseCreation AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;IF EXISTS (SELECT 1 FROM sys.databases WHERE name = 'Gold_Debt')&#xA;&#x9;&#x9;ALTER DATABASE [Gold_Debt] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;&#xA;&#x9;&#x9;DROP DATABASE [Gold_Debt];&#xA;&#x9;&#x9;CREATE DATABASE [Gold_Debt]&#xA;&#x9;&#x9;ALTER DATABASE [Gold_Debt] SET MULTI_USER;&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Our Database/DataWarehouse Gold_Debt'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;&#xA;--EXEC sp_ETLGoldDebtDatabaseCreation;&#xA;--GO&#xA;------------------------------------&#xA;--CREATE STAGING TABLES&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLStagingBingCovid19DataRaw AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;If (SELECT Object_ID('StagingBingCovid19DataRaw')) IS NOT NULL&#xA;&#x9;&#x9;DROP TABLE StagingBingCovid19DataRaw;&#xA;&#x9;&#x9;CREATE TABLE StagingBingCovid19DataRaw (&#xA;&#x9;&#x9;&#x9;[id] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[updated] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[confirmed] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[confirmed_change] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[deaths] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[deaths_change] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[recovered] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[recovered_change] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[latitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[longitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[iso2] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[iso3] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[country_region] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[admin_region_1] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[iso_subdivision] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[admin_region_2] NVARCHAR(MAX),&#xA;&#x9;&#x9;&#x9;[load_time] NVARCHAR(MAX)&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Staging Table StagingBingCovid19DataRaw for BULK INSERT'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLStagingBingCovid19DataRaw;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLStagingDebtPennyRaw AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;If (SELECT Object_ID('StagingDebtPennyRaw')) IS NOT NULL&#xA;&#x9;&#x9;DROP TABLE StagingDebtPennyRaw;&#xA;&#x9;&#x9;CREATE TABLE StagingDebtPennyRaw (&#xA;&#x9;&#x9;&#x9;[Record Date] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Debt Held by the Public] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Intragovernmental Holdings] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Total Public Debt Outstanding] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Source Line Number] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Fiscal Year] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Fiscal Quarter Number] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Calendar Year] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Calendar Quarter Number] NVARCHAR(200),&#xA;&#x9;&#x9;    [Calendar Month Number] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Calendar Day Number]NVARCHAR(200)&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Staging Table StagingDebtPennyRaw for BULK INSERT'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLStagingDebtPennyRaw;&#xA;--GO&#xA;&#xA;--------------------------------------------------------BULK INSERT RAW CSV FILES INTO OUR STAGING TABLES&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLImportBingCovid19DataRawToStagingTable AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;BULK INSERT [StagingBingCovid19DataRaw]&#xA;&#x9;&#x9;FROM 'C:\Data\bing_covid-19_data.csv' --'\\DESKTOP\Data\bing_covid-19_data.csv' --&#xA;&#x9;&#x9;WITH (&#xA;&#x9;&#x9;&#x9;DATAFILETYPE = 'char',&#xA;&#x9;&#x9;&#x9;FORMAT = 'CSV',&#xA;&#x9;&#x9;&#x9;FIELDTERMINATOR = ',',&#xA;&#x9;&#x9;&#x9;ROWTERMINATOR = '0x0a',&#xA;&#x9;&#x9;&#x9;FIRSTROW = 2,&#xA;&#x9;&#x9;&#x9;MAXERRORS = 0&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Importing COVID19 Raw Data to Staging Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLImportBingCovid19DataRawToStagingTable;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLImportDebtPennyRawToStagingTable AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;BULK INSERT [StagingDebtPennyRaw]&#xA;&#x9;&#x9;FROM 'C:\Data\DebtPenny_20140426_20240425.csv'&#xA;&#x9;&#x9;WITH (&#xA;&#x9;&#x9;&#x9;DATAFILETYPE = 'char',&#xA;&#x9;&#x9;&#x9;FORMAT = 'CSV',&#xA;&#x9;&#x9;&#x9;FIELDTERMINATOR = ',',&#xA;&#x9;&#x9;&#x9;ROWTERMINATOR = '0x0a',&#xA;&#x9;&#x9;&#x9;FIRSTROW = 2,&#xA;&#x9;&#x9;&#x9;MAXERRORS = 0&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Importing Debt Penny Raw Data to Staging Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLImportDebtPennyRawToStagingTable;&#xA;--GO&#xA;&#xA;-------------------------------------------------------------------CREATE DIMENSION AND FACT TABLES (INCLUDING PRIMARY AND FOREGIN KEYS)&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLGoldDebtDimensionAndFactTablesCreation AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;/****** [dbo].[DimDates] ******/&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[DimDates]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[DimDates] (&#xA;&#x9;&#x9;&#x9;[DateKey] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[FullDate] DATETIME NOT NULL,&#xA;&#x9;&#x9;&#x9;[FullDateName] NVARCHAR(200) NULL,&#xA;&#x9;&#x9;&#x9;[WeekID] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[MonthID] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[MonthName] NVARCHAR(200) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Quarter] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[YearQuarter] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[YearID] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[YearName] NVARCHAR(200) NOT NULL,&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_DimDates] PRIMARY KEY CLUSTERED&#xA;&#x9;&#x9;&#x9;([DateKey])&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[DimCountries]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[DimCountries] (&#xA;&#x9;&#x9;&#x9;[CountryKey] INT IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Country] NVARCHAR (200)&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_DimCountries] PRIMARY KEY CLUSTERED&#xA;&#x9;&#x9;&#x9;([CountryKey])&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[DimRegions]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[DimRegions] (&#xA;&#x9;&#x9;&#x9;[RegionKey] INT IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Region] NVARCHAR (200)&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_DimRegion] PRIMARY KEY CLUSTERED&#xA;&#x9;&#x9;&#x9;([RegionKey])&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[FactCovid]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[FactCovid] (&#xA;&#x9;&#x9;&#x9;[FactCovidKey] INT IDENTITY (1,1) NOT NULL, --future Surrogate Key&#xA;&#x9;&#x9;&#x9;[ID] INT,&#xA;&#x9;&#x9;&#x9;[Updated] DATE,&#xA;&#x9;&#x9;&#x9;[DateKey] INT,&#xA;&#x9;&#x9;&#x9;[Confirmed] INT,&#xA;&#x9;&#x9;&#x9;[Confirmed_Change] INT,&#xA;&#x9;&#x9;&#x9;[Deaths] INT,&#xA;&#x9;&#x9;&#x9;[Deaths_Change] INT,&#xA;&#x9;&#x9;&#x9;[Recovered] INT,&#xA;&#x9;&#x9;&#x9;[Recovered_Change] INT,&#xA;&#x9;&#x9;&#x9;[Latitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Longitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Iso2] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Iso3] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Country_Region] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[CountryKey] INT,&#xA;&#x9;&#x9;&#x9;[Admin_Region_1] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[RegionKey] INT NULL,&#xA;&#x9;&#x9;&#x9;[Iso_Subdivision] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Admin_Region_2] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Load_Time] datetime2,&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_FactCovid] PRIMARY KEY CLUSTERED ([FactCovidKey], [ID], [DateKey], [CountryKey])&#xA;&#x9;&#x9;) ON [PRIMARY]&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[FactDebt]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[FactDebt] (&#xA;&#x9;&#x9;&#x9;[FactDebtKey] INT IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Record_Date] DATE NULL,&#xA;&#x9;&#x9;&#x9;[DateKey] INT,&#xA;&#x9;&#x9;&#x9;[Public_Debt] FLOAT NULL,&#xA;&#x9;&#x9;&#x9;[Intragovernmental_Holdings] FLOAT NULL,&#xA;&#x9;&#x9;&#x9;[Total_Public_Debt_Outstanding] FLOAT NULL,&#xA;&#x9;&#x9;&#x9;[Source_Line_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Fiscal_Year] INT NULL,&#xA;&#x9;&#x9;&#x9;[Fiscal_Quarter_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Year] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Quarter_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Month_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Day_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_FactDebt] PRIMARY KEY CLUSTERED ([FactDebtKey], [DateKey])&#xA;&#x9;&#x9;) ON [PRIMARY]&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Dimension and Fact Tables'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLGoldDebtDimensionAndFactTablesCreation;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLGoldDebtForeignKeyConstraints AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimDates] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimCountries] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([CountryKey]) REFERENCES [dbo].[DimCountries] ([CountryKey])&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimRegions] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([RegionKey]) REFERENCES [dbo].[DimRegions] ([RegionKey])&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactDebt] ADD CONSTRAINT [FK_FactDebt_DimDates] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Foreign Key Constraints'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLGoldDebtForeignKeyConstraints;&#xA;--GO&#xA;&#xA;-------------------------------------------------------PERFORM OUR ETL FLUSH AND FILL PROCESS&#xA;&#xA;-- 1) CREATE OUR ETL TABLE, VIEW AND INSERT STORED PROCEDURE&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLLogTable AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;IF NOT Exists(SELECT * FROM Sys.tables WHERE [name] = 'ETLLog')&#xA;&#x9;&#x9;  CREATE -- Drop&#xA;&#x9;&#x9;  TABLE ETLLog&#xA;&#x9;&#x9;  (ETLLogID INT IDENTITY PRIMARY KEY&#xA;&#x9;&#x9;  ,ETLDateAndTime DATETIME DEFAULT GETDATE()&#xA;&#x9;&#x9;  ,ETLAction NVARCHAR(100)&#xA;&#x9;&#x9;  ,ETLLogMessage NVARCHAR(2000)&#xA;&#x9;&#x9;  );&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Log Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLLogTable;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLLogView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW vETLLog&#xA;&#x9;&#x9;AS&#xA;&#x9;&#x9;  SELECT&#xA;&#x9;&#x9;   ETLLogID&#xA;&#x9;&#x9;  ,ETLDate = Format(ETLDateAndTime, ''D'', ''en-us'')&#xA;&#x9;&#x9;  ,ETLTime = Format(Cast(ETLDateAndTime as datetime2), ''HH:mm'', ''en-us'')&#xA;&#x9;&#x9;  ,ETLAction&#xA;&#x9;&#x9;  ,ETLLogMessage&#xA;&#x9;&#x9;  FROM ETLLog');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Log View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;EXEC sp_ETLLogView;&#xA;GO&#xA;&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLInsertETLLog (@ETLAction NVARCHAR(100), @ETLLogMessage NVARCHAR(2000)) AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;    BEGIN TRAN;&#xA;      INSERT INTO [ETLLog] (ETLAction, ETLLogMessage)&#xA;      Values&#xA;       (@ETLAction,@ETLLogMessage)&#xA;    Commit Tran;&#xA;    Set @RC = 1;&#xA;  End Try&#xA;  Begin Catch&#xA;    If @@TRANCOUNT &gt; 0 Rollback Tran;&#xA;    Set @RC = -1;&#xA;  End Catch&#xA;  Return @RC;&#xA;End&#xA;GO -- If you don't put a go here the test code will be included in the Sproc body!&#xA;&#xA;-- 2) CREATE OUR DROP FOREIGN KEY CONSTRAINTS STORED PROCEDURE&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDropForeignKeyConstraints AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;    ALTER TABLE [dbo].[FactCovid] &#xA;     DROP CONSTRAINT [FK_FactCovid_DimDates] &#xA;&#xA;    ALTER TABLE [dbo].[FactCovid] &#xA;     DROP CONSTRAINT [FK_FactCovid_DimCountries] &#xA;&#xA;    ALTER TABLE [dbo].[FactCovid] &#xA;     DROP CONSTRAINT [FK_FactCovid_DimRegions] &#xA;&#xA;    ALTER TABLE [dbo].[FactDebt] &#xA;     DROP CONSTRAINT [FK_FactDebt_DimDates] &#xA;&#xA;    -- Optional: Unlike the other tables DimDates does not change often --&#xA;    --Alter Table [dbo].[FactSalesOrders] &#xA;    -- Drop Constraint [FK_FactSalesOrders_DimDates]&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLDropForeignKeyConstraints'&#xA;&#x9;       ,@ETLLogMessage = 'Foreign Keys dropped';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     DECLARE @ErrorMessage nvarchar(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLDropForeignKeyConstraints'&#xA;&#x9;     ,@ETLLogMessage = 'Foreign Keys cannot be dropped (They may be missing or misnamed)';&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDropForeignKeyConstraints;&#xA;--GO&#xA;&#xA;-- 3) CREATE OUR TRUNCATE TABLES STORED PROCEDURE&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLTruncateTables AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;    -- ETL Processing Code --&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.DimCountries;&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.DimRegions;&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.FactCovid;   &#xA;&#x9;TRUNCATE TABLE [Gold_Debt].dbo.FactDebt;   &#xA;    -- Optional: Unlike the other tables DimDates does not change often --&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.DimDates; &#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLTruncateTables'&#xA;&#x9;       ,@ETLLogMessage = 'Tables data removed';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLTruncateTables'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLTruncateTables;&#xA;--GO&#xA;&#xA;-- 4) CREATE OUR STORED PROCEDURES TO FILL IN OUR DIMENSIONS&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillDimDates AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;      DECLARE @StartDate DATETIME = '01/01/2014'&#xA;      DECLARE @EndDate DATETIME = '12/31/2024' &#xA;      DECLARE @DateInProcess DATETIME  = @StartDate&#xA;      -- Loop through the dates until you reach the end date&#xA;      BEGIN TRAN&#xA;      WHILE @DateInProcess &lt;= @EndDate&#xA;       BEGIN&#xA;       -- Add a row Into the date dimension table for this date&#xA;       INSERT INTO DimDates &#xA;       ( [DateKey],[FullDate],[FullDateName],[WeekID],[MonthID],[MonthName],[Quarter],[YearQuarter],[YearID],[YearName])&#xA;       VALUES ( &#xA;         Cast(Convert(NVARCHAR(50), @DateInProcess, 112) AS INT) -- [DateKey]&#xA;        ,@DateInProcess -- [FullDate]&#xA;        ,DateName(WEEKDAY, @DateInProcess) + ', ' + Convert(NVARCHAR(50), @DateInProcess, 110) -- [FullDateName]&#xA;&#x9;&#x9;,CAST(DATEPART(ISO_WEEK, @DateInProcess) AS INT) --[WeekID]&#xA;        ,Cast(Left(Convert(NVARCHAR(50), @DateInProcess, 112), 6) AS INT)  -- [MonthID]&#xA;        ,DateName(month, @DateInProcess) + ' - ' + DateName(YYYY,@DateInProcess) -- [MonthName]&#xA;&#x9;&#x9;,DATEPART(QUARTER,@DateInProcess) -- [Quarter]&#xA;&#x9;&#x9;,CAST(CONCAT(YEAR(@DateInProcess), DATEPART(QUARTER,@DateInProcess)) AS INT) -- [YearQuarter]&#xA;        ,Year(@DateInProcess) -- [YearID] &#xA;        ,Cast(Year(@DateInProcess ) AS NVARCHAR(50)) -- [YearName] &#xA;        )  &#xA;       -- Add a day and loop again&#xA;       SET @DateInProcess = DateAdd(d, 1, @DateInProcess)&#xA;       END&#xA;&#x9;   COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillDimDates'&#xA;&#x9;       ,@ETLLogMessage = 'DimDates filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog&#xA;&#x9;      @ETLAction = 'sp_ETLFillDimDates'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillDimDates;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLDimCountries AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLDimCountries]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for DimCountries*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9; SELECT DISTINCT [Country_Region] AS [Country]&#xA;&#x9;&#x9;&#x9; FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL DimCountries View For Inserting Data Into Our DimCountries Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLDimCountries;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLDimCountries!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLDimCountries&#xA;--/* Desc: Extracts and transforms data for DimCountries&#xA;--*/&#xA;--AS SELECT DISTINCT [Country_Region] AS [Country] FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillDimCountries AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT Count(*) FROM DimCountries) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].dbo.DimCountries&#xA;      ([Country]&#xA;      )&#xA;      SELECT [Country]&#xA;      FROM vETLDimCountries&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillDimCountries'&#xA;&#x9;       ,@ETLLogMessage = 'DimCountries filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillDimCountries'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillDimCountries;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLDimRegions AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLDimRegions]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for DimRegions*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9; SELECT DISTINCT [Admin_Region_1] AS [Region]&#xA;&#x9;&#x9;&#x9; FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL DimRegions View For Inserting Data Into Our DimRegions Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLDimRegions;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLDimRegions!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLDimRegions&#xA;--/* Desc: Extracts and transforms data for DimRegions&#xA;--*/&#xA;--AS SELECT DISTINCT [Admin_Region_1] AS [Region] FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillDimRegions AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT COUNT(*) FROM DimRegions) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].dbo.DimRegions&#xA;      ([Region]&#xA;      )&#xA;      SELECT [Region]&#xA;      FROM vETLDimRegions&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillDimRegions'&#xA;&#x9;       ,@ETLLogMessage = 'DimRegions filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillDimRegions'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillDimRegions;&#xA;--GO&#xA;&#xA;-- 5) CREATE OUR STORED PROCEDURES TO FILL IN OUR FACTS&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLFactCovid AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLFactCovid]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for FactCovid*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9;  SELECT&#xA;&#x9;&#x9;&#x9;&#x9;   --[FactCovidKey]&#xA;&#x9;&#x9;&#x9;&#x9;   [ID]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Updated]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[DateKey] = [D].[DateKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Confirmed]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Confirmed_Change]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Deaths]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Deaths_Change]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Recovered]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Recovered_Change]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Latitude]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Longitude]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Iso2]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Iso3]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Country_Region]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[CountryKey] = [C].[CountryKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Admin_Region_1]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[RegionKey] = [R].[RegionKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Iso_Subdivision]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Admin_Region_2]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Load_Time]&#xA;&#x9;&#x9;&#x9;  FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimCountries] [C]&#xA;&#x9;&#x9;&#x9;   ON [C19].[Country_Region] = [C].[Country]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimRegions] [R]&#xA;&#x9;&#x9;&#x9;   ON [C19].[Admin_Region_1] = [R].[Region]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D]&#xA;&#x9;&#x9;&#x9;   ON CAST([C19].[Updated] AS DATE) = CAST([D].[FullDate] AS DATE)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL FactCovid View For Inserting Data Into Our FactCovid Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLFactCovid;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLFactCovid!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLFactCovid&#xA;--/* Desc: Extracts and transforms data for FactCovid&#xA;--*/&#xA;--AS&#xA;--  SELECT&#xA;--       --[FactCovidKey]&#xA;--       [ID],[Updated],[CovidDateKey] = [D].[DateKey],[Confirmed],[Confirmed_Change],[Deaths],[Deaths_Change],[Recovered],[Recovered_Change],[Latitude] ,[Longitude],[Iso2],[Iso3]&#xA;--      ,[Country_Region],[CountryKey] = [C].[CountryKey],[Admin_Region_1],[RegionKey] = [R].[RegionKey],[Iso_Subdivision],[Admin_Region_2],[Load_Time]&#xA;--  FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimCountries] [C] ON [C19].[Country_Region] = [C].[Country]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimRegions] [R] ON [C19].[Admin_Region_1] = [R].[Region]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D] ON CAST([C19].[Updated] AS DATE) = CAST([D].[FullDate] AS DATE)&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillFactCovid&#xA;/* Desc: Inserts data Into FactCovid using the vETLFactCovid view&#xA;*/&#xA;AS&#xA; BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY &#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT COUNT(*) FROM [Gold_Debt].[dbo].[FactCovid]) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].[dbo].[FactCovid]&#xA;      ([ID]&#xA;      ,[Updated]&#xA;      ,[DateKey]&#xA;      ,[Confirmed]&#xA;      ,[Confirmed_Change]&#xA;      ,[Deaths]&#xA;      ,[Deaths_Change]&#xA;      ,[Recovered]&#xA;      ,[Recovered_Change]&#xA;      ,[Latitude]&#xA;      ,[Longitude]&#xA;      ,[Iso2]&#xA;      ,[Iso3]&#xA;      ,[Country_Region]&#xA;      ,[CountryKey]&#xA;      ,[Admin_Region_1]&#xA;      ,[RegionKey]&#xA;      ,[Iso_Subdivision]&#xA;      ,[Admin_Region_2]&#xA;      ,[Load_Time]&#xA;      )&#xA;      SELECT&#xA;       [ID]&#xA;      ,[Updated]&#xA;      ,[DateKey]&#xA;      ,[Confirmed]&#xA;      ,[Confirmed_Change]&#xA;      ,[Deaths]&#xA;      ,[Deaths_Change]&#xA;      ,[Recovered]&#xA;      ,[Recovered_Change]&#xA;      ,[Latitude]&#xA;      ,[Longitude]&#xA;      ,[Iso2]&#xA;      ,[Iso3]&#xA;      ,[Country_Region]&#xA;      ,[CountryKey]&#xA;      ,[Admin_Region_1]&#xA;      ,[RegionKey]&#xA;      ,[Iso_Subdivision]&#xA;      ,[Admin_Region_2]&#xA;      ,[Load_Time]&#xA;      FROM [dbo].[vETLFactCovid]&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillFactCovid'&#xA;&#x9;       ,@ETLLogMessage = 'FactCovid filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillFactCovid'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillFactCovid;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLFactDebt AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;--CAST(LEFT(TRIM([Calendar Day Number]), 2) AS char(2))&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLFactDebt]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for FactDebt*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9;  SELECT&#xA;&#x9;&#x9;&#x9;&#x9;   --[FactDebtKey]&#xA;&#x9;&#x9;&#x9;&#x9;   [RecordDate] = [Record Date]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[DateKey] = [D].[DateKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Public_Debt] = CAST([Debt Held by the Public] AS money)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Intragovernmental_Holdings] = CAST([Intragovernmental Holdings] AS money)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Total_Public_Debt_Outstanding] = CAST([Total Public Debt Outstanding] AS money)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Source_Line_Number] = [Source Line Number]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Fiscal_Year] = [Fiscal Year]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Fiscal_Quarter_Number] = [Fiscal Quarter Number]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendar_Year] = [Calendar Year]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendar_Quarter_Number] = CAST(TRIM([Calendar Quarter Number]) AS INT)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendar_Month_Number] = CAST(TRIM([Calendar Month Number]) AS INT)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendary_Day_Number] = CAST(TRIM(REPLACE([Calendar Day Number], CHAR(13), '''')) AS INT)&#xA;&#x9;&#x9;&#x9;  FROM [Gold_Debt].[dbo].[StagingDebtPennyRaw] [DPR]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D]&#xA;&#x9;&#x9;&#x9;   ON CAST([DPR].[Record Date] AS DATE) = CAST([D].[FullDate] AS DATE)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL FactDebt View For Inserting Data Into Our FactDebt Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLFactDebt;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLFactDebt!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLFactDebt&#xA;--/* Desc: Extracts and transforms data for FactCovid&#xA;--*/&#xA;--AS&#xA;--  SELECT&#xA;--       --[FactDebtKey]&#xA;--&#x9;   [RecordDate] = [Record Date],[DebtDateKey] = [D].[DateKey],[Public_Debt] = [Debt Held by the Public],[Intragovernmental_Holdings] = [Intragovernmental Holdings],[Total_Public_Debt_Outstanding] = [Total Public Debt Outstanding],[Source_Line_Number] = [Source Line Number],[Fiscal_Year] = [Fiscal Year]&#xA;--      ,[Fiscal_Quarter_Number] = [Fiscal Quarter Number],[Calendar_Year] = [Calendar Year],[Calendar_Quarter_Number] = [Calendar Quarter Number],[Calendar_Month_Number] = [Calendar Month Number],[Calendary_Day_Number] = [Calendar Day Number]&#xA;--  FROM [Gold_Debt].[dbo].[StagingDebtPennyRaw] [DPR]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D] ON CAST([DPR].[Record Date] AS DATE) = CAST([D].[FullDate] AS DATE)&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillFactDebt&#xA;/* Desc: Inserts data Into FactCovid using the vETLFactCovid view&#xA;*/&#xA;AS&#xA; BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY &#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT COUNT(*) FROM FactDebt) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].[dbo].[FactDebt]&#xA;      ([Record_Date]&#xA;      ,[DateKey]&#xA;      ,[Public_Debt]&#xA;      ,[Intragovernmental_Holdings]&#xA;      ,[Total_Public_Debt_Outstanding]&#xA;      ,[Source_Line_Number]&#xA;      ,[Fiscal_Year]&#xA;      ,[Fiscal_Quarter_Number]&#xA;      ,[Calendar_Year]&#xA;      ,[Calendar_Quarter_Number]&#xA;      ,[Calendar_Month_Number]&#xA;      ,[Calendar_Day_Number]&#xA;      )&#xA;      SELECT&#xA;&#x9;   [RecordDate]&#xA;&#x9;  ,[DateKey]&#xA;      ,[Public_Debt]&#xA;      ,[Intragovernmental_Holdings]&#xA;      ,[Total_Public_Debt_Outstanding]&#xA;      ,[Source_Line_Number]&#xA;      ,[Fiscal_Year]&#xA;      ,[Fiscal_Quarter_Number]&#xA;      ,[Calendar_Year]&#xA;      ,[Calendar_Quarter_Number]&#xA;      ,[Calendar_Month_Number]&#xA;      ,[Calendary_Day_Number]&#xA;      FROM vETLFactDebt&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillFactDebt'&#xA;&#x9;       ,@ETLLogMessage = 'FactDebt filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillFactDebt'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillFactDebt;&#xA;--GO&#xA;&#xA;-- 6) Add Back Foreign Keys&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLAddForeignKeyConstraints&#xA;/* Desc: This Sproc Replaces the Foreign Keys Constraints.&#xA;*/&#xA;AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 1;&#xA;&#x9;DECLARE @Message NVARCHAR(1000);&#xA;  BEGIN TRY&#xA;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimDates] &#xA;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimCountries] &#xA;&#x9;&#x9;FOREIGN KEY ([CountryKey]) REFERENCES [dbo].[DimCountries] ([CountryKey])&#xA;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimRegions] &#xA;&#x9;&#x9;FOREIGN KEY ([RegionKey]) REFERENCES [dbo].[DimRegions] ([RegionKey])&#xA;&#x9;ALTER TABLE [dbo].[FactDebt] ADD CONSTRAINT [FK_FactDebt_DimDates] &#xA;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;SET @Message = 'Foreign Keys replaced on all tables';&#xA;&#x9;EXEC sp_ETLInsertETLLog&#xA; &#x9;       @ETLAction = 'sp_ETLAddForeignKeyConstraints'&#xA; &#x9;      ,@ETLLogMessage = @Message;&#xA;    SET @RC = 1;&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;    IF @@TRANCOUNT &gt; 0 ROLLBACK;&#xA;    DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;    EXEC sp_ETLInsertETLLog &#xA;         @ETLAction = 'sp_ETLAddForeignKeyConstraints'&#xA;        ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1;&#xA;  END CATCH&#xA;  RETURN @RC;&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLAddForeignKeyConstraints;&#xA;--GO&#xA;&#xA;--********************************************************************--&#xA;-- D) Review the results of this script&#xA;--********************************************************************--&#xA;--go&#xA;--Declare @Status int;&#xA;--Exec @Status = sp_ETLDropForeignKeyConstraints;&#xA;--Select [Object] = 'pETLDropForeignKeyConstraints', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLTruncateTables;&#xA;--Select [Object] = 'pETLTruncateTables', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillDimDates;&#xA;--Select [Object] = 'pETLFillDimDates', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillDimCountries;&#xA;--Select [Object] = 'pETLFillDimProducts', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillDimRegions;&#xA;--Select [Object] = 'pETLFillDimCustomers', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillFactCovid;&#xA;--Select [Object] = 'pETLFillFactOrders', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLAddForeignKeyConstraints;&#xA;--Select [Object] = 'pETLAddForeignKeyConstraints', [Status] = @Status;&#xA;&#xA;--go&#xA;--Select [DimDates] = Count(*) From [dbo].[DimDates];&#xA;--Select [DimCountries] = Count(*) From [dbo].[DimCountrires];&#xA;--Select [DimRegions] = Count(*) From [dbo].[DimRegions];&#xA;--Select [FactCovid] = Count(*) From [dbo].[FactCovid];&#xA;--Select [FactDebt] = Count(*) From [dbo].[FactDebt];&#xA;--Select * From vETLLog;&#xA;----Delete From ETLLog;&#xA;&#xA;-------------------------------------------------&#xA;------CREATE FINAL VIEWS FOR POWER BI------------&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDimDatesView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vDimDates]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[DimDates] WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;  ORDER BY [FullDate] ASC&#xA;&#x9;&#x9;&#x9;  OFFSET 0 ROWS');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final DimDates View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDimDatesView;&#xA;--GO&#xA;&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDimCountriesView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vDimCountries]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[DimCountries] WITH (NOLOCK)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final DimCountries View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDimCountriesView;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDimRegionsView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vDimRegions]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[DimRegions] WITH (NOLOCK)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final DimRegions View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDimRegionsView;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFactCovidView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vFactCovid]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[FactCovid] WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;  ORDER BY [Updated] ASC&#xA;&#x9;&#x9;&#x9;  OFFSET 0 ROWS');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final FactCovid View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFactCovidView;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFactDebtView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vFactDebt]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[FactDebt] WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;  ORDER BY [Record_Date] ASC&#xA;&#x9;&#x9;&#x9;  OFFSET 0 ROWS');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final FactDebt View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFactDebtView;&#xA;--GO&#xA;&#xA;--WE ARE SETTING UP DAILY SCHEDULED REFRESHES USING SQL SERVER AGENT! --THIS CODE IS NOT COPIED IN THE FIRST SEQUENCE CONTAINERS THAT RUNS CODE. WE RUN THIS AS A SEPARATE SQL SCRIPT IN THE FIRST AND THIRD SEQUENCE CONTAINER AS WELL AS THE LAST SEQUENCE CONTAINER &quot;SQL SERVER AGENT SCHEDULE REFRESH &amp; NEXT STEPS&quot;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PRE SSIS RUN\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:Disabled="True"
          DTS:DTSID="{5c915f79-6763-4615-b531-3558e0bb6436}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{206E145E-0BF0-4F36-969E-8839F40C0A2B}"
              SQLTask:SqlStatementSource="--WE ARE SETTING UP DAILY SCHEDULED REFRESHES USING SQL SERVER AGENT!&#xA;-------------------------------------------------------------------------------------------------------&#xA;--SQL SERVER AGENT SCHEDULED REFRESH FOR LOCAL INSTANCE&#xA;--DEPENDING ON WHICH SERVER YOU ARE ON, YOU WILL HAVE TO COMMENT ON AND OFF THE SQL SEVER AGENT BLOCKS OF CODE.&#xA;&#xA;&#xA;USE [msdb]&#xA;GO&#xA;--USE [Gold_Debt]&#xA;--GO &#xA;&#xA;--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_Gold_Debt_SQLServerAgentDailyRefresh AS&#xA;BEGIN&#xA;&#xA;/****** Object:  Job [Gold_Debt Daily Refresh]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;BEGIN TRANSACTION&#xA;DECLARE @ReturnCode INT&#xA;SELECT @ReturnCode = 0&#xA;DECLARE @jobID1 Binary(16)&#xA;SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;&#xA;/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)&#xA;BEGIN&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;&#xA;END&#xA;&#xA;DECLARE @jobId BINARY(16)&#xA;EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Gold_Debt Daily Refresh', &#xA;  @enabled=1, &#xA;  @notify_level_eventlog=0, &#xA;  @notify_level_email=0, &#xA;  @notify_level_netsend=0, &#xA;  @notify_level_page=0, &#xA;  @delete_level=0, &#xA;  @description=N'No description available.', &#xA;  @category_name=N'[Uncategorized (Local)]', &#xA;  @owner_login_name=N'DESKTOP-L3H8CVG\Felipe', @job_id = @jobId OUTPUT&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;/****** Object:  Step [Gold_Debt SSIS ETL Process]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Gold_Debt SSIS ETL Process', &#xA;  @step_id=1, &#xA;  @cmdexec_success_code=0, &#xA;  @on_success_action=1, &#xA;  @on_success_step_id=0, &#xA;  @on_fail_action=2, &#xA;  @on_fail_step_id=0, &#xA;  @retry_attempts=0, &#xA;  @retry_interval=0, &#xA;  @os_run_priority=0, @subsystem=N'SSIS', &#xA;  @command=N'/FILE &quot;\&quot;C:\_BISolutions\Gold_Debt\Gold_Debt\Gold_Debt SSIS ETL Process.dtsx\&quot;&quot; /CHECKPOINTING OFF /REPORTING E', &#xA;  @database_name=N'master', &#xA;  @flags=0&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Gold_Debt SSIS ETL Process Daily Refresh', &#xA;  @enabled=1, &#xA;  @freq_type=4, &#xA;  @freq_interval=1, &#xA;  @freq_subday_type=1, &#xA;  @freq_subday_interval=0, &#xA;  @freq_relative_interval=0, &#xA;  @freq_recurrence_factor=0, &#xA;  @active_start_date=20240527, &#xA;  @active_end_date=99991231, &#xA;  @active_start_time=10000, &#xA;  @active_end_time=235959, &#xA;  @schedule_uid=N'6d3e1ef9-abc3-4a5d-88fa-1c3288595d7d'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;COMMIT TRANSACTION&#xA;GOTO EndSave&#xA;QuitWithRollback:&#xA;    IF (@@TRANCOUNT &gt; 0) ROLLBACK TRANSACTION&#xA;EndSave:&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;--GO&#xA;&#xA;&#xA;------------------------------------------&#xA;--SQL SERVER AGENT SSIS DAILY ETL SCHEDULED RUN ON UW SERVER:&#xA;--DEPENDING ON WHICH SERVER YOU ARE ON, YOU WILL HAVE TO COMMENT ON AND OFF THE SQL SEVER AGENT BLOCKS OF CODE.&#xA;&#xA;&#xA;&#xA;&#xA;--USE [msdb]&#xA;--GO&#xA;----USE [Gold_Debt]&#xA;----GO &#xA;&#xA;----DECLARE @jobID1 Binary(16)&#xA;----SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;----IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;----GO&#xA;&#xA;--CREATE OR ALTER PROCEDURE sp_Gold_Debt_SQLServerAgentDailyRefresh AS&#xA;--BEGIN&#xA;--/****** Object:  Job [Gold_Debt Daily Refresh]    Script Date: 5/27/2024 3:48:22 PM ******/&#xA;--BEGIN TRANSACTION&#xA;--DECLARE @ReturnCode INT&#xA;--SELECT @ReturnCode = 0&#xA;--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;&#xA;--/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 5/27/2024 3:48:23 PM ******/&#xA;--IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)&#xA;--BEGIN&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;&#xA;--END&#xA;&#xA;--DECLARE @jobId BINARY(16)&#xA;--EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Gold_Debt Daily Refresh', &#xA;--  @enabled=1, &#xA;--  @notify_level_eventlog=0, &#xA;--  @notify_level_email=0, &#xA;--  @notify_level_netsend=0, &#xA;--  @notify_level_page=0, &#xA;--  @delete_level=0, &#xA;--  @description=N'No description available.', &#xA;--  @category_name=N'[Uncategorized (Local)]', &#xA;--  @owner_login_name=N'fdgomez', @job_id = @jobId OUTPUT&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--/****** Object:  Step [Gold_Debt SSIS ETL Process]    Script Date: 5/27/2024 3:48:23 PM ******/&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Gold_Debt SSIS ETL Process', &#xA;--  @step_id=1, &#xA;--  @cmdexec_success_code=0, &#xA;--  @on_success_action=1, &#xA;--  @on_success_step_id=0, &#xA;--  @on_fail_action=2, &#xA;--  @on_fail_step_id=0, &#xA;--  @retry_attempts=0, &#xA;--  @retry_interval=0, &#xA;--  @os_run_priority=0, @subsystem=N'SSIS', &#xA;--  @command=N'/FILE &quot;\&quot;C:\_BISolutions\Gold_Debt\Gold_Debt\Gold_Debt SSIS ETL Process.dtsx\&quot;&quot; /CHECKPOINTING OFF /REPORTING E', &#xA;--  @database_name=N'master', &#xA;--  @flags=0&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Gold_Debt SSIS ETL Process Daily Refresh', &#xA;--  @enabled=1, &#xA;--  @freq_type=4, &#xA;--  @freq_interval=1, &#xA;--  @freq_subday_type=1, &#xA;--  @freq_subday_interval=0, &#xA;--  @freq_relative_interval=0, &#xA;--  @freq_recurrence_factor=0, &#xA;--  @active_start_date=20240527, &#xA;--  @active_end_date=99991231, &#xA;--  @active_start_time=10000, &#xA;--  @active_end_time=235959, &#xA;--  @schedule_uid=N'b0dc3b6b-5960-4780-8dae-8e6e15b26258'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--COMMIT TRANSACTION&#xA;--GOTO EndSave&#xA;--QuitWithRollback:&#xA;--    IF (@@TRANCOUNT &gt; 0) ROLLBACK TRANSACTION&#xA;--EndSave:&#xA;--END&#xA;--GO&#xA;&#xA;----EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;----GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Raw Data Bulk Insert Into Staging Tables"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{676FDCEB-950A-4F70-959E-27F88A7AFD7E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Raw Data Bulk Insert Into Staging Tables">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Raw Data Bulk Insert Into Staging Tables\BULK INSERT Into Staging Table StagingBingCovid19DataRaw"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Perform BULK INSERT Into StagingBindCovid19DataRaw From CSV File"
          DTS:DTSID="{475D3264-9320-4967-B75D-9F5EE2712A1C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="BULK INSERT Into Staging Table StagingBingCovid19DataRaw"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLImportBingCovid19DataRawToStagingTable;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Raw Data Bulk Insert Into Staging Tables\BULK INSERT Into Staging Table StagingDebtPennyRaw"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Perform BULK INSERT Into StagingDebtPennyRaw From CSV File"
          DTS:DTSID="{6E6523F7-7189-4AF0-82AA-9867285E8F46}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="BULK INSERT Into Staging Table StagingDebtPennyRaw"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLImportDebtPennyRawToStagingTable;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Run Gold_Debt SQL Queries"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{4BBDDA70-CF78-4899-B0AD-30C0D154799E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Run Gold_Debt SQL Queries">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Run Gold_Debt SQL Queries\Run Gold_Debt SQL Queries"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Run ALL Gold_Debt SQL Scripts"
          DTS:DTSID="{EBDD8CC1-DE48-45C3-96AD-7F9BD0C37645}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Run Gold_Debt SQL Queries"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="--*************************************************************************--&#xA;-- Title: BIDD330A Final&#xA;-- Author: Felipe Gomez&#xA;-- Desc: This file creates our Gold_Data Database, Staging Tables, BULK INSERT INTO our Staging Tables, Dimension and Fact Tables &amp; our Foreign Key Constraints, Flush and Fill ETL process with SQL code&#xA;-- Change Log: When,Who,What&#xA;-- 2024-05-27,Felipe Gomez,Created File&#xA;-- TODO: 05/27/2024,Felipe Gomez,Updated code to include logging and transaction handling&#xA;---------------------------------&#xA;--PLEASE MAKE SURE TO ADD BOTH COVID19 AND DEBT PENNY CSV FILES DO YOUR C:\Data directory!!!!!!!!!!!!!!!!!!!&#xA;USE MASTER&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLGoldDebtDatabaseCreation AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;IF EXISTS (SELECT 1 FROM sys.databases WHERE name = 'Gold_Debt')&#xA;&#x9;&#x9;ALTER DATABASE [Gold_Debt] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;&#xA;&#x9;&#x9;DROP DATABASE [Gold_Debt];&#xA;&#x9;&#x9;CREATE DATABASE [Gold_Debt]&#xA;&#x9;&#x9;ALTER DATABASE [Gold_Debt] SET MULTI_USER;&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Our Database/DataWarehouse Gold_Debt'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;&#xA;--EXEC sp_ETLGoldDebtDatabaseCreation;&#xA;--GO&#xA;------------------------------------&#xA;--CREATE STAGING TABLES&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLStagingBingCovid19DataRaw AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;If (SELECT Object_ID('StagingBingCovid19DataRaw')) IS NOT NULL&#xA;&#x9;&#x9;DROP TABLE StagingBingCovid19DataRaw;&#xA;&#x9;&#x9;CREATE TABLE StagingBingCovid19DataRaw (&#xA;&#x9;&#x9;&#x9;[id] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[updated] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[confirmed] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[confirmed_change] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[deaths] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[deaths_change] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[recovered] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[recovered_change] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[latitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[longitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[iso2] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[iso3] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[country_region] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[admin_region_1] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[iso_subdivision] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[admin_region_2] NVARCHAR(MAX),&#xA;&#x9;&#x9;&#x9;[load_time] NVARCHAR(MAX)&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Staging Table StagingBingCovid19DataRaw for BULK INSERT'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLStagingBingCovid19DataRaw;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLStagingDebtPennyRaw AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;If (SELECT Object_ID('StagingDebtPennyRaw')) IS NOT NULL&#xA;&#x9;&#x9;DROP TABLE StagingDebtPennyRaw;&#xA;&#x9;&#x9;CREATE TABLE StagingDebtPennyRaw (&#xA;&#x9;&#x9;&#x9;[Record Date] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Debt Held by the Public] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Intragovernmental Holdings] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Total Public Debt Outstanding] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Source Line Number] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Fiscal Year] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Fiscal Quarter Number] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Calendar Year] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Calendar Quarter Number] NVARCHAR(200),&#xA;&#x9;&#x9;    [Calendar Month Number] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Calendar Day Number]NVARCHAR(200)&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Staging Table StagingDebtPennyRaw for BULK INSERT'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLStagingDebtPennyRaw;&#xA;--GO&#xA;&#xA;--------------------------------------------------------BULK INSERT RAW CSV FILES INTO OUR STAGING TABLES&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLImportBingCovid19DataRawToStagingTable AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;BULK INSERT [StagingBingCovid19DataRaw]&#xA;&#x9;&#x9;FROM 'C:\Data\bing_covid-19_data.csv' --'\\DESKTOP\Data\bing_covid-19_data.csv' --&#xA;&#x9;&#x9;WITH (&#xA;&#x9;&#x9;&#x9;DATAFILETYPE = 'char',&#xA;&#x9;&#x9;&#x9;FORMAT = 'CSV',&#xA;&#x9;&#x9;&#x9;FIELDTERMINATOR = ',',&#xA;&#x9;&#x9;&#x9;ROWTERMINATOR = '0x0a',&#xA;&#x9;&#x9;&#x9;FIRSTROW = 2,&#xA;&#x9;&#x9;&#x9;MAXERRORS = 0&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Importing COVID19 Raw Data to Staging Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLImportBingCovid19DataRawToStagingTable;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLImportDebtPennyRawToStagingTable AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;BULK INSERT [StagingDebtPennyRaw]&#xA;&#x9;&#x9;FROM 'C:\Data\DebtPenny_20140426_20240425.csv'&#xA;&#x9;&#x9;WITH (&#xA;&#x9;&#x9;&#x9;DATAFILETYPE = 'char',&#xA;&#x9;&#x9;&#x9;FORMAT = 'CSV',&#xA;&#x9;&#x9;&#x9;FIELDTERMINATOR = ',',&#xA;&#x9;&#x9;&#x9;ROWTERMINATOR = '0x0a',&#xA;&#x9;&#x9;&#x9;FIRSTROW = 2,&#xA;&#x9;&#x9;&#x9;MAXERRORS = 0&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Importing Debt Penny Raw Data to Staging Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLImportDebtPennyRawToStagingTable;&#xA;--GO&#xA;&#xA;-------------------------------------------------------------------CREATE DIMENSION AND FACT TABLES (INCLUDING PRIMARY AND FOREGIN KEYS)&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLGoldDebtDimensionAndFactTablesCreation AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;/****** [dbo].[DimDates] ******/&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[DimDates]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[DimDates] (&#xA;&#x9;&#x9;&#x9;[DateKey] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[FullDate] DATETIME NOT NULL,&#xA;&#x9;&#x9;&#x9;[FullDateName] NVARCHAR(200) NULL,&#xA;&#x9;&#x9;&#x9;[WeekID] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[MonthID] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[MonthName] NVARCHAR(200) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Quarter] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[YearQuarter] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[YearID] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[YearName] NVARCHAR(200) NOT NULL,&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_DimDates] PRIMARY KEY CLUSTERED&#xA;&#x9;&#x9;&#x9;([DateKey])&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[DimCountries]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[DimCountries] (&#xA;&#x9;&#x9;&#x9;[CountryKey] INT IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Country] NVARCHAR (200)&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_DimCountries] PRIMARY KEY CLUSTERED&#xA;&#x9;&#x9;&#x9;([CountryKey])&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[DimRegions]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[DimRegions] (&#xA;&#x9;&#x9;&#x9;[RegionKey] INT IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Region] NVARCHAR (200)&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_DimRegion] PRIMARY KEY CLUSTERED&#xA;&#x9;&#x9;&#x9;([RegionKey])&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[FactCovid]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[FactCovid] (&#xA;&#x9;&#x9;&#x9;[FactCovidKey] INT IDENTITY (1,1) NOT NULL, --future Surrogate Key&#xA;&#x9;&#x9;&#x9;[ID] INT,&#xA;&#x9;&#x9;&#x9;[Updated] DATE,&#xA;&#x9;&#x9;&#x9;[DateKey] INT,&#xA;&#x9;&#x9;&#x9;[Confirmed] INT,&#xA;&#x9;&#x9;&#x9;[Confirmed_Change] INT,&#xA;&#x9;&#x9;&#x9;[Deaths] INT,&#xA;&#x9;&#x9;&#x9;[Deaths_Change] INT,&#xA;&#x9;&#x9;&#x9;[Recovered] INT,&#xA;&#x9;&#x9;&#x9;[Recovered_Change] INT,&#xA;&#x9;&#x9;&#x9;[Latitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Longitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Iso2] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Iso3] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Country_Region] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[CountryKey] INT,&#xA;&#x9;&#x9;&#x9;[Admin_Region_1] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[RegionKey] INT NULL,&#xA;&#x9;&#x9;&#x9;[Iso_Subdivision] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Admin_Region_2] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Load_Time] datetime2,&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_FactCovid] PRIMARY KEY CLUSTERED ([FactCovidKey], [ID], [DateKey], [CountryKey])&#xA;&#x9;&#x9;) ON [PRIMARY]&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[FactDebt]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[FactDebt] (&#xA;&#x9;&#x9;&#x9;[FactDebtKey] INT IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Record_Date] DATE NULL,&#xA;&#x9;&#x9;&#x9;[DateKey] INT,&#xA;&#x9;&#x9;&#x9;[Public_Debt] FLOAT NULL,&#xA;&#x9;&#x9;&#x9;[Intragovernmental_Holdings] FLOAT NULL,&#xA;&#x9;&#x9;&#x9;[Total_Public_Debt_Outstanding] FLOAT NULL,&#xA;&#x9;&#x9;&#x9;[Source_Line_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Fiscal_Year] INT NULL,&#xA;&#x9;&#x9;&#x9;[Fiscal_Quarter_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Year] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Quarter_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Month_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Day_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_FactDebt] PRIMARY KEY CLUSTERED ([FactDebtKey], [DateKey])&#xA;&#x9;&#x9;) ON [PRIMARY]&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Dimension and Fact Tables'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLGoldDebtDimensionAndFactTablesCreation;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLGoldDebtForeignKeyConstraints AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimDates] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimCountries] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([CountryKey]) REFERENCES [dbo].[DimCountries] ([CountryKey])&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimRegions] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([RegionKey]) REFERENCES [dbo].[DimRegions] ([RegionKey])&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactDebt] ADD CONSTRAINT [FK_FactDebt_DimDates] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Foreign Key Constraints'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLGoldDebtForeignKeyConstraints;&#xA;--GO&#xA;&#xA;-------------------------------------------------------PERFORM OUR ETL FLUSH AND FILL PROCESS&#xA;&#xA;-- 1) CREATE OUR ETL TABLE, VIEW AND INSERT STORED PROCEDURE&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLLogTable AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;IF NOT Exists(SELECT * FROM Sys.tables WHERE [name] = 'ETLLog')&#xA;&#x9;&#x9;  CREATE -- Drop&#xA;&#x9;&#x9;  TABLE ETLLog&#xA;&#x9;&#x9;  (ETLLogID INT IDENTITY PRIMARY KEY&#xA;&#x9;&#x9;  ,ETLDateAndTime DATETIME DEFAULT GETDATE()&#xA;&#x9;&#x9;  ,ETLAction NVARCHAR(100)&#xA;&#x9;&#x9;  ,ETLLogMessage NVARCHAR(2000)&#xA;&#x9;&#x9;  );&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Log Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLLogTable;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLLogView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW vETLLog&#xA;&#x9;&#x9;AS&#xA;&#x9;&#x9;  SELECT&#xA;&#x9;&#x9;   ETLLogID&#xA;&#x9;&#x9;  ,ETLDate = Format(ETLDateAndTime, ''D'', ''en-us'')&#xA;&#x9;&#x9;  ,ETLTime = Format(Cast(ETLDateAndTime as datetime2), ''HH:mm'', ''en-us'')&#xA;&#x9;&#x9;  ,ETLAction&#xA;&#x9;&#x9;  ,ETLLogMessage&#xA;&#x9;&#x9;  FROM ETLLog');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Log View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;EXEC sp_ETLLogView;&#xA;GO&#xA;&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLInsertETLLog (@ETLAction NVARCHAR(100), @ETLLogMessage NVARCHAR(2000)) AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;    BEGIN TRAN;&#xA;      INSERT INTO [ETLLog] (ETLAction, ETLLogMessage)&#xA;      Values&#xA;       (@ETLAction,@ETLLogMessage)&#xA;    Commit Tran;&#xA;    Set @RC = 1;&#xA;  End Try&#xA;  Begin Catch&#xA;    If @@TRANCOUNT &gt; 0 Rollback Tran;&#xA;    Set @RC = -1;&#xA;  End Catch&#xA;  Return @RC;&#xA;End&#xA;GO -- If you don't put a go here the test code will be included in the Sproc body!&#xA;&#xA;-- 2) CREATE OUR DROP FOREIGN KEY CONSTRAINTS STORED PROCEDURE&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDropForeignKeyConstraints AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;    ALTER TABLE [dbo].[FactCovid] &#xA;     DROP CONSTRAINT [FK_FactCovid_DimDates] &#xA;&#xA;    ALTER TABLE [dbo].[FactCovid] &#xA;     DROP CONSTRAINT [FK_FactCovid_DimCountries] &#xA;&#xA;    ALTER TABLE [dbo].[FactCovid] &#xA;     DROP CONSTRAINT [FK_FactCovid_DimRegions] &#xA;&#xA;    ALTER TABLE [dbo].[FactDebt] &#xA;     DROP CONSTRAINT [FK_FactDebt_DimDates] &#xA;&#xA;    -- Optional: Unlike the other tables DimDates does not change often --&#xA;    --Alter Table [dbo].[FactSalesOrders] &#xA;    -- Drop Constraint [FK_FactSalesOrders_DimDates]&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLDropForeignKeyConstraints'&#xA;&#x9;       ,@ETLLogMessage = 'Foreign Keys dropped';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     DECLARE @ErrorMessage nvarchar(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLDropForeignKeyConstraints'&#xA;&#x9;     ,@ETLLogMessage = 'Foreign Keys cannot be dropped (They may be missing or misnamed)';&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDropForeignKeyConstraints;&#xA;--GO&#xA;&#xA;-- 3) CREATE OUR TRUNCATE TABLES STORED PROCEDURE&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLTruncateTables AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;    -- ETL Processing Code --&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.DimCountries;&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.DimRegions;&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.FactCovid;   &#xA;&#x9;TRUNCATE TABLE [Gold_Debt].dbo.FactDebt;   &#xA;    -- Optional: Unlike the other tables DimDates does not change often --&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.DimDates; &#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLTruncateTables'&#xA;&#x9;       ,@ETLLogMessage = 'Tables data removed';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLTruncateTables'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLTruncateTables;&#xA;--GO&#xA;&#xA;-- 4) CREATE OUR STORED PROCEDURES TO FILL IN OUR DIMENSIONS&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillDimDates AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;      DECLARE @StartDate DATETIME = '01/01/2014'&#xA;      DECLARE @EndDate DATETIME = '12/31/2024' &#xA;      DECLARE @DateInProcess DATETIME  = @StartDate&#xA;      -- Loop through the dates until you reach the end date&#xA;      BEGIN TRAN&#xA;      WHILE @DateInProcess &lt;= @EndDate&#xA;       BEGIN&#xA;       -- Add a row Into the date dimension table for this date&#xA;       INSERT INTO DimDates &#xA;       ( [DateKey],[FullDate],[FullDateName],[WeekID],[MonthID],[MonthName],[Quarter],[YearQuarter],[YearID],[YearName])&#xA;       VALUES ( &#xA;         Cast(Convert(NVARCHAR(50), @DateInProcess, 112) AS INT) -- [DateKey]&#xA;        ,@DateInProcess -- [FullDate]&#xA;        ,DateName(WEEKDAY, @DateInProcess) + ', ' + Convert(NVARCHAR(50), @DateInProcess, 110) -- [FullDateName]&#xA;&#x9;&#x9;,CAST(DATEPART(ISO_WEEK, @DateInProcess) AS INT) --[WeekID]&#xA;        ,Cast(Left(Convert(NVARCHAR(50), @DateInProcess, 112), 6) AS INT)  -- [MonthID]&#xA;        ,DateName(month, @DateInProcess) + ' - ' + DateName(YYYY,@DateInProcess) -- [MonthName]&#xA;&#x9;&#x9;,DATEPART(QUARTER,@DateInProcess) -- [Quarter]&#xA;&#x9;&#x9;,CAST(CONCAT(YEAR(@DateInProcess), DATEPART(QUARTER,@DateInProcess)) AS INT) -- [YearQuarter]&#xA;        ,Year(@DateInProcess) -- [YearID] &#xA;        ,Cast(Year(@DateInProcess ) AS NVARCHAR(50)) -- [YearName] &#xA;        )  &#xA;       -- Add a day and loop again&#xA;       SET @DateInProcess = DateAdd(d, 1, @DateInProcess)&#xA;       END&#xA;&#x9;   COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillDimDates'&#xA;&#x9;       ,@ETLLogMessage = 'DimDates filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog&#xA;&#x9;      @ETLAction = 'sp_ETLFillDimDates'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillDimDates;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLDimCountries AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLDimCountries]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for DimCountries*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9; SELECT DISTINCT [Country_Region] AS [Country]&#xA;&#x9;&#x9;&#x9; FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL DimCountries View For Inserting Data Into Our DimCountries Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLDimCountries;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLDimCountries!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLDimCountries&#xA;--/* Desc: Extracts and transforms data for DimCountries&#xA;--*/&#xA;--AS SELECT DISTINCT [Country_Region] AS [Country] FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillDimCountries AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT Count(*) FROM DimCountries) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].dbo.DimCountries&#xA;      ([Country]&#xA;      )&#xA;      SELECT [Country]&#xA;      FROM vETLDimCountries&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillDimCountries'&#xA;&#x9;       ,@ETLLogMessage = 'DimCountries filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillDimCountries'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillDimCountries;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLDimRegions AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLDimRegions]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for DimRegions*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9; SELECT DISTINCT [Admin_Region_1] AS [Region]&#xA;&#x9;&#x9;&#x9; FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL DimRegions View For Inserting Data Into Our DimRegions Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLDimRegions;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLDimRegions!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLDimRegions&#xA;--/* Desc: Extracts and transforms data for DimRegions&#xA;--*/&#xA;--AS SELECT DISTINCT [Admin_Region_1] AS [Region] FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillDimRegions AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT COUNT(*) FROM DimRegions) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].dbo.DimRegions&#xA;      ([Region]&#xA;      )&#xA;      SELECT [Region]&#xA;      FROM vETLDimRegions&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillDimRegions'&#xA;&#x9;       ,@ETLLogMessage = 'DimRegions filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillDimRegions'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillDimRegions;&#xA;--GO&#xA;&#xA;-- 5) CREATE OUR STORED PROCEDURES TO FILL IN OUR FACTS&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLFactCovid AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLFactCovid]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for FactCovid*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9;  SELECT&#xA;&#x9;&#x9;&#x9;&#x9;   --[FactCovidKey]&#xA;&#x9;&#x9;&#x9;&#x9;   [ID]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Updated]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[DateKey] = [D].[DateKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Confirmed]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Confirmed_Change]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Deaths]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Deaths_Change]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Recovered]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Recovered_Change]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Latitude]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Longitude]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Iso2]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Iso3]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Country_Region]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[CountryKey] = [C].[CountryKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Admin_Region_1]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[RegionKey] = [R].[RegionKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Iso_Subdivision]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Admin_Region_2]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Load_Time]&#xA;&#x9;&#x9;&#x9;  FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimCountries] [C]&#xA;&#x9;&#x9;&#x9;   ON [C19].[Country_Region] = [C].[Country]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimRegions] [R]&#xA;&#x9;&#x9;&#x9;   ON [C19].[Admin_Region_1] = [R].[Region]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D]&#xA;&#x9;&#x9;&#x9;   ON CAST([C19].[Updated] AS DATE) = CAST([D].[FullDate] AS DATE)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL FactCovid View For Inserting Data Into Our FactCovid Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLFactCovid;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLFactCovid!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLFactCovid&#xA;--/* Desc: Extracts and transforms data for FactCovid&#xA;--*/&#xA;--AS&#xA;--  SELECT&#xA;--       --[FactCovidKey]&#xA;--       [ID],[Updated],[CovidDateKey] = [D].[DateKey],[Confirmed],[Confirmed_Change],[Deaths],[Deaths_Change],[Recovered],[Recovered_Change],[Latitude] ,[Longitude],[Iso2],[Iso3]&#xA;--      ,[Country_Region],[CountryKey] = [C].[CountryKey],[Admin_Region_1],[RegionKey] = [R].[RegionKey],[Iso_Subdivision],[Admin_Region_2],[Load_Time]&#xA;--  FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimCountries] [C] ON [C19].[Country_Region] = [C].[Country]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimRegions] [R] ON [C19].[Admin_Region_1] = [R].[Region]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D] ON CAST([C19].[Updated] AS DATE) = CAST([D].[FullDate] AS DATE)&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillFactCovid&#xA;/* Desc: Inserts data Into FactCovid using the vETLFactCovid view&#xA;*/&#xA;AS&#xA; BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY &#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT COUNT(*) FROM [Gold_Debt].[dbo].[FactCovid]) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].[dbo].[FactCovid]&#xA;      ([ID]&#xA;      ,[Updated]&#xA;      ,[DateKey]&#xA;      ,[Confirmed]&#xA;      ,[Confirmed_Change]&#xA;      ,[Deaths]&#xA;      ,[Deaths_Change]&#xA;      ,[Recovered]&#xA;      ,[Recovered_Change]&#xA;      ,[Latitude]&#xA;      ,[Longitude]&#xA;      ,[Iso2]&#xA;      ,[Iso3]&#xA;      ,[Country_Region]&#xA;      ,[CountryKey]&#xA;      ,[Admin_Region_1]&#xA;      ,[RegionKey]&#xA;      ,[Iso_Subdivision]&#xA;      ,[Admin_Region_2]&#xA;      ,[Load_Time]&#xA;      )&#xA;      SELECT&#xA;       [ID]&#xA;      ,[Updated]&#xA;      ,[DateKey]&#xA;      ,[Confirmed]&#xA;      ,[Confirmed_Change]&#xA;      ,[Deaths]&#xA;      ,[Deaths_Change]&#xA;      ,[Recovered]&#xA;      ,[Recovered_Change]&#xA;      ,[Latitude]&#xA;      ,[Longitude]&#xA;      ,[Iso2]&#xA;      ,[Iso3]&#xA;      ,[Country_Region]&#xA;      ,[CountryKey]&#xA;      ,[Admin_Region_1]&#xA;      ,[RegionKey]&#xA;      ,[Iso_Subdivision]&#xA;      ,[Admin_Region_2]&#xA;      ,[Load_Time]&#xA;      FROM [dbo].[vETLFactCovid]&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillFactCovid'&#xA;&#x9;       ,@ETLLogMessage = 'FactCovid filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillFactCovid'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillFactCovid;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLFactDebt AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;--CAST(LEFT(TRIM([Calendar Day Number]), 2) AS char(2))&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLFactDebt]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for FactDebt*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9;  SELECT&#xA;&#x9;&#x9;&#x9;&#x9;   --[FactDebtKey]&#xA;&#x9;&#x9;&#x9;&#x9;   [RecordDate] = [Record Date]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[DateKey] = [D].[DateKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Public_Debt] = CAST([Debt Held by the Public] AS money)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Intragovernmental_Holdings] = CAST([Intragovernmental Holdings] AS money)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Total_Public_Debt_Outstanding] = CAST([Total Public Debt Outstanding] AS money)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Source_Line_Number] = [Source Line Number]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Fiscal_Year] = [Fiscal Year]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Fiscal_Quarter_Number] = [Fiscal Quarter Number]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendar_Year] = [Calendar Year]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendar_Quarter_Number] = CAST(TRIM([Calendar Quarter Number]) AS INT)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendar_Month_Number] = CAST(TRIM([Calendar Month Number]) AS INT)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendary_Day_Number] = CAST(TRIM(REPLACE([Calendar Day Number], CHAR(13), '''')) AS INT)&#xA;&#x9;&#x9;&#x9;  FROM [Gold_Debt].[dbo].[StagingDebtPennyRaw] [DPR]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D]&#xA;&#x9;&#x9;&#x9;   ON CAST([DPR].[Record Date] AS DATE) = CAST([D].[FullDate] AS DATE)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL FactDebt View For Inserting Data Into Our FactDebt Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLFactDebt;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLFactDebt!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLFactDebt&#xA;--/* Desc: Extracts and transforms data for FactCovid&#xA;--*/&#xA;--AS&#xA;--  SELECT&#xA;--       --[FactDebtKey]&#xA;--&#x9;   [RecordDate] = [Record Date],[DebtDateKey] = [D].[DateKey],[Public_Debt] = [Debt Held by the Public],[Intragovernmental_Holdings] = [Intragovernmental Holdings],[Total_Public_Debt_Outstanding] = [Total Public Debt Outstanding],[Source_Line_Number] = [Source Line Number],[Fiscal_Year] = [Fiscal Year]&#xA;--      ,[Fiscal_Quarter_Number] = [Fiscal Quarter Number],[Calendar_Year] = [Calendar Year],[Calendar_Quarter_Number] = [Calendar Quarter Number],[Calendar_Month_Number] = [Calendar Month Number],[Calendary_Day_Number] = [Calendar Day Number]&#xA;--  FROM [Gold_Debt].[dbo].[StagingDebtPennyRaw] [DPR]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D] ON CAST([DPR].[Record Date] AS DATE) = CAST([D].[FullDate] AS DATE)&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillFactDebt&#xA;/* Desc: Inserts data Into FactCovid using the vETLFactCovid view&#xA;*/&#xA;AS&#xA; BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY &#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT COUNT(*) FROM FactDebt) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].[dbo].[FactDebt]&#xA;      ([Record_Date]&#xA;      ,[DateKey]&#xA;      ,[Public_Debt]&#xA;      ,[Intragovernmental_Holdings]&#xA;      ,[Total_Public_Debt_Outstanding]&#xA;      ,[Source_Line_Number]&#xA;      ,[Fiscal_Year]&#xA;      ,[Fiscal_Quarter_Number]&#xA;      ,[Calendar_Year]&#xA;      ,[Calendar_Quarter_Number]&#xA;      ,[Calendar_Month_Number]&#xA;      ,[Calendar_Day_Number]&#xA;      )&#xA;      SELECT&#xA;&#x9;   [RecordDate]&#xA;&#x9;  ,[DateKey]&#xA;      ,[Public_Debt]&#xA;      ,[Intragovernmental_Holdings]&#xA;      ,[Total_Public_Debt_Outstanding]&#xA;      ,[Source_Line_Number]&#xA;      ,[Fiscal_Year]&#xA;      ,[Fiscal_Quarter_Number]&#xA;      ,[Calendar_Year]&#xA;      ,[Calendar_Quarter_Number]&#xA;      ,[Calendar_Month_Number]&#xA;      ,[Calendary_Day_Number]&#xA;      FROM vETLFactDebt&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillFactDebt'&#xA;&#x9;       ,@ETLLogMessage = 'FactDebt filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillFactDebt'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillFactDebt;&#xA;--GO&#xA;&#xA;-- 6) Add Back Foreign Keys&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLAddForeignKeyConstraints&#xA;/* Desc: This Sproc Replaces the Foreign Keys Constraints.&#xA;*/&#xA;AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 1;&#xA;&#x9;DECLARE @Message NVARCHAR(1000);&#xA;  BEGIN TRY&#xA;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimDates] &#xA;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimCountries] &#xA;&#x9;&#x9;FOREIGN KEY ([CountryKey]) REFERENCES [dbo].[DimCountries] ([CountryKey])&#xA;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimRegions] &#xA;&#x9;&#x9;FOREIGN KEY ([RegionKey]) REFERENCES [dbo].[DimRegions] ([RegionKey])&#xA;&#x9;ALTER TABLE [dbo].[FactDebt] ADD CONSTRAINT [FK_FactDebt_DimDates] &#xA;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;SET @Message = 'Foreign Keys replaced on all tables';&#xA;&#x9;EXEC sp_ETLInsertETLLog&#xA; &#x9;       @ETLAction = 'sp_ETLAddForeignKeyConstraints'&#xA; &#x9;      ,@ETLLogMessage = @Message;&#xA;    SET @RC = 1;&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;    IF @@TRANCOUNT &gt; 0 ROLLBACK;&#xA;    DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;    EXEC sp_ETLInsertETLLog &#xA;         @ETLAction = 'sp_ETLAddForeignKeyConstraints'&#xA;        ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1;&#xA;  END CATCH&#xA;  RETURN @RC;&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLAddForeignKeyConstraints;&#xA;--GO&#xA;&#xA;--********************************************************************--&#xA;-- D) Review the results of this script&#xA;--********************************************************************--&#xA;--go&#xA;--Declare @Status int;&#xA;--Exec @Status = sp_ETLDropForeignKeyConstraints;&#xA;--Select [Object] = 'pETLDropForeignKeyConstraints', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLTruncateTables;&#xA;--Select [Object] = 'pETLTruncateTables', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillDimDates;&#xA;--Select [Object] = 'pETLFillDimDates', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillDimCountries;&#xA;--Select [Object] = 'pETLFillDimProducts', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillDimRegions;&#xA;--Select [Object] = 'pETLFillDimCustomers', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillFactCovid;&#xA;--Select [Object] = 'pETLFillFactOrders', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLAddForeignKeyConstraints;&#xA;--Select [Object] = 'pETLAddForeignKeyConstraints', [Status] = @Status;&#xA;&#xA;--go&#xA;--Select [DimDates] = Count(*) From [dbo].[DimDates];&#xA;--Select [DimCountries] = Count(*) From [dbo].[DimCountrires];&#xA;--Select [DimRegions] = Count(*) From [dbo].[DimRegions];&#xA;--Select [FactCovid] = Count(*) From [dbo].[FactCovid];&#xA;--Select [FactDebt] = Count(*) From [dbo].[FactDebt];&#xA;--Select * From vETLLog;&#xA;----Delete From ETLLog;&#xA;&#xA;-------------------------------------------------&#xA;------CREATE FINAL VIEWS FOR POWER BI------------&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDimDatesView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vDimDates]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[DimDates] WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;  ORDER BY [FullDate] ASC&#xA;&#x9;&#x9;&#x9;  OFFSET 0 ROWS');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final DimDates View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDimDatesView;&#xA;--GO&#xA;&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDimCountriesView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vDimCountries]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[DimCountries] WITH (NOLOCK)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final DimCountries View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDimCountriesView;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDimRegionsView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vDimRegions]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[DimRegions] WITH (NOLOCK)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final DimRegions View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDimRegionsView;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFactCovidView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vFactCovid]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[FactCovid] WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;  ORDER BY [Updated] ASC&#xA;&#x9;&#x9;&#x9;  OFFSET 0 ROWS');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final FactCovid View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFactCovidView;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFactDebtView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vFactDebt]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[FactDebt] WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;  ORDER BY [Record_Date] ASC&#xA;&#x9;&#x9;&#x9;  OFFSET 0 ROWS');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final FactDebt View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFactDebtView;&#xA;--GO&#xA;&#xA;--WE ARE SETTING UP DAILY SCHEDULED REFRESHES USING SQL SERVER AGENT! --THIS CODE IS NOT COPIED IN THE FIRST SEQUENCE CONTAINERS THAT RUNS CODE. WE RUN THIS AS A SEPARATE SQL SCRIPT IN THE FIRST AND THIRD SEQUENCE CONTAINER AS WELL AS THE LAST SEQUENCE CONTAINER &quot;SQL SERVER AGENT SCHEDULE REFRESH &amp; NEXT STEPS&quot;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Run Gold_Debt SQL Queries\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:Disabled="True"
          DTS:DTSID="{5891261e-ef08-4d3e-a4c7-19d971843be4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{206E145E-0BF0-4F36-969E-8839F40C0A2B}"
              SQLTask:SqlStatementSource="--WE ARE SETTING UP DAILY SCHEDULED REFRESHES USING SQL SERVER AGENT!&#xA;-------------------------------------------------------------------------------------------------------&#xA;--SQL SERVER AGENT SCHEDULED REFRESH FOR LOCAL INSTANCE&#xA;--DEPENDING ON WHICH SERVER YOU ARE ON, YOU WILL HAVE TO COMMENT ON AND OFF THE SQL SEVER AGENT BLOCKS OF CODE.&#xA;&#xA;&#xA;USE [msdb]&#xA;GO&#xA;--USE [Gold_Debt]&#xA;--GO &#xA;&#xA;--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_Gold_Debt_SQLServerAgentDailyRefresh AS&#xA;BEGIN&#xA;&#xA;/****** Object:  Job [Gold_Debt Daily Refresh]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;BEGIN TRANSACTION&#xA;DECLARE @ReturnCode INT&#xA;SELECT @ReturnCode = 0&#xA;DECLARE @jobID1 Binary(16)&#xA;SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;&#xA;/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)&#xA;BEGIN&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;&#xA;END&#xA;&#xA;DECLARE @jobId BINARY(16)&#xA;EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Gold_Debt Daily Refresh', &#xA;  @enabled=1, &#xA;  @notify_level_eventlog=0, &#xA;  @notify_level_email=0, &#xA;  @notify_level_netsend=0, &#xA;  @notify_level_page=0, &#xA;  @delete_level=0, &#xA;  @description=N'No description available.', &#xA;  @category_name=N'[Uncategorized (Local)]', &#xA;  @owner_login_name=N'DESKTOP-L3H8CVG\Felipe', @job_id = @jobId OUTPUT&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;/****** Object:  Step [Gold_Debt SSIS ETL Process]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Gold_Debt SSIS ETL Process', &#xA;  @step_id=1, &#xA;  @cmdexec_success_code=0, &#xA;  @on_success_action=1, &#xA;  @on_success_step_id=0, &#xA;  @on_fail_action=2, &#xA;  @on_fail_step_id=0, &#xA;  @retry_attempts=0, &#xA;  @retry_interval=0, &#xA;  @os_run_priority=0, @subsystem=N'SSIS', &#xA;  @command=N'/FILE &quot;\&quot;C:\_BISolutions\Gold_Debt\Gold_Debt\Gold_Debt SSIS ETL Process.dtsx\&quot;&quot; /CHECKPOINTING OFF /REPORTING E', &#xA;  @database_name=N'master', &#xA;  @flags=0&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Gold_Debt SSIS ETL Process Daily Refresh', &#xA;  @enabled=1, &#xA;  @freq_type=4, &#xA;  @freq_interval=1, &#xA;  @freq_subday_type=1, &#xA;  @freq_subday_interval=0, &#xA;  @freq_relative_interval=0, &#xA;  @freq_recurrence_factor=0, &#xA;  @active_start_date=20240527, &#xA;  @active_end_date=99991231, &#xA;  @active_start_time=10000, &#xA;  @active_end_time=235959, &#xA;  @schedule_uid=N'6d3e1ef9-abc3-4a5d-88fa-1c3288595d7d'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;COMMIT TRANSACTION&#xA;GOTO EndSave&#xA;QuitWithRollback:&#xA;    IF (@@TRANCOUNT &gt; 0) ROLLBACK TRANSACTION&#xA;EndSave:&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;--GO&#xA;&#xA;&#xA;------------------------------------------&#xA;--SQL SERVER AGENT SSIS DAILY ETL SCHEDULED RUN ON UW SERVER:&#xA;--DEPENDING ON WHICH SERVER YOU ARE ON, YOU WILL HAVE TO COMMENT ON AND OFF THE SQL SEVER AGENT BLOCKS OF CODE.&#xA;&#xA;&#xA;&#xA;&#xA;--USE [msdb]&#xA;--GO&#xA;----USE [Gold_Debt]&#xA;----GO &#xA;&#xA;----DECLARE @jobID1 Binary(16)&#xA;----SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;----IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;----GO&#xA;&#xA;--CREATE OR ALTER PROCEDURE sp_Gold_Debt_SQLServerAgentDailyRefresh AS&#xA;--BEGIN&#xA;--/****** Object:  Job [Gold_Debt Daily Refresh]    Script Date: 5/27/2024 3:48:22 PM ******/&#xA;--BEGIN TRANSACTION&#xA;--DECLARE @ReturnCode INT&#xA;--SELECT @ReturnCode = 0&#xA;--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;&#xA;--/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 5/27/2024 3:48:23 PM ******/&#xA;--IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)&#xA;--BEGIN&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;&#xA;--END&#xA;&#xA;--DECLARE @jobId BINARY(16)&#xA;--EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Gold_Debt Daily Refresh', &#xA;--  @enabled=1, &#xA;--  @notify_level_eventlog=0, &#xA;--  @notify_level_email=0, &#xA;--  @notify_level_netsend=0, &#xA;--  @notify_level_page=0, &#xA;--  @delete_level=0, &#xA;--  @description=N'No description available.', &#xA;--  @category_name=N'[Uncategorized (Local)]', &#xA;--  @owner_login_name=N'fdgomez', @job_id = @jobId OUTPUT&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--/****** Object:  Step [Gold_Debt SSIS ETL Process]    Script Date: 5/27/2024 3:48:23 PM ******/&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Gold_Debt SSIS ETL Process', &#xA;--  @step_id=1, &#xA;--  @cmdexec_success_code=0, &#xA;--  @on_success_action=1, &#xA;--  @on_success_step_id=0, &#xA;--  @on_fail_action=2, &#xA;--  @on_fail_step_id=0, &#xA;--  @retry_attempts=0, &#xA;--  @retry_interval=0, &#xA;--  @os_run_priority=0, @subsystem=N'SSIS', &#xA;--  @command=N'/FILE &quot;\&quot;C:\_BISolutions\Gold_Debt\Gold_Debt\Gold_Debt SSIS ETL Process.dtsx\&quot;&quot; /CHECKPOINTING OFF /REPORTING E', &#xA;--  @database_name=N'master', &#xA;--  @flags=0&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Gold_Debt SSIS ETL Process Daily Refresh', &#xA;--  @enabled=1, &#xA;--  @freq_type=4, &#xA;--  @freq_interval=1, &#xA;--  @freq_subday_type=1, &#xA;--  @freq_subday_interval=0, &#xA;--  @freq_relative_interval=0, &#xA;--  @freq_recurrence_factor=0, &#xA;--  @active_start_date=20240527, &#xA;--  @active_end_date=99991231, &#xA;--  @active_start_time=10000, &#xA;--  @active_end_time=235959, &#xA;--  @schedule_uid=N'b0dc3b6b-5960-4780-8dae-8e6e15b26258'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--COMMIT TRANSACTION&#xA;--GOTO EndSave&#xA;--QuitWithRollback:&#xA;--    IF (@@TRANCOUNT &gt; 0) ROLLBACK TRANSACTION&#xA;--EndSave:&#xA;--END&#xA;--GO&#xA;&#xA;----EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;----GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Server Agent Schedule Refresh &amp; Next Steps"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{8881AB1D-D855-4EC5-A5D6-C01F390D0329}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Server Agent Schedule Refresh &amp; Next Steps">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SQL Server Agent Schedule Refresh &amp; Next Steps\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:DTSID="{BC0F84B2-FE76-44B9-82DC-F742C555690B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{206E145E-0BF0-4F36-969E-8839F40C0A2B}"
              SQLTask:SqlStatementSource="--WE ARE SETTING UP DAILY SCHEDULED REFRESHES USING SQL SERVER AGENT!&#xA;-------------------------------------------------------------------------------------------------------&#xA;--SQL SERVER AGENT SCHEDULED REFRESH FOR LOCAL INSTANCE&#xA;--DEPENDING ON WHICH SERVER YOU ARE ON, YOU WILL HAVE TO COMMENT ON AND OFF THE SQL SEVER AGENT BLOCKS OF CODE.&#xA;&#xA;&#xA;USE [msdb]&#xA;GO&#xA;--USE [Gold_Debt]&#xA;--GO &#xA;&#xA;--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_Gold_Debt_SQLServerAgentDailyRefresh AS&#xA;BEGIN&#xA;&#xA;/****** Object:  Job [Gold_Debt Daily Refresh]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;BEGIN TRANSACTION&#xA;DECLARE @ReturnCode INT&#xA;SELECT @ReturnCode = 0&#xA;DECLARE @jobID1 Binary(16)&#xA;SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;&#xA;/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)&#xA;BEGIN&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;&#xA;END&#xA;&#xA;DECLARE @jobId BINARY(16)&#xA;EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Gold_Debt Daily Refresh', &#xA;&#x9;&#x9;@enabled=1, &#xA;&#x9;&#x9;@notify_level_eventlog=0, &#xA;&#x9;&#x9;@notify_level_email=0, &#xA;&#x9;&#x9;@notify_level_netsend=0, &#xA;&#x9;&#x9;@notify_level_page=0, &#xA;&#x9;&#x9;@delete_level=0, &#xA;&#x9;&#x9;@description=N'No description available.', &#xA;&#x9;&#x9;@category_name=N'[Uncategorized (Local)]', &#xA;&#x9;&#x9;@owner_login_name=N'DESKTOP-L3H8CVG\Felipe', @job_id = @jobId OUTPUT&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;/****** Object:  Step [Gold_Debt SSIS ETL Process]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Gold_Debt SSIS ETL Process', &#xA;&#x9;&#x9;@step_id=1, &#xA;&#x9;&#x9;@cmdexec_success_code=0, &#xA;&#x9;&#x9;@on_success_action=1, &#xA;&#x9;&#x9;@on_success_step_id=0, &#xA;&#x9;&#x9;@on_fail_action=2, &#xA;&#x9;&#x9;@on_fail_step_id=0, &#xA;&#x9;&#x9;@retry_attempts=0, &#xA;&#x9;&#x9;@retry_interval=0, &#xA;&#x9;&#x9;@os_run_priority=0, @subsystem=N'SSIS', &#xA;&#x9;&#x9;@command=N'/FILE &quot;\&quot;C:\_BISolutions\Gold_Debt\Gold_Debt\Gold_Debt SSIS ETL Process.dtsx\&quot;&quot; /CHECKPOINTING OFF /REPORTING E', &#xA;&#x9;&#x9;@database_name=N'master', &#xA;&#x9;&#x9;@flags=0&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Gold_Debt SSIS ETL Process Daily Refresh', &#xA;&#x9;&#x9;@enabled=1, &#xA;&#x9;&#x9;@freq_type=4, &#xA;&#x9;&#x9;@freq_interval=1, &#xA;&#x9;&#x9;@freq_subday_type=1, &#xA;&#x9;&#x9;@freq_subday_interval=0, &#xA;&#x9;&#x9;@freq_relative_interval=0, &#xA;&#x9;&#x9;@freq_recurrence_factor=0, &#xA;&#x9;&#x9;@active_start_date=20240527, &#xA;&#x9;&#x9;@active_end_date=99991231, &#xA;&#x9;&#x9;@active_start_time=10000, &#xA;&#x9;&#x9;@active_end_time=235959, &#xA;&#x9;&#x9;@schedule_uid=N'6d3e1ef9-abc3-4a5d-88fa-1c3288595d7d'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;COMMIT TRANSACTION&#xA;GOTO EndSave&#xA;QuitWithRollback:&#xA;    IF (@@TRANCOUNT &gt; 0) ROLLBACK TRANSACTION&#xA;EndSave:&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;--GO&#xA;&#xA;&#xA;------------------------------------------&#xA;--SQL SERVER AGENT SSIS DAILY ETL SCHEDULED RUN ON UW SERVER:&#xA;--DEPENDING ON WHICH SERVER YOU ARE ON, YOU WILL HAVE TO COMMENT ON AND OFF THE SQL SEVER AGENT BLOCKS OF CODE.&#xA;&#xA;&#xA;&#xA;&#xA;--USE [msdb]&#xA;--GO&#xA;----USE [Gold_Debt]&#xA;----GO &#xA;&#xA;----DECLARE @jobID1 Binary(16)&#xA;----SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;----IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;----GO&#xA;&#xA;--CREATE OR ALTER PROCEDURE sp_Gold_Debt_SQLServerAgentDailyRefresh AS&#xA;--BEGIN&#xA;--/****** Object:  Job [Gold_Debt Daily Refresh]    Script Date: 5/27/2024 3:48:22 PM ******/&#xA;--BEGIN TRANSACTION&#xA;--DECLARE @ReturnCode INT&#xA;--SELECT @ReturnCode = 0&#xA;--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;&#xA;--/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 5/27/2024 3:48:23 PM ******/&#xA;--IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)&#xA;--BEGIN&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;&#xA;--END&#xA;&#xA;--DECLARE @jobId BINARY(16)&#xA;--EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Gold_Debt Daily Refresh', &#xA;--&#x9;&#x9;@enabled=1, &#xA;--&#x9;&#x9;@notify_level_eventlog=0, &#xA;--&#x9;&#x9;@notify_level_email=0, &#xA;--&#x9;&#x9;@notify_level_netsend=0, &#xA;--&#x9;&#x9;@notify_level_page=0, &#xA;--&#x9;&#x9;@delete_level=0, &#xA;--&#x9;&#x9;@description=N'No description available.', &#xA;--&#x9;&#x9;@category_name=N'[Uncategorized (Local)]', &#xA;--&#x9;&#x9;@owner_login_name=N'fdgomez', @job_id = @jobId OUTPUT&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--/****** Object:  Step [Gold_Debt SSIS ETL Process]    Script Date: 5/27/2024 3:48:23 PM ******/&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Gold_Debt SSIS ETL Process', &#xA;--&#x9;&#x9;@step_id=1, &#xA;--&#x9;&#x9;@cmdexec_success_code=0, &#xA;--&#x9;&#x9;@on_success_action=1, &#xA;--&#x9;&#x9;@on_success_step_id=0, &#xA;--&#x9;&#x9;@on_fail_action=2, &#xA;--&#x9;&#x9;@on_fail_step_id=0, &#xA;--&#x9;&#x9;@retry_attempts=0, &#xA;--&#x9;&#x9;@retry_interval=0, &#xA;--&#x9;&#x9;@os_run_priority=0, @subsystem=N'SSIS', &#xA;--&#x9;&#x9;@command=N'/FILE &quot;\&quot;C:\_BISolutions\Gold_Debt\Gold_Debt\Gold_Debt SSIS ETL Process.dtsx\&quot;&quot; /CHECKPOINTING OFF /REPORTING E', &#xA;--&#x9;&#x9;@database_name=N'master', &#xA;--&#x9;&#x9;@flags=0&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Gold_Debt SSIS ETL Process Daily Refresh', &#xA;--&#x9;&#x9;@enabled=1, &#xA;--&#x9;&#x9;@freq_type=4, &#xA;--&#x9;&#x9;@freq_interval=1, &#xA;--&#x9;&#x9;@freq_subday_type=1, &#xA;--&#x9;&#x9;@freq_subday_interval=0, &#xA;--&#x9;&#x9;@freq_relative_interval=0, &#xA;--&#x9;&#x9;@freq_recurrence_factor=0, &#xA;--&#x9;&#x9;@active_start_date=20240527, &#xA;--&#x9;&#x9;@active_end_date=99991231, &#xA;--&#x9;&#x9;@active_start_time=10000, &#xA;--&#x9;&#x9;@active_end_time=235959, &#xA;--&#x9;&#x9;@schedule_uid=N'b0dc3b6b-5960-4780-8dae-8e6e15b26258'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--COMMIT TRANSACTION&#xA;--GOTO EndSave&#xA;--QuitWithRollback:&#xA;--    IF (@@TRANCOUNT &gt; 0) ROLLBACK TRANSACTION&#xA;--EndSave:&#xA;--END&#xA;--GO&#xA;&#xA;----EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;----GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SQL Server Agent Schedule Refresh &amp; Next Steps\SQL SERVER AGENT GOLD_DEBT DAILY ETL REFRESH"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3F2AB601-8F65-4539-8F4F-A145DA8E0E19}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL SERVER AGENT GOLD_DEBT DAILY ETL REFRESH"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{206E145E-0BF0-4F36-969E-8839F40C0A2B}"
              SQLTask:SqlStatementSource="--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;--GO&#xA;&#xA;EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SQL Server Agent Schedule Refresh &amp; Next Steps.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{AAF3DD7B-9A72-46DE-80F6-F329F9E677BD}"
          DTS:From="Package\SQL Server Agent Schedule Refresh &amp; Next Steps\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SQL Server Agent Schedule Refresh &amp; Next Steps\SQL SERVER AGENT GOLD_DEBT DAILY ETL REFRESH" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{CDEE3E53-724F-4CAC-B3B7-D916F1E7E3DD}"
      DTS:From="Package\Gold_Debt Database Creation"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Run Gold_Debt SQL Queries" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{B7F73828-B8B3-40C1-B63E-733B3C38EB20}"
      DTS:From="Package\Raw Data Bulk Insert Into Staging Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{0AA1E452-4F72-455C-B80F-0307B7F06065}"
      DTS:From="Package\Create Dimension and Fact ETL Views"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\Dimension &amp; Fact Tables Refresh" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{8056EF01-0EE5-4436-A4A3-9BD064203047}"
      DTS:From="Package\Run Gold_Debt SQL Queries"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\Gold_Debt Staging Tables Creation" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{A016B270-20FF-43E5-A55D-AC18B3E2A2A3}"
      DTS:From="Package\Dimension &amp; Fact Tables Refresh"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Add Back Foreign Keys" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{6F4E81D6-2BDB-475A-B37D-5DC59C08BBFD}"
      DTS:From="Package\Add Back Foreign Keys"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Generate Views Refresh" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{64415150-7E77-4778-8148-244AF42EC81E}"
      DTS:From="Package\Generate Views Refresh"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\SQL Server Agent Schedule Refresh &amp; Next Steps" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{D938A2ED-FB11-4A4C-80E0-DD8C1B8BB533}"
      DTS:From="Package\Gold_Debt Staging Tables Creation"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Raw Data Bulk Insert Into Staging Tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{3C336F58-B775-47BF-9D84-3F2BDBB7D28E}"
      DTS:From="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Create ETLLog Table &amp; ETLLogView" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{9CBD1ADE-CD71-4E3A-B15F-B8C8B2A9F93A}"
      DTS:From="Package\Create ETLLog Table &amp; ETLLogView"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Drop Foreign Keys &amp; Truncate Tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{DE171F6E-4AE7-4181-A62F-C82C977EF965}"
      DTS:From="Package\Drop Foreign Keys &amp; Truncate Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Create Dimension and Fact ETL Views" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{F09161E9-D66A-4517-AE4D-D3F96959BCED}"
      DTS:From="Package\PRE SSIS RUN"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Gold_Debt Database Creation" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="186,42"
          Id="Package\Add Back Foreign Keys\Add Back Foreign Keys"
          TopLeft="26.6666666666665,14.3333333333333" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="332,129"
          Size="332,172"
          Id="Package\Add Back Foreign Keys"
          TopLeft="905.35714285714,729.420634920634" />
        <NodeLayout
          Size="222,42"
          Id="Package\Create Dimension and Fact ETL Views\Create DimCountries ETL View"
          TopLeft="21.2222222222222,13.8888888888889" />
        <NodeLayout
          Size="215,42"
          Id="Package\Create Dimension and Fact ETL Views\Create DimRegions ETL View"
          TopLeft="20.2499999999998,58.75" />
        <NodeLayout
          Size="205,42"
          Id="Package\Create Dimension and Fact ETL Views\Create FactCovid ETL View"
          TopLeft="21.75,111" />
        <NodeLayout
          Size="209,42"
          Id="Package\Create Dimension and Fact ETL Views\Create FactDebt ETL View"
          TopLeft="20.5,159.75" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="296,304"
          Size="296,347"
          Id="Package\Create Dimension and Fact ETL Views"
          TopLeft="1507.00396825397,357.222222222222" />
        <NodeLayout
          Size="180,42"
          Id="Package\Create ETLLog Table &amp; ETLLogView\Create ETL Log Table"
          TopLeft="27.7777777777778,19.3333333333334" />
        <NodeLayout
          Size="176,42"
          Id="Package\Create ETLLog Table &amp; ETLLogView\Create ETL Log View"
          TopLeft="29.0277777777777,86.8333333333334" />
        <EdgeLayout
          Id="Package\Create ETLLog Table &amp; ETLLogView.PrecedenceConstraints[Constraint]"
          TopLeft="117.402777777778,61.3333333333334">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.5"
              Start="0,0"
              End="0,18">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="274,179"
          Size="274,222"
          Id="Package\Create ETLLog Table &amp; ETLLogView"
          TopLeft="849.305555555553,367.837301587301" />
        <NodeLayout
          Size="295,42"
          Id="Package\Dimension &amp; Fact Tables Refresh\Dim Countries Flush and Fill Stored Procedure"
          TopLeft="30.1666666666664,74" />
        <NodeLayout
          Size="293,42"
          Id="Package\Dimension &amp; Fact Tables Refresh\Dim Dates Flush and Fill Stored Procedure"
          TopLeft="28,16.2222222222223" />
        <NodeLayout
          Size="289,42"
          Id="Package\Dimension &amp; Fact Tables Refresh\Dim Regions Flush and Fill Stored Procedure"
          TopLeft="37.9444444444441,128.444444444444" />
        <NodeLayout
          Size="277,42"
          Id="Package\Dimension &amp; Fact Tables Refresh\Fact Covid Flush and Fill Stored Procedure"
          TopLeft="25.7222222222224,199.777777777778" />
        <NodeLayout
          Size="274,42"
          Id="Package\Dimension &amp; Fact Tables Refresh\Fact Debt Flush and Fill Stored Procedure"
          TopLeft="28.3888888888886,259.888888888889" />
        <EdgeLayout
          Id="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint]"
          TopLeft="28,37.2222222222223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2.1666666666664,52.111111111111"
              Start="0,0"
              End="-5.3333333333336,52.111111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,48.111111111111" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,48.111111111111"
                    Point2="-22.5,52.111111111111"
                    Point3="-18.5,52.111111111111" />
                  <mssgle:LineSegment
                    End="-5.3333333333336,52.111111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint 1]"
          TopLeft="30.1666666666664,100.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="7.77777777777771,48.7777777777778"
              Start="0,0"
              End="0.277777777777715,48.7777777777778">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,44.7777777777778" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,44.7777777777778"
                    Point2="-22.5,48.7777777777778"
                    Point3="-18.5,48.7777777777778" />
                  <mssgle:LineSegment
                    End="0.277777777777715,48.7777777777778" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint 2]"
          TopLeft="182.444444444444,170.444444444444">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18.2222222222217,29.3333333333339"
              Start="0,0"
              End="-18.2222222222217,21.8333333333339">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.666666666667"
                    Point2="0,14.666666666667"
                    Point3="-4,14.666666666667" />
                  <mssgle:LineSegment
                    End="-14.2222222222217,14.666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.2222222222217,14.666666666667"
                    Point2="-18.2222222222217,14.666666666667"
                    Point3="-18.2222222222217,18.666666666667" />
                  <mssgle:LineSegment
                    End="-18.2222222222217,21.8333333333339" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint 3]"
          TopLeft="25.7222222222224,220.777777777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2.66666666666617,60.1111111111104"
              Start="0,0"
              End="-4.83333333333383,60.1111111111104">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,56.1111111111104" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,56.1111111111104"
                    Point2="-22.5,60.1111111111104"
                    Point3="-18.5,60.1111111111104" />
                  <mssgle:LineSegment
                    End="-4.83333333333383,60.1111111111104" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="341,321"
          Size="341,364"
          Id="Package\Dimension &amp; Fact Tables Refresh"
          TopLeft="381.777777777774,590.694444444444" />
        <NodeLayout
          Size="165,42"
          Id="Package\Drop Foreign Keys &amp; Truncate Tables\Drop Foreign Keys"
          TopLeft="28,12.1111111111111" />
        <NodeLayout
          Size="155,42"
          Id="Package\Drop Foreign Keys &amp; Truncate Tables\Truncate Tables"
          TopLeft="23.5555555555557,76.5555555555557" />
        <EdgeLayout
          Id="Package\Drop Foreign Keys &amp; Truncate Tables.PrecedenceConstraints[Constraint]"
          TopLeft="193,33.1111111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14.4444444444443,64.4444444444446"
              Start="0,0"
              End="-6.94444444444434,64.4444444444446">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5,0"
                    Point2="22.5,0"
                    Point3="22.5,4" />
                  <mssgle:LineSegment
                    End="22.5,60.4444444444446" />
                  <mssgle:CubicBezierSegment
                    Point1="22.5,60.4444444444446"
                    Point2="22.5,64.4444444444446"
                    Point3="18.5,64.4444444444446" />
                  <mssgle:LineSegment
                    End="-6.94444444444434,64.4444444444446" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="284,141"
          Size="284,184"
          Id="Package\Drop Foreign Keys &amp; Truncate Tables"
          TopLeft="1177.1626984127,371.944444444444" />
        <NodeLayout
          Size="256,42"
          Id="Package\Generate Views Refresh\Create Or Alter vDimCountries View"
          TopLeft="25.8888888888889,52.1111111111111" />
        <NodeLayout
          Size="229,42"
          Id="Package\Generate Views Refresh\Create Or Alter vDimDates View"
          TopLeft="27,3.22222222222229" />
        <NodeLayout
          Size="240,42"
          Id="Package\Generate Views Refresh\Create Or Alter vDimRegions View"
          TopLeft="29.2222222222224,103.222222222222" />
        <NodeLayout
          Size="229,42"
          Id="Package\Generate Views Refresh\Create Or Alter vFactCovid View"
          TopLeft="28.1111111111111,154.333333333333" />
        <NodeLayout
          Size="225,42"
          Id="Package\Generate Views Refresh\Create Or alter vFactDebt View"
          TopLeft="31.4444444444443,209.888888888889" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="343,307"
          Size="343,350"
          Id="Package\Generate Views Refresh"
          TopLeft="1415.54761904762,735.09126984127" />
        <NodeLayout
          Size="228,42"
          Id="Package\Gold_Debt Database Creation\Gold_Debt Database Creation"
          TopLeft="6,22" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="249,156"
          Size="249,199"
          Id="Package\Gold_Debt Database Creation"
          TopLeft="705.523809523808,112.174603174603" />
        <NodeLayout
          Size="410,42"
          Id="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation\Gold_Debt Add Foreign Key Constraints To Dimension and Fact Tables"
          TopLeft="25,88" />
        <NodeLayout
          Size="301,42"
          Id="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation\Gold_Debt Dimension and Fact Tables Creation"
          TopLeft="26.6666666666667,15.2222222222222" />
        <EdgeLayout
          Id="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation.PrecedenceConstraints[Constraint]"
          TopLeft="177.166666666667,57.2222222222222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.8333333333333,30.7777777777778"
              Start="0,0"
              End="52.8333333333333,23.2777777777778">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.3888888888889" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.3888888888889"
                    Point2="0,15.3888888888889"
                    Point3="4,15.3888888888889" />
                  <mssgle:LineSegment
                    End="48.8333333333333,15.3888888888889" />
                  <mssgle:CubicBezierSegment
                    Point1="48.8333333333333,15.3888888888889"
                    Point2="52.8333333333333,15.3888888888889"
                    Point3="52.8333333333333,19.3888888888889" />
                  <mssgle:LineSegment
                    End="52.8333333333333,23.2777777777778" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="440,147"
          Size="440,190"
          Id="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation"
          TopLeft="374.849206349205,363.563492063492" />
        <NodeLayout
          Size="325,42"
          Id="Package\Gold_Debt Staging Tables Creation\StagingBingCovid19DataRaw Staging Table Creation"
          TopLeft="8,10" />
        <NodeLayout
          Size="296,42"
          Id="Package\Gold_Debt Staging Tables Creation\StagingDebtPennyRaw Staging Table Creation"
          TopLeft="11,74" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="338,171"
          Size="338,214"
          Id="Package\Gold_Debt Staging Tables Creation"
          TopLeft="1254.16666666666,102.559523809524" />
        <NodeLayout
          Size="211,42"
          Id="Package\PRE SSIS RUN\Run Gold_Debt SQL Queries"
          TopLeft="27.5,108.607142857143" />
        <NodeLayout
          Size="200,68"
          Id="Package\PRE SSIS RUN\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          TopLeft="24.7142857142859,157.285714285714" />
        <AnnotationLayout
          Text="PLEASE MAKE SURE TO RUN ENTIRE&#xA; 'Gold_Debt Final SQL Queries' &#xA;SCRIPT BEFORE RUNNING &#xA;THIS SSIS PACKAGE!!!!!!!!!"
          ParentId="Package\PRE SSIS RUN"
          FontInfo="{assembly:Null}"
          Size="220,88"
          Id="01cfcb05-2f26-4c9d-841d-d942319a1a8f"
          TopLeft="5.5,23.6666666666667" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="273,251"
          Size="273,294"
          Id="Package\PRE SSIS RUN"
          TopLeft="329.547619047619,44.1071428571429" />
        <NodeLayout
          Size="306,42"
          Id="Package\Raw Data Bulk Insert Into Staging Tables\BULK INSERT Into Staging Table StagingBingCovid19DataRaw"
          TopLeft="5,9" />
        <NodeLayout
          Size="302,42"
          Id="Package\Raw Data Bulk Insert Into Staging Tables\BULK INSERT Into Staging Table StagingDebtPennyRaw"
          TopLeft="4,76" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="324,163"
          Size="324,206"
          Id="Package\Raw Data Bulk Insert Into Staging Tables"
          TopLeft="1617.5,102.059523809524" />
        <NodeLayout
          Size="219,42"
          Id="Package\Run Gold_Debt SQL Queries\Run Gold_Debt SQL Queries"
          TopLeft="10.6071428571427,81.5" />
        <NodeLayout
          Size="200,68"
          Id="Package\Run Gold_Debt SQL Queries\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          TopLeft="22.1428571428571,138.142857142857" />
        <AnnotationLayout
          Text="RETUNNING ALL GOLD_DEBT SQL&#xA;SCRIPTS TO BE ABLE TO COMPLETE&#xA;SSIS PACKAGE"
          ParentId="Package\Run Gold_Debt SQL Queries"
          FontInfo="{assembly:Null}"
          Size="215,72"
          Id="36833591-f023-472c-93f7-c25e5c6b82cc"
          TopLeft="6.25,17" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="235,212"
          Size="235,255"
          Id="Package\Run Gold_Debt SQL Queries"
          TopLeft="985,77.6785714285714" />
        <NodeLayout
          Size="326,42"
          Id="Package\SQL Server Agent Schedule Refresh &amp; Next Steps\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          TopLeft="28,9.42857142857133" />
        <NodeLayout
          Size="337,42"
          Id="Package\SQL Server Agent Schedule Refresh &amp; Next Steps\SQL SERVER AGENT GOLD_DEBT DAILY ETL REFRESH"
          TopLeft="32,69.7142857142853" />
        <EdgeLayout
          Id="Package\SQL Server Agent Schedule Refresh &amp; Next Steps.PrecedenceConstraints[Constraint]"
          TopLeft="28,30.4285714285713">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="4,60.285714285714"
              Start="0,0"
              End="-3.5,60.285714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,56.285714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,56.285714285714"
                    Point2="-22.5,60.285714285714"
                    Point3="-18.5,60.285714285714" />
                  <mssgle:LineSegment
                    End="-3.5,60.285714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Remove Database Creation Sequence Container&#xA;In Order To Have ETL Log History Buildup.&#xD;&#xA;&#xD;&#xA;DISABLE ETLLOG TABLE CREATION SQL SCRIPT FOR ETL LOG &#xD;&#xA;HISTORY BUILDUP&#xA;&#xA;DISABLE GOLD_DEBT SQL QUERIES UNLESS NEEDED AFTER &#xA;SUCCESSFULLY SETTING UP DATABASE FROM SSIS  EXECUTION&#xA;&#xA;Keep Gold_Debt SQL Scripts In Sync In SSIS&#xA;Sequence Container With Our Gold_Debt SQL Queries.sql&#xA;File&#xA;&#xA;DISABLE SQL SERVER AGENT SCHEDULE REFRESH SEQUENCE&#xA;CONTAINER ONCE THE REFRESH JOB HAS BEEN CREATED."
          ParentId="Package\SQL Server Agent Schedule Refresh &amp; Next Steps"
          FontInfo="{assembly:Null}"
          Size="365,263"
          Id="f59cf893-0734-41bb-96d5-bb7b8357f626"
          TopLeft="16.6388888888887,128.269841269841" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="400,446"
          Size="400,489"
          Id="Package\SQL Server Agent Schedule Refresh &amp; Next Steps"
          TopLeft="820.369047619045,935.940476190475" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="954.523809523808,208.426587301587">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30.4761904761916,0"
              Start="0,0"
              End="22.9761904761916,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="22.9761904761916,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="1779.5,308.059523809524">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1184.65079365079,55.5039682539682"
              Start="0,0"
              End="-1184.65079365079,48.0039682539682">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.7519841269841" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.7519841269841"
                    Point2="0,27.7519841269841"
                    Point3="-4,27.7519841269841" />
                  <mssgle:LineSegment
                    End="-1180.65079365079,27.7519841269841" />
                  <mssgle:CubicBezierSegment
                    Point1="-1180.65079365079,27.7519841269841"
                    Point2="-1184.65079365079,27.7519841269841"
                    Point3="-1184.65079365079,31.7519841269841" />
                  <mssgle:LineSegment
                    End="-1184.65079365079,48.0039682539682" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="1507.00396825397,587.222222222222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-784.226190476195,126.138888888888"
              Start="0,0"
              End="-776.726190476195,126.138888888888">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-388.217470445473,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-388.217470445473,0"
                    Point2="-392.217470445473,0"
                    Point3="-392.217470445473,4" />
                  <mssgle:LineSegment
                    End="-392.217470445473,122.138888888888" />
                  <mssgle:CubicBezierSegment
                    Point1="-392.217470445473,122.138888888888"
                    Point2="-392.217470445473,126.138888888888"
                    Point3="-396.217470445473,126.138888888888" />
                  <mssgle:LineSegment
                    End="-776.726190476195,126.138888888888" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="1220,207.369047619048">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="34.1666666666645,0"
              Start="0,0"
              End="26.6666666666645,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.6666666666645,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="722.777777777774,832.027777777777">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="182.579365079366,-16.607142857143"
              Start="0,0"
              End="175.079365079366,-16.607142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="69.5111666840334,0" />
                  <mssgle:CubicBezierSegment
                    Point1="69.5111666840334,0"
                    Point2="73.5111666840334,0"
                    Point3="73.5111666840334,-4" />
                  <mssgle:LineSegment
                    End="73.5111666840334,-12.607142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="73.5111666840334,-12.607142857143"
                    Point2="73.5111666840334,-16.607142857143"
                    Point3="77.5111666840334,-16.607142857143" />
                  <mssgle:LineSegment
                    End="175.079365079366,-16.607142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="1237.35714285714,815.420634920634">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="178.190476190478,37.6706349206352"
              Start="0,0"
              End="170.690476190478,37.6706349206352">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="102.427758816839,0" />
                  <mssgle:CubicBezierSegment
                    Point1="102.427758816839,0"
                    Point2="106.427758816839,0"
                    Point3="106.427758816839,4" />
                  <mssgle:LineSegment
                    End="106.427758816839,33.6706349206352" />
                  <mssgle:CubicBezierSegment
                    Point1="106.427758816839,33.6706349206352"
                    Point2="106.427758816839,37.6706349206352"
                    Point3="110.427758816839,37.6706349206352" />
                  <mssgle:LineSegment
                    End="170.690476190478,37.6706349206352" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="1415.54761904762,967.09126984127">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-195.178571428575,213.349206349205"
              Start="0,0"
              End="-187.678571428575,213.349206349205">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-74.6043393466616,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-74.6043393466616,0"
                    Point2="-78.6043393466616,0"
                    Point3="-78.6043393466616,4" />
                  <mssgle:LineSegment
                    End="-78.6043393466616,209.349206349205" />
                  <mssgle:CubicBezierSegment
                    Point1="-78.6043393466616,209.349206349205"
                    Point2="-78.6043393466616,213.349206349205"
                    Point3="-82.6043393466616,213.349206349205" />
                  <mssgle:LineSegment
                    End="-187.678571428575,213.349206349205" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="1592.16666666666,207.309523809524">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="25.3333333333321,0"
              Start="0,0"
              End="17.8333333333321,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.8333333333321,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="814.849206349205,458.563492063492">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="34.456349206348,20.273809523809"
              Start="0,0"
              End="26.956349206348,20.273809523809">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="13.228174603174,0" />
                  <mssgle:CubicBezierSegment
                    Point1="13.228174603174,0"
                    Point2="17.228174603174,0"
                    Point3="17.228174603174,4" />
                  <mssgle:LineSegment
                    End="17.228174603174,16.273809523809" />
                  <mssgle:CubicBezierSegment
                    Point1="17.228174603174,16.273809523809"
                    Point2="17.228174603174,20.273809523809"
                    Point3="21.228174603174,20.273809523809" />
                  <mssgle:LineSegment
                    End="26.956349206348,20.273809523809" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="1123.30555555555,478.837301587301">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="53.857142857147,-14.892857142857"
              Start="0,0"
              End="46.357142857147,-14.892857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="22.9285714285735,0" />
                  <mssgle:CubicBezierSegment
                    Point1="22.9285714285735,0"
                    Point2="26.9285714285735,0"
                    Point3="26.9285714285735,-4" />
                  <mssgle:LineSegment
                    End="26.9285714285735,-10.892857142857" />
                  <mssgle:CubicBezierSegment
                    Point1="26.9285714285735,-10.892857142857"
                    Point2="26.9285714285735,-14.892857142857"
                    Point3="30.9285714285735,-14.892857142857" />
                  <mssgle:LineSegment
                    End="46.357142857147,-14.892857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="1461.1626984127,463.944444444444">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="45.8412698412722,10.277777777778"
              Start="0,0"
              End="38.3412698412722,10.277777777778">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.3785208862675,0" />
                  <mssgle:CubicBezierSegment
                    Point1="23.3785208862675,0"
                    Point2="27.3785208862675,0"
                    Point3="27.3785208862675,4" />
                  <mssgle:LineSegment
                    End="27.3785208862675,6.277777777778" />
                  <mssgle:CubicBezierSegment
                    Point1="27.3785208862675,6.277777777778"
                    Point2="27.3785208862675,10.277777777778"
                    Point3="31.3785208862675,10.277777777778" />
                  <mssgle:LineSegment
                    End="38.3412698412722,10.277777777778" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="602.547619047619,191.107142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="102.976190476189,20.5674603174603"
              Start="0,0"
              End="95.4761904761892,20.5674603174603">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="47.4880952380946,0" />
                  <mssgle:CubicBezierSegment
                    Point1="47.4880952380946,0"
                    Point2="51.4880952380946,0"
                    Point3="51.4880952380946,4" />
                  <mssgle:LineSegment
                    End="51.4880952380946,16.5674603174603" />
                  <mssgle:CubicBezierSegment
                    Point1="51.4880952380946,16.5674603174603"
                    Point2="51.4880952380946,20.5674603174603"
                    Point3="55.4880952380946,20.5674603174603" />
                  <mssgle:LineSegment
                    End="95.4761904761892,20.5674603174603" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>
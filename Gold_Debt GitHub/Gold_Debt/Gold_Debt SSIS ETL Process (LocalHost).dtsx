<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/21/2024 6:19:03 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-L3H8CVG"
  DTS:CreatorName="DESKTOP-L3H8CVG\Felipe"
  DTS:DTSID="{1508B1B1-9FC4-4C54-A4BB-3811CE6D85E1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5397.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="Gold_Debt SSIS ETL Process  LocalHost"
  DTS:PackageType="5"
  DTS:VersionBuild="144"
  DTS:VersionGUID="{B9B7D976-84E5-4BA2-A6DA-365470AC829C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Bing Covid19 Data]"
      DTS:CreationName="FLATFILE"
      DTS:Description="BingCovid19DataRaw"
      DTS:DTSID="{AF5E1A5B-8A4A-408A-BE99-DE2F665FE7E4}"
      DTS:ObjectName="Bing Covid19 Data">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\_BISolutions\Gold_Debt\Data\bing_covid-19_data.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="id"
              DTS:DTSID="{B02B3785-5BEC-485C-BC36-27D58302E08D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="updated"
              DTS:DTSID="{A709784F-6EF5-46DA-94C5-DEA953D107B6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="confirmed"
              DTS:DTSID="{DC2813CA-2350-42E8-B127-D5E5471D4156}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="confirmed_change"
              DTS:DTSID="{5A4EDBEA-3940-4339-86A7-3538C5A49402}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="deaths"
              DTS:DTSID="{DCCD32BF-04D9-40C9-AD57-9443D7B16673}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="deaths_change"
              DTS:DTSID="{E90D3B2B-7235-46B8-9A08-B8723F72D6C6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="recovered"
              DTS:DTSID="{32F9F0EE-7383-4D33-9F49-8DEC13A1F6F1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="recovered_change"
              DTS:DTSID="{A7E7AA9C-302F-4357-ACF9-81D8DABEC92B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="latitude"
              DTS:DTSID="{55682414-CE93-46FE-8FC6-0241595E18FC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="longitude"
              DTS:DTSID="{01F9093A-23AB-4D0C-BCF9-2F49B7063C94}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="iso2"
              DTS:DTSID="{E7638F2B-D157-4E13-824C-9B8345439439}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="iso3"
              DTS:DTSID="{BA30F149-4773-40EC-801D-03F7A0665982}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="country_region"
              DTS:DTSID="{A2B9343A-411A-4E62-95F6-12B670F57B8F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="admin_region_1"
              DTS:DTSID="{12E9B1DC-A0C0-4B61-AF36-D5C8C04F2376}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="iso_subdivision"
              DTS:DTSID="{E4C4F8BD-731D-4B39-86CE-4FD688E0FD7C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="admin_region_2"
              DTS:DTSID="{1B5592D1-499F-45EF-AC96-24846282F5F4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="load_time"
              DTS:DTSID="{8C792AC2-B78C-42DB-8E5E-3A13FA81F25F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Debt Penny]"
      DTS:CreationName="FLATFILE"
      DTS:Description="Debt Penny Raw"
      DTS:DTSID="{D8934D0E-78CF-4E1D-AB7E-D5057C8E9B19}"
      DTS:ObjectName="Debt Penny">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\_BISolutions\Gold_Debt\Data\DebtPenny_20140426_20240425.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Record Date"
              DTS:DTSID="{DE7BF3C4-8C01-4E30-BEB6-84527B0A03E3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Debt Held by the Public"
              DTS:DTSID="{8D14D258-323E-4043-B97A-2787A1533712}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Intragovernmental Holdings"
              DTS:DTSID="{1C49347C-930A-4103-93C4-4AA2E9B3733C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Total Public Debt Outstanding"
              DTS:DTSID="{5858C6A0-6341-42B8-99D1-04040EA3DDA9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Source Line Number"
              DTS:DTSID="{21C28F09-47E2-4A6A-9445-52E3FA616B89}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Fiscal Year"
              DTS:DTSID="{5E0E506B-ACCA-4907-A761-5CCFF611AC06}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Fiscal Quarter Number"
              DTS:DTSID="{32D2928D-A66A-4E87-BE68-E8C9E4D7774C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Calendar Year"
              DTS:DTSID="{68A79819-6821-4F1F-8F69-EDF4ECF5AAE3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Calendar Quarter Number"
              DTS:DTSID="{84232E7A-8B7C-40DE-A557-AFD763AF2542}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Calendar Month Number"
              DTS:DTSID="{ADB300BD-6654-4067-A631-F9E8834A0C5A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Calendar Day Number"
              DTS:DTSID="{A0BD582B-4344-4722-A14C-C83B3A126881}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.Gold_Debt]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
      DTS:ObjectName="LocalHost.Gold_Debt">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LocalHost;User ID=;Initial Catalog=Gold_Debt;Provider=MSOLEDBSQL.1;Persist Security Info=False;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Gold_Debt SSIS ETL Process-{37D7DCC5-6601-42F5-9FB8-C59DE5855246}LocalHost.Gold_Debt;Initial File Name=;Server SPN=;Authentication=;Access Token=;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.Gold_Debt_Test]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{1183608D-9B4B-475B-A5C1-F3A40CE2D64F}"
      DTS:ObjectName="LocalHost.Gold_Debt_Test">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LocalHost;Initial Catalog=Gold_Debt_Test;Provider=MSOLEDBSQL.1;Persist Security Info=False;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package-{1183608D-9B4B-475B-A5C1-F3A40CE2D64F}LocalHost.Gold_Debt_Test;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.master]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{4767EDFD-AA7D-4EF0-B7BE-1CE40C6D0623}"
      DTS:ObjectName="LocalHost.master">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LocalHost;Initial Catalog=master;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package-{4767EDFD-AA7D-4EF0-B7BE-1CE40C6D0623}LocalHost.master;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.msdb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{206E145E-0BF0-4F36-969E-8839F40C0A2B}"
      DTS:ObjectName="LocalHost.msdb">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LocalHost;User ID=;Initial Catalog=msdb;Provider=MSOLEDBSQL.1;Persist Security Info=False;Integrated Security=SSPI;Initial File Name=;Server SPN=;Authentication=;Access Token=;Application Name=SSIS-Gold_Debt SSIS ETL Process-{206E145E-0BF0-4F36-969E-8839F40C0A2B}LocalHost.msdb;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt.fdgomez]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{78F0DA29-A6D8-41C1-8B02-A5FA4BA937B1}"
      DTS:ObjectName="uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt.fdgomez">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=uwc-studentsql.continuum.uw.edu\uwcbiddsql;User ID=fdgomez;Initial Catalog=Gold_Debt;Provider=MSOLEDBSQL.1;Persist Security Info=True;Initial File Name=;Server SPN=;Authentication=;Access Token=;Application Name=SSIS-Package-{78F0DA29-A6D8-41C1-8B02-A5FA4BA937B1}uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt.fdgomez;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAIiRhD8CkjEqMPYOH28MixQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAAXG30CcO0kj79L5uTOV+FXAXu2rpfImdswNchw7ExNbwAAAAAOgAAAAAIAACAAAAAaYai7Uw/u4VJTG6xzdVYmWM3FOjSwDTlOgy9wm88R1SAAAABfH36AOCtZE9rI+rb78KjWumI+Ftz/g38OjMDc9AedTkAAAADFV2LUXtvpIh24pva6ZetAlWTZQdSeSoB+D4UKWJVdpp7lWTa4acmCfKqjr6Lv8x1cH9sDgYdXVssMoAYuaIDt</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt_Test.fdgomez]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{3DC02E21-4610-488E-80C6-2A549ECBB4E3}"
      DTS:ObjectName="uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt_Test.fdgomez">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=uwc-studentsql.continuum.uw.edu\uwcbiddsql;User ID=fdgomez;Initial Catalog=Gold_Debt_Test;Provider=MSOLEDBSQL.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Gold_Debt SSIS ETL Process-{3DC02E21-4610-488E-80C6-2A549ECBB4E3}uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt_Tes;Initial File Name=;Trust Server Certificate=True;Server SPN=;Authentication=;Access Token=;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAIiRhD8CkjEqMPYOH28MixQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACVgYrJ4aeNS2gmdHlV8tmy8n0aFdWQBtV6dOvehsqPjwAAAAAOgAAAAAIAACAAAADvv5DBlUv67v6ZSXY3j0TQr5+8ou1DjtT+Kg+ZgNvflCAAAAAzRCwULZARxe/+6qnnTuOVM+7FsouMtZMAGMCfeBKZtkAAAACqNZVqSm+0PTn4xwlSl8W4YePLkLjKFvkrX4uGwHMCiyCsgv1I1BCEry4cd/yt9DBuWPiOkE5GHtyu+B/KNojV</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[uwc-studentsql.continuum.uw.edu\uwcbiddsql.master.fdgomez]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{FCFC58AF-0BFF-4CD4-9220-C3921B617FC3}"
      DTS:ObjectName="uwc-studentsql.continuum.uw.edu\uwcbiddsql.master.fdgomez">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=uwc-studentsql.continuum.uw.edu\uwcbiddsql;User ID=fdgomez;Initial Catalog=master;Provider=MSOLEDBSQL.1;Persist Security Info=True;Initial File Name=;Server SPN=;Authentication=;Access Token=;Application Name=SSIS-Package-{FCFC58AF-0BFF-4CD4-9220-C3921B617FC3}uwc-studentsql.continuum.uw.edu\uwcbiddsql.master.fdgomez;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAIiRhD8CkjEqMPYOH28MixQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAABfV5OthTJ3uJ3RT4EArdwp+YywIi5qoyo7hhMUNTxSfwAAAAAOgAAAAAIAACAAAACSDmah3haz7jjOH7acTHijI1qSbNaYQVrnVqpAIa4NnyAAAAAJgoM9HEdh28/Vi+Y6Zr3/saorkf8WsYbWGfUgx8XTuUAAAADPMY4/gBOzqzxEoiTeRFOizLjgz0mC4lzdgDCtb2TqpdPn5NObMDNlyAwYg5qiEkX8URTDFQoSziC4oupxJJG3</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[uwc-studentsql.continuum.uw.edu\uwcbiddsql.msdb.fdgomez]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{11E8AA05-E94A-4B4C-B0CC-6A1C8DE2BB6A}"
      DTS:ObjectName="uwc-studentsql.continuum.uw.edu\uwcbiddsql.msdb.fdgomez">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=uwc-studentsql.continuum.uw.edu\uwcbiddsql;User ID=fdgomez;Initial Catalog=msdb;Provider=MSOLEDBSQL.1;Persist Security Info=True;Initial File Name=;Server SPN=;Authentication=;Access Token=;Application Name=SSIS-Gold_Debt SSIS ETL Process-{11E8AA05-E94A-4B4C-B0CC-6A1C8DE2BB6A}uwc-studentsql.continuum.uw.edu\uwcbiddsql.msdb.fdgomez;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAIiRhD8CkjEqMPYOH28MixQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACR7EGszJ7jLpTdVX9m8C76wlGAWMWyONFlg0536SoPxgAAAAAOgAAAAAIAACAAAAAtFR+arrMxv1IGLbPYw1p0bsQ9iuTP2AwQxI5vRjiOVCAAAABJcCgAMhjfZE7c8EXPAsq5FHvDiaLkptmif2q6KmgAeUAAAAD8bACgR9VPrjwlxl2/Va4jiFWZ+0a0BK6OgRE1q6+PYTa0yd/wyggIPy+GV/qpqlzAdTADP+xwU1VrDl5kbh1v</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Add Back Foreign Keys"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{DCFA1DF0-E37E-4E45-A6F5-79162E3D6C6C}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Add Back Foreign Keys">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Add Back Foreign Keys\Add Back Foreign Keys"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Add Back Foreign Keys After Filling Up Our Dimension and Fact Tables"
          DTS:DTSID="{7792652F-69AB-4B07-9694-56F6B556357E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Add Back Foreign Keys"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLAddForeignKeyConstraints;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create Dimension and Fact ETL Views"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{12AE6FFE-E2A3-42B0-AB84-2A7C73DFBF05}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Dimension and Fact ETL Views">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Create Dimension and Fact ETL Views\Create DimCountries ETL View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vETLDimCountries View To Use For Inserting Data Into Our DimCountries Table"
          DTS:DTSID="{465E8470-7875-4127-9485-438553C6A837}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create DimCountries ETL View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLvETLDimCountries;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Create Dimension and Fact ETL Views\Create DimRegions ETL View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vETLDimRegions View To Use For Inserting Data Into Our DimRegions Table"
          DTS:DTSID="{6C0D3BAA-0723-49A7-9B49-96D316C90AC7}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create DimRegions ETL View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLvETLDimRegions;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Create Dimension and Fact ETL Views\Create FactCovid ETL View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vETLFactCovid View To Use For Inserting Data Into Our FactCovid Table"
          DTS:DTSID="{E348AFD5-BA8E-4A8F-A98B-BF2FCC8971FC}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create FactCovid ETL View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLvETLFactCovid;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Create Dimension and Fact ETL Views\Create FactDebt ETL View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vETLFactDebt View To Use For Inserting Data Into Our FactDebt Table"
          DTS:DTSID="{6D69899B-BEBF-4FF0-AB30-41B53C05BBBB}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create FactDebt ETL View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLvETLFactDebt;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create ETLLog Table &amp; ETLLogView"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{6AA00EFD-6210-48F1-B1F7-E170DAB4278D}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create ETLLog Table &amp; ETLLogView">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Create ETLLog Table &amp; ETLLogView\Create ETL Log Table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our ETL Log Table for Admin Tasks"
          DTS:DTSID="{C74ACB26-507D-4AF0-8031-59B7D3EDD6AF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create ETL Log Table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLLogTable;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Create ETLLog Table &amp; ETLLogView\Create ETL Log View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create ETL Log View For Our Power BI Report"
          DTS:DTSID="{0FACB1D1-228B-45D4-91A7-0C2A739066CF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create ETL Log View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLLogView;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Create ETLLog Table &amp; ETLLogView.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{DCB85246-161D-42C2-9088-A08A3401AEE7}"
          DTS:From="Package\Create ETLLog Table &amp; ETLLogView\Create ETL Log Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Create ETLLog Table &amp; ETLLogView\Create ETL Log View" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Dimension &amp; Fact Tables Refresh"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{0E3AA428-BCC7-4AED-BA77-02218494A26A}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Dimension &amp; Fact Tables Refresh">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh\Dim Countries Flush and Fill Stored Procedure"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Fill Our DimCountries Table"
          DTS:DTSID="{8CE4C251-0993-47B0-90DD-FD5DA1F6E6A9}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Dim Countries Flush and Fill Stored Procedure"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFillDimCountries;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh\Dim Dates Flush and Fill Stored Procedure"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Fill Our DimDates Table"
          DTS:DTSID="{31D5B32F-42CC-438D-BB6D-058D58D8BE65}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Dim Dates Flush and Fill Stored Procedure"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFillDimDates;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh\Dim Regions Flush and Fill Stored Procedure"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Fill Our DimRegions Table"
          DTS:DTSID="{525A3AB3-8B2D-4E67-9544-04D01B16CDC9}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Dim Regions Flush and Fill Stored Procedure"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFillDimRegions;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh\Fact Covid Flush and Fill Stored Procedure"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Fill Our FactCovid Table"
          DTS:DTSID="{E3537B19-8FC5-4556-AE49-587FA9CE71C3}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fact Covid Flush and Fill Stored Procedure"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFillFactCovid;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh\Fact Debt Flush and Fill Stored Procedure"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Fill Our FactDebt Table"
          DTS:DTSID="{E5F7738A-4F16-49F6-AD58-53BD90516C92}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fact Debt Flush and Fill Stored Procedure"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFillFactDebt;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{FC44DF4C-A6B1-4625-98DB-9385A9139761}"
          DTS:From="Package\Dimension &amp; Fact Tables Refresh\Dim Dates Flush and Fill Stored Procedure"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Dimension &amp; Fact Tables Refresh\Dim Countries Flush and Fill Stored Procedure" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{314A4809-A2D5-4FD4-A964-50B59CE2270B}"
          DTS:From="Package\Dimension &amp; Fact Tables Refresh\Dim Countries Flush and Fill Stored Procedure"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Dimension &amp; Fact Tables Refresh\Dim Regions Flush and Fill Stored Procedure" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{BBFA7D65-3172-425B-927D-47695302A42F}"
          DTS:From="Package\Dimension &amp; Fact Tables Refresh\Dim Regions Flush and Fill Stored Procedure"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Dimension &amp; Fact Tables Refresh\Fact Covid Flush and Fill Stored Procedure" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{180EAEB9-77C8-4857-8D15-3A5359200AEF}"
          DTS:From="Package\Dimension &amp; Fact Tables Refresh\Fact Covid Flush and Fill Stored Procedure"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Dimension &amp; Fact Tables Refresh\Fact Debt Flush and Fill Stored Procedure" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Drop Foreign Keys &amp; Truncate Tables"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{C9BD13E3-5AC5-4D94-91CA-0A212CFA9480}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Drop Foreign Keys &amp; Truncate Tables">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Drop Foreign Keys &amp; Truncate Tables\Drop Foreign Keys"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Drop Foreign Keys In Order To Truncate Our Tables And Proceed To Fill Them Up Again"
          DTS:DTSID="{C516E322-5E23-490F-A425-F10AC6CE7ECD}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Drop Foreign Keys"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLDropForeignKeyConstraints;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Drop Foreign Keys &amp; Truncate Tables\Truncate Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Truncate Our Tables After Dropping Our Foreign Keys In Order To Proceed To Fill Up Our Dimension and Fact Tables With Up To Date Data"
          DTS:DTSID="{D02F694E-04F8-4416-853E-7AD05DEF364C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLTruncateTables;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Drop Foreign Keys &amp; Truncate Tables.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{DFBC6E87-541B-4885-8539-17B52E03E09E}"
          DTS:From="Package\Drop Foreign Keys &amp; Truncate Tables\Drop Foreign Keys"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Drop Foreign Keys &amp; Truncate Tables\Truncate Tables" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Generate Power BI Views Refresh"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{237582D8-4067-45B1-B152-B0ACE32F6DE9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate Power BI Views Refresh">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Generate Power BI Views Refresh\Create Or Alter vDimCountries View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vDimCountries View for Power BI"
          DTS:DTSID="{727675EF-46FB-49FC-90F9-74B4CE8FA499}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Or Alter vDimCountries View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLDimCountriesView;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Generate Power BI Views Refresh\Create Or Alter vDimDates View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vDimDates View for Power BI"
          DTS:DTSID="{13808611-BC15-42BE-B413-B97ECAE0173E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Or Alter vDimDates View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLDimDatesView;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Generate Power BI Views Refresh\Create Or Alter vDimRegions View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vDimRegion View For Power BI"
          DTS:DTSID="{979FE3DF-9A4F-40C4-BCCA-9CC00BF70241}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Or Alter vDimRegions View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLDimRegionsView;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Generate Power BI Views Refresh\Create Or Alter vFactCovid View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vFactCovid View for Power BI"
          DTS:DTSID="{A9D3465F-7088-4049-8441-DC8E597E761F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Or Alter vFactCovid View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFactCovidView;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Generate Power BI Views Refresh\Create Or alter vFactDebt View"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Our vFactDebt View for Power BI"
          DTS:DTSID="{2E3DE336-85A6-4606-82CF-934AFFE4BA97}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Or alter vFactDebt View"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLFactDebtView;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Gold_Debt Database Creation"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{F00958EE-C288-4F38-BBBB-1D138CD2A19D}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Gold_Debt Database Creation">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Gold_Debt Database Creation\Gold_Debt Database Creation"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="DROPS EXISTING GOLD_DEBT DATABASE AND CREATES DEBT_GOLD DATABASE"
          DTS:DTSID="{8AF10F3F-7113-4861-9C9A-12E6926FD60E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Gold_Debt Database Creation"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{4767EDFD-AA7D-4EF0-B7BE-1CE40C6D0623}"
              SQLTask:SqlStatementSource="EXEC sp_ETLGoldDebtDatabaseCreation;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{1F59A9DE-CEF4-41C5-B480-4EBF67F7F011}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation\Gold_Debt Add Foreign Key Constraints To Dimension and Fact Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Gold_Debt Add Foreign Key Constraints To Our Dimension and Fact Tables"
          DTS:DTSID="{F65F76A3-EE0A-42B2-8B6E-E06F5302A21F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Gold_Debt Add Foreign Key Constraints To Dimension and Fact Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLGoldDebtForeignKeyConstraints;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation\Gold_Debt Dimension and Fact Tables Creation"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Create Dimension and Fact Tables For Our Gold_Debt Database"
          DTS:DTSID="{312A5B47-B96C-4F06-B251-5774AB1BBC62}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Gold_Debt Dimension and Fact Tables Creation"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLGoldDebtDimensionAndFactTablesCreation;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{35961CB3-0A22-4A1F-BF2F-F1DE1565FC89}"
          DTS:From="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation\Gold_Debt Dimension and Fact Tables Creation"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation\Gold_Debt Add Foreign Key Constraints To Dimension and Fact Tables" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Gold_Debt Staging Tables Creation"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{40BB2203-9D03-4EB1-A25E-4AD51E2B5D19}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Gold_Debt Staging Tables Creation">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Gold_Debt Staging Tables Creation\StagingBingCovid19DataRaw Staging Table Creation"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="CREATION OF STAGING TABLE STAGINGBINGCOVID19DATARAW"
          DTS:DTSID="{23B31406-2E4E-4F81-8771-FA22AE3D0C80}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="StagingBingCovid19DataRaw Staging Table Creation"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLStagingBingCovid19DataRaw;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Gold_Debt Staging Tables Creation\StagingDebtPennyRaw Staging Table Creation"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="CREATION OF STAGING TABLE STAGINGDEBTPENNYRAW"
          DTS:DTSID="{022F6ED1-1A75-4340-A98A-366EDE650009}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="StagingDebtPennyRaw Staging Table Creation"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLStagingDebtPennyRaw;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\PRE SSIS RUN"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{F8087F98-155B-4A2F-A9FC-AA1B372769CC}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="PRE SSIS RUN">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\PRE SSIS RUN\Run Gold_Debt SQL Queries"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Run ALL Gold_Debt SQL Scripts"
          DTS:DTSID="{BF383023-6929-45D2-8EAF-FC23E255A348}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Run Gold_Debt SQL Queries"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="--*************************************************************************--&#xA;-- Title: BIDD330A Final&#xA;-- Author: Felipe Gomez&#xA;-- Desc: This file creates our Gold_Data Database, Staging Tables, BULK INSERT INTO our Staging Tables, Dimension and Fact Tables &amp; our Foreign Key Constraints, Flush and Fill ETL process with SQL code&#xA;-- Change Log: When,Who,What&#xA;-- 2024-05-27,Felipe Gomez,Created File&#xA;-- TODO: 05/27/2024,Felipe Gomez,Updated code to include logging and transaction handling&#xA;---------------------------------&#xA;--PLEASE MAKE SURE TO ADD BOTH COVID19 AND DEBT PENNY CSV FILES DO YOUR C:\Data directory!!!!!!!!!!!!!!!!!!!&#xA;USE MASTER&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLGoldDebtDatabaseCreation AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;IF EXISTS (SELECT 1 FROM sys.databases WHERE name = 'Gold_Debt')&#xA;&#x9;&#x9;ALTER DATABASE [Gold_Debt] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;&#xA;&#x9;&#x9;DROP DATABASE [Gold_Debt];&#xA;&#x9;&#x9;CREATE DATABASE [Gold_Debt]&#xA;&#x9;&#x9;ALTER DATABASE [Gold_Debt] SET MULTI_USER;&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Our Database/DataWarehouse Gold_Debt'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;&#xA;--EXEC sp_ETLGoldDebtDatabaseCreation;&#xA;--GO&#xA;------------------------------------&#xA;--CREATE STAGING TABLES&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLStagingBingCovid19DataRaw AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;If (SELECT Object_ID('StagingBingCovid19DataRaw')) IS NOT NULL&#xA;&#x9;&#x9;DROP TABLE StagingBingCovid19DataRaw;&#xA;&#x9;&#x9;CREATE TABLE StagingBingCovid19DataRaw (&#xA;&#x9;&#x9;&#x9;[id] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[updated] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[confirmed] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[confirmed_change] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[deaths] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[deaths_change] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[recovered] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[recovered_change] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[latitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[longitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[iso2] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[iso3] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[country_region] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[admin_region_1] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[iso_subdivision] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[admin_region_2] NVARCHAR(MAX),&#xA;&#x9;&#x9;&#x9;[load_time] NVARCHAR(MAX)&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Staging Table StagingBingCovid19DataRaw for BULK INSERT'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLStagingBingCovid19DataRaw;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLStagingDebtPennyRaw AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;If (SELECT Object_ID('StagingDebtPennyRaw')) IS NOT NULL&#xA;&#x9;&#x9;DROP TABLE StagingDebtPennyRaw;&#xA;&#x9;&#x9;CREATE TABLE StagingDebtPennyRaw (&#xA;&#x9;&#x9;&#x9;[Record Date] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Debt Held by the Public] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Intragovernmental Holdings] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Total Public Debt Outstanding] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Source Line Number] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Fiscal Year] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Fiscal Quarter Number] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Calendar Year] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Calendar Quarter Number] NVARCHAR(200),&#xA;&#x9;&#x9;    [Calendar Month Number] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Calendar Day Number]NVARCHAR(200)&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Staging Table StagingDebtPennyRaw for BULK INSERT'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLStagingDebtPennyRaw;&#xA;--GO&#xA;&#xA;--------------------------------------------------------BULK INSERT RAW CSV FILES INTO OUR STAGING TABLES&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLImportBingCovid19DataRawToStagingTable AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;BULK INSERT [StagingBingCovid19DataRaw]&#xA;&#x9;&#x9;FROM 'C:\Data\bing_covid-19_data.csv' --'\\DESKTOP\Data\bing_covid-19_data.csv' --&#xA;&#x9;&#x9;WITH (&#xA;&#x9;&#x9;&#x9;DATAFILETYPE = 'char',&#xA;&#x9;&#x9;&#x9;FORMAT = 'CSV',&#xA;&#x9;&#x9;&#x9;FIELDTERMINATOR = ',',&#xA;&#x9;&#x9;&#x9;ROWTERMINATOR = '0x0a',&#xA;&#x9;&#x9;&#x9;FIRSTROW = 2,&#xA;&#x9;&#x9;&#x9;MAXERRORS = 0&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Importing COVID19 Raw Data to Staging Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLImportBingCovid19DataRawToStagingTable;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLImportDebtPennyRawToStagingTable AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;BULK INSERT [StagingDebtPennyRaw]&#xA;&#x9;&#x9;FROM 'C:\Data\DebtPenny_20140426_20240425.csv'&#xA;&#x9;&#x9;WITH (&#xA;&#x9;&#x9;&#x9;DATAFILETYPE = 'char',&#xA;&#x9;&#x9;&#x9;FORMAT = 'CSV',&#xA;&#x9;&#x9;&#x9;FIELDTERMINATOR = ',',&#xA;&#x9;&#x9;&#x9;ROWTERMINATOR = '0x0a',&#xA;&#x9;&#x9;&#x9;FIRSTROW = 2,&#xA;&#x9;&#x9;&#x9;MAXERRORS = 0&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Importing Debt Penny Raw Data to Staging Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLImportDebtPennyRawToStagingTable;&#xA;--GO&#xA;&#xA;-------------------------------------------------------------------CREATE DIMENSION AND FACT TABLES (INCLUDING PRIMARY AND FOREGIN KEYS)&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLGoldDebtDimensionAndFactTablesCreation AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;/****** [dbo].[DimDates] ******/&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[DimDates]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[DimDates] (&#xA;&#x9;&#x9;&#x9;[DateKey] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[FullDate] DATETIME NOT NULL,&#xA;&#x9;&#x9;&#x9;[FullDateName] NVARCHAR(200) NULL,&#xA;&#x9;&#x9;&#x9;[WeekID] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[MonthID] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[MonthName] NVARCHAR(200) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Quarter] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[YearQuarter] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[YearID] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[YearName] NVARCHAR(200) NOT NULL,&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_DimDates] PRIMARY KEY CLUSTERED&#xA;&#x9;&#x9;&#x9;([DateKey])&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[DimCountries]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[DimCountries] (&#xA;&#x9;&#x9;&#x9;[CountryKey] INT IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Country] NVARCHAR (200)&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_DimCountries] PRIMARY KEY CLUSTERED&#xA;&#x9;&#x9;&#x9;([CountryKey])&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[DimRegions]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[DimRegions] (&#xA;&#x9;&#x9;&#x9;[RegionKey] INT IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Region] NVARCHAR (200)&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_DimRegion] PRIMARY KEY CLUSTERED&#xA;&#x9;&#x9;&#x9;([RegionKey])&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[FactCovid]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[FactCovid] (&#xA;&#x9;&#x9;&#x9;[FactCovidKey] INT IDENTITY (1,1) NOT NULL, --future Surrogate Key&#xA;&#x9;&#x9;&#x9;[ID] INT,&#xA;&#x9;&#x9;&#x9;[Updated] DATE,&#xA;&#x9;&#x9;&#x9;[DateKey] INT,&#xA;&#x9;&#x9;&#x9;[Confirmed] INT,&#xA;&#x9;&#x9;&#x9;[Confirmed_Change] INT,&#xA;&#x9;&#x9;&#x9;[Deaths] INT,&#xA;&#x9;&#x9;&#x9;[Deaths_Change] INT,&#xA;&#x9;&#x9;&#x9;[Recovered] INT,&#xA;&#x9;&#x9;&#x9;[Recovered_Change] INT,&#xA;&#x9;&#x9;&#x9;[Latitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Longitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Iso2] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Iso3] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Country_Region] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[CountryKey] INT,&#xA;&#x9;&#x9;&#x9;[Admin_Region_1] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[RegionKey] INT NULL,&#xA;&#x9;&#x9;&#x9;[Iso_Subdivision] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Admin_Region_2] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Load_Time] datetime2,&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_FactCovid] PRIMARY KEY CLUSTERED ([FactCovidKey], [ID], [DateKey], [CountryKey])&#xA;&#x9;&#x9;) ON [PRIMARY]&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[FactDebt]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[FactDebt] (&#xA;&#x9;&#x9;&#x9;[FactDebtKey] INT IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Record_Date] DATE NULL,&#xA;&#x9;&#x9;&#x9;[DateKey] INT,&#xA;&#x9;&#x9;&#x9;[Public_Debt] FLOAT NULL,&#xA;&#x9;&#x9;&#x9;[Intragovernmental_Holdings] FLOAT NULL,&#xA;&#x9;&#x9;&#x9;[Total_Public_Debt_Outstanding] FLOAT NULL,&#xA;&#x9;&#x9;&#x9;[Source_Line_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Fiscal_Year] INT NULL,&#xA;&#x9;&#x9;&#x9;[Fiscal_Quarter_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Year] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Quarter_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Month_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Day_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_FactDebt] PRIMARY KEY CLUSTERED ([FactDebtKey], [DateKey])&#xA;&#x9;&#x9;) ON [PRIMARY]&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Dimension and Fact Tables'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLGoldDebtDimensionAndFactTablesCreation;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLGoldDebtForeignKeyConstraints AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimDates] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimCountries] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([CountryKey]) REFERENCES [dbo].[DimCountries] ([CountryKey])&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimRegions] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([RegionKey]) REFERENCES [dbo].[DimRegions] ([RegionKey])&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactDebt] ADD CONSTRAINT [FK_FactDebt_DimDates] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Foreign Key Constraints'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLGoldDebtForeignKeyConstraints;&#xA;--GO&#xA;&#xA;-------------------------------------------------------PERFORM OUR ETL FLUSH AND FILL PROCESS&#xA;&#xA;-- 1) CREATE OUR ETL TABLE, VIEW AND INSERT STORED PROCEDURE&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLLogTable AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;IF NOT Exists(SELECT * FROM Sys.tables WHERE [name] = 'ETLLog')&#xA;&#x9;&#x9;  CREATE -- Drop&#xA;&#x9;&#x9;  TABLE ETLLog&#xA;&#x9;&#x9;  (ETLLogID INT IDENTITY PRIMARY KEY&#xA;&#x9;&#x9;  ,ETLDateAndTime DATETIME DEFAULT GETDATE()&#xA;&#x9;&#x9;  ,ETLAction NVARCHAR(100)&#xA;&#x9;&#x9;  ,ETLLogMessage NVARCHAR(2000)&#xA;&#x9;&#x9;  );&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Log Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLLogTable;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLLogView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW vETLLog&#xA;&#x9;&#x9;AS&#xA;&#x9;&#x9;  SELECT&#xA;&#x9;&#x9;   ETLLogID&#xA;&#x9;&#x9;  ,ETLDate = Format(ETLDateAndTime, ''D'', ''en-us'')&#xA;&#x9;&#x9;  ,ETLTime = Format(Cast(ETLDateAndTime as datetime2), ''HH:mm'', ''en-us'')&#xA;&#x9;&#x9;  ,ETLAction&#xA;&#x9;&#x9;  ,ETLLogMessage&#xA;&#x9;&#x9;  FROM ETLLog');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Log View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLLogView;&#xA;--GO&#xA;&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLInsertETLLog (@ETLAction NVARCHAR(100), @ETLLogMessage NVARCHAR(2000)) AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;    BEGIN TRAN;&#xA;      INSERT INTO [ETLLog] (ETLAction, ETLLogMessage)&#xA;      Values&#xA;       (@ETLAction,@ETLLogMessage)&#xA;    Commit Tran;&#xA;    Set @RC = 1;&#xA;  End Try&#xA;  Begin Catch&#xA;    If @@TRANCOUNT &gt; 0 Rollback Tran;&#xA;    Set @RC = -1;&#xA;  End Catch&#xA;  Return @RC;&#xA;End&#xA;GO -- If you don't put a go here the test code will be included in the Sproc body!&#xA;&#xA;-- 2) CREATE OUR DROP FOREIGN KEY CONSTRAINTS STORED PROCEDURE&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDropForeignKeyConstraints AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;    ALTER TABLE [dbo].[FactCovid] &#xA;     DROP CONSTRAINT [FK_FactCovid_DimDates] &#xA;&#xA;    ALTER TABLE [dbo].[FactCovid] &#xA;     DROP CONSTRAINT [FK_FactCovid_DimCountries] &#xA;&#xA;    ALTER TABLE [dbo].[FactCovid] &#xA;     DROP CONSTRAINT [FK_FactCovid_DimRegions] &#xA;&#xA;    ALTER TABLE [dbo].[FactDebt] &#xA;     DROP CONSTRAINT [FK_FactDebt_DimDates] &#xA;&#xA;    -- Optional: Unlike the other tables DimDates does not change often --&#xA;    --Alter Table [dbo].[FactSalesOrders] &#xA;    -- Drop Constraint [FK_FactSalesOrders_DimDates]&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLDropForeignKeyConstraints'&#xA;&#x9;       ,@ETLLogMessage = 'Foreign Keys dropped';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     DECLARE @ErrorMessage nvarchar(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLDropForeignKeyConstraints'&#xA;&#x9;     ,@ETLLogMessage = 'Foreign Keys cannot be dropped (They may be missing or misnamed)';&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDropForeignKeyConstraints;&#xA;--GO&#xA;&#xA;-- 3) CREATE OUR TRUNCATE TABLES STORED PROCEDURE&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLTruncateTables AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;    -- ETL Processing Code --&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.DimCountries;&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.DimRegions;&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.FactCovid;   &#xA;&#x9;TRUNCATE TABLE [Gold_Debt].dbo.FactDebt;   &#xA;    -- Optional: Unlike the other tables DimDates does not change often --&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.DimDates; &#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLTruncateTables'&#xA;&#x9;       ,@ETLLogMessage = 'Tables data removed';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLTruncateTables'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLTruncateTables;&#xA;--GO&#xA;&#xA;-- 4) CREATE OUR STORED PROCEDURES TO FILL IN OUR DIMENSIONS&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillDimDates AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;      DECLARE @StartDate DATETIME = '01/01/2014'&#xA;      DECLARE @EndDate DATETIME = '12/31/2024' &#xA;      DECLARE @DateInProcess DATETIME  = @StartDate&#xA;      -- Loop through the dates until you reach the end date&#xA;      BEGIN TRAN&#xA;      WHILE @DateInProcess &lt;= @EndDate&#xA;       BEGIN&#xA;       -- Add a row Into the date dimension table for this date&#xA;       INSERT INTO DimDates &#xA;       ( [DateKey],[FullDate],[FullDateName],[WeekID],[MonthID],[MonthName],[Quarter],[YearQuarter],[YearID],[YearName])&#xA;       VALUES ( &#xA;         Cast(Convert(NVARCHAR(50), @DateInProcess, 112) AS INT) -- [DateKey]&#xA;        ,@DateInProcess -- [FullDate]&#xA;        ,DateName(WEEKDAY, @DateInProcess) + ', ' + Convert(NVARCHAR(50), @DateInProcess, 110) -- [FullDateName]&#xA;&#x9;&#x9;,CAST(DATEPART(ISO_WEEK, @DateInProcess) AS INT) --[WeekID]&#xA;        ,Cast(Left(Convert(NVARCHAR(50), @DateInProcess, 112), 6) AS INT)  -- [MonthID]&#xA;        ,DateName(month, @DateInProcess) + ' - ' + DateName(YYYY,@DateInProcess) -- [MonthName]&#xA;&#x9;&#x9;,DATEPART(QUARTER,@DateInProcess) -- [Quarter]&#xA;&#x9;&#x9;,CAST(CONCAT(YEAR(@DateInProcess), DATEPART(QUARTER,@DateInProcess)) AS INT) -- [YearQuarter]&#xA;        ,Year(@DateInProcess) -- [YearID] &#xA;        ,Cast(Year(@DateInProcess ) AS NVARCHAR(50)) -- [YearName] &#xA;        )  &#xA;       -- Add a day and loop again&#xA;       SET @DateInProcess = DateAdd(d, 1, @DateInProcess)&#xA;       END&#xA;&#x9;   COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillDimDates'&#xA;&#x9;       ,@ETLLogMessage = 'DimDates filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog&#xA;&#x9;      @ETLAction = 'sp_ETLFillDimDates'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillDimDates;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLDimCountries AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLDimCountries]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for DimCountries*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9; SELECT DISTINCT [Country_Region] AS [Country]&#xA;&#x9;&#x9;&#x9; FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL DimCountries View For Inserting Data Into Our DimCountries Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLDimCountries;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLDimCountries!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLDimCountries&#xA;--/* Desc: Extracts and transforms data for DimCountries&#xA;--*/&#xA;--AS SELECT DISTINCT [Country_Region] AS [Country] FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillDimCountries AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT Count(*) FROM DimCountries) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].dbo.DimCountries&#xA;      ([Country]&#xA;      )&#xA;      SELECT [Country]&#xA;      FROM vETLDimCountries&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillDimCountries'&#xA;&#x9;       ,@ETLLogMessage = 'DimCountries filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillDimCountries'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillDimCountries;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLDimRegions AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLDimRegions]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for DimRegions*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9; SELECT DISTINCT [Admin_Region_1] AS [Region]&#xA;&#x9;&#x9;&#x9; FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL DimRegions View For Inserting Data Into Our DimRegions Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLDimRegions;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLDimRegions!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLDimRegions&#xA;--/* Desc: Extracts and transforms data for DimRegions&#xA;--*/&#xA;--AS SELECT DISTINCT [Admin_Region_1] AS [Region] FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillDimRegions AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT COUNT(*) FROM DimRegions) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].dbo.DimRegions&#xA;      ([Region]&#xA;      )&#xA;      SELECT [Region]&#xA;      FROM vETLDimRegions&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillDimRegions'&#xA;&#x9;       ,@ETLLogMessage = 'DimRegions filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillDimRegions'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillDimRegions;&#xA;--GO&#xA;&#xA;-- 5) CREATE OUR STORED PROCEDURES TO FILL IN OUR FACTS&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLFactCovid AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLFactCovid]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for FactCovid*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9;  SELECT&#xA;&#x9;&#x9;&#x9;&#x9;   --[FactCovidKey]&#xA;&#x9;&#x9;&#x9;&#x9;   [ID]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Updated]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[DateKey] = [D].[DateKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Confirmed]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Confirmed_Change]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Deaths]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Deaths_Change]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Recovered]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Recovered_Change]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Latitude]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Longitude]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Iso2]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Iso3]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Country_Region]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[CountryKey] = [C].[CountryKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Admin_Region_1]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[RegionKey] = [R].[RegionKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Iso_Subdivision]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Admin_Region_2]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Load_Time]&#xA;&#x9;&#x9;&#x9;  FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimCountries] [C]&#xA;&#x9;&#x9;&#x9;   ON [C19].[Country_Region] = [C].[Country]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimRegions] [R]&#xA;&#x9;&#x9;&#x9;   ON [C19].[Admin_Region_1] = [R].[Region]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D]&#xA;&#x9;&#x9;&#x9;   ON CAST([C19].[Updated] AS DATE) = CAST([D].[FullDate] AS DATE)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL FactCovid View For Inserting Data Into Our FactCovid Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLFactCovid;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLFactCovid!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLFactCovid&#xA;--/* Desc: Extracts and transforms data for FactCovid&#xA;--*/&#xA;--AS&#xA;--  SELECT&#xA;--       --[FactCovidKey]&#xA;--       [ID],[Updated],[CovidDateKey] = [D].[DateKey],[Confirmed],[Confirmed_Change],[Deaths],[Deaths_Change],[Recovered],[Recovered_Change],[Latitude] ,[Longitude],[Iso2],[Iso3]&#xA;--      ,[Country_Region],[CountryKey] = [C].[CountryKey],[Admin_Region_1],[RegionKey] = [R].[RegionKey],[Iso_Subdivision],[Admin_Region_2],[Load_Time]&#xA;--  FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimCountries] [C] ON [C19].[Country_Region] = [C].[Country]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimRegions] [R] ON [C19].[Admin_Region_1] = [R].[Region]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D] ON CAST([C19].[Updated] AS DATE) = CAST([D].[FullDate] AS DATE)&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillFactCovid&#xA;/* Desc: Inserts data Into FactCovid using the vETLFactCovid view&#xA;*/&#xA;AS&#xA; BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY &#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT COUNT(*) FROM [Gold_Debt].[dbo].[FactCovid]) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].[dbo].[FactCovid]&#xA;      ([ID]&#xA;      ,[Updated]&#xA;      ,[DateKey]&#xA;      ,[Confirmed]&#xA;      ,[Confirmed_Change]&#xA;      ,[Deaths]&#xA;      ,[Deaths_Change]&#xA;      ,[Recovered]&#xA;      ,[Recovered_Change]&#xA;      ,[Latitude]&#xA;      ,[Longitude]&#xA;      ,[Iso2]&#xA;      ,[Iso3]&#xA;      ,[Country_Region]&#xA;      ,[CountryKey]&#xA;      ,[Admin_Region_1]&#xA;      ,[RegionKey]&#xA;      ,[Iso_Subdivision]&#xA;      ,[Admin_Region_2]&#xA;      ,[Load_Time]&#xA;      )&#xA;      SELECT&#xA;       [ID]&#xA;      ,[Updated]&#xA;      ,[DateKey]&#xA;      ,[Confirmed]&#xA;      ,[Confirmed_Change]&#xA;      ,[Deaths]&#xA;      ,[Deaths_Change]&#xA;      ,[Recovered]&#xA;      ,[Recovered_Change]&#xA;      ,[Latitude]&#xA;      ,[Longitude]&#xA;      ,[Iso2]&#xA;      ,[Iso3]&#xA;      ,[Country_Region]&#xA;      ,[CountryKey]&#xA;      ,[Admin_Region_1]&#xA;      ,[RegionKey]&#xA;      ,[Iso_Subdivision]&#xA;      ,[Admin_Region_2]&#xA;      ,[Load_Time]&#xA;      FROM [dbo].[vETLFactCovid]&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillFactCovid'&#xA;&#x9;       ,@ETLLogMessage = 'FactCovid filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillFactCovid'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillFactCovid;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLFactDebt AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;--CAST(LEFT(TRIM([Calendar Day Number]), 2) AS char(2))&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLFactDebt]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for FactDebt*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9;  SELECT&#xA;&#x9;&#x9;&#x9;&#x9;   --[FactDebtKey]&#xA;&#x9;&#x9;&#x9;&#x9;   [RecordDate] = [Record Date]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[DateKey] = [D].[DateKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Public_Debt] = CAST([Debt Held by the Public] AS money)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Intragovernmental_Holdings] = CAST([Intragovernmental Holdings] AS money)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Total_Public_Debt_Outstanding] = CAST([Total Public Debt Outstanding] AS money)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Source_Line_Number] = [Source Line Number]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Fiscal_Year] = [Fiscal Year]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Fiscal_Quarter_Number] = [Fiscal Quarter Number]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendar_Year] = [Calendar Year]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendar_Quarter_Number] = CAST(TRIM([Calendar Quarter Number]) AS INT)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendar_Month_Number] = CAST(TRIM([Calendar Month Number]) AS INT)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendary_Day_Number] = CAST(TRIM(REPLACE([Calendar Day Number], CHAR(13), '''')) AS INT)&#xA;&#x9;&#x9;&#x9;  FROM [Gold_Debt].[dbo].[StagingDebtPennyRaw] [DPR]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D]&#xA;&#x9;&#x9;&#x9;   ON CAST([DPR].[Record Date] AS DATE) = CAST([D].[FullDate] AS DATE)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL FactDebt View For Inserting Data Into Our FactDebt Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLFactDebt;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLFactDebt!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLFactDebt&#xA;--/* Desc: Extracts and transforms data for FactCovid&#xA;--*/&#xA;--AS&#xA;--  SELECT&#xA;--       --[FactDebtKey]&#xA;--&#x9;   [RecordDate] = [Record Date],[DebtDateKey] = [D].[DateKey],[Public_Debt] = [Debt Held by the Public],[Intragovernmental_Holdings] = [Intragovernmental Holdings],[Total_Public_Debt_Outstanding] = [Total Public Debt Outstanding],[Source_Line_Number] = [Source Line Number],[Fiscal_Year] = [Fiscal Year]&#xA;--      ,[Fiscal_Quarter_Number] = [Fiscal Quarter Number],[Calendar_Year] = [Calendar Year],[Calendar_Quarter_Number] = [Calendar Quarter Number],[Calendar_Month_Number] = [Calendar Month Number],[Calendary_Day_Number] = [Calendar Day Number]&#xA;--  FROM [Gold_Debt].[dbo].[StagingDebtPennyRaw] [DPR]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D] ON CAST([DPR].[Record Date] AS DATE) = CAST([D].[FullDate] AS DATE)&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillFactDebt&#xA;/* Desc: Inserts data Into FactCovid using the vETLFactCovid view&#xA;*/&#xA;AS&#xA; BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY &#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT COUNT(*) FROM FactDebt) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].[dbo].[FactDebt]&#xA;      ([Record_Date]&#xA;      ,[DateKey]&#xA;      ,[Public_Debt]&#xA;      ,[Intragovernmental_Holdings]&#xA;      ,[Total_Public_Debt_Outstanding]&#xA;      ,[Source_Line_Number]&#xA;      ,[Fiscal_Year]&#xA;      ,[Fiscal_Quarter_Number]&#xA;      ,[Calendar_Year]&#xA;      ,[Calendar_Quarter_Number]&#xA;      ,[Calendar_Month_Number]&#xA;      ,[Calendar_Day_Number]&#xA;      )&#xA;      SELECT&#xA;&#x9;   [RecordDate]&#xA;&#x9;  ,[DateKey]&#xA;      ,[Public_Debt]&#xA;      ,[Intragovernmental_Holdings]&#xA;      ,[Total_Public_Debt_Outstanding]&#xA;      ,[Source_Line_Number]&#xA;      ,[Fiscal_Year]&#xA;      ,[Fiscal_Quarter_Number]&#xA;      ,[Calendar_Year]&#xA;      ,[Calendar_Quarter_Number]&#xA;      ,[Calendar_Month_Number]&#xA;      ,[Calendary_Day_Number]&#xA;      FROM vETLFactDebt&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillFactDebt'&#xA;&#x9;       ,@ETLLogMessage = 'FactDebt filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillFactDebt'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillFactDebt;&#xA;--GO&#xA;&#xA;-- 6) Add Back Foreign Keys&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLAddForeignKeyConstraints&#xA;/* Desc: This Sproc Replaces the Foreign Keys Constraints.&#xA;*/&#xA;AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 1;&#xA;&#x9;DECLARE @Message NVARCHAR(1000);&#xA;  BEGIN TRY&#xA;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimDates] &#xA;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimCountries] &#xA;&#x9;&#x9;FOREIGN KEY ([CountryKey]) REFERENCES [dbo].[DimCountries] ([CountryKey])&#xA;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimRegions] &#xA;&#x9;&#x9;FOREIGN KEY ([RegionKey]) REFERENCES [dbo].[DimRegions] ([RegionKey])&#xA;&#x9;ALTER TABLE [dbo].[FactDebt] ADD CONSTRAINT [FK_FactDebt_DimDates] &#xA;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;SET @Message = 'Foreign Keys replaced on all tables';&#xA;&#x9;EXEC sp_ETLInsertETLLog&#xA; &#x9;       @ETLAction = 'sp_ETLAddForeignKeyConstraints'&#xA; &#x9;      ,@ETLLogMessage = @Message;&#xA;    SET @RC = 1;&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;    IF @@TRANCOUNT &gt; 0 ROLLBACK;&#xA;    DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;    EXEC sp_ETLInsertETLLog &#xA;         @ETLAction = 'sp_ETLAddForeignKeyConstraints'&#xA;        ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1;&#xA;  END CATCH&#xA;  RETURN @RC;&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLAddForeignKeyConstraints;&#xA;--GO&#xA;&#xA;--********************************************************************--&#xA;-- D) Review the results of this script&#xA;--********************************************************************--&#xA;--go&#xA;--Declare @Status int;&#xA;--Exec @Status = sp_ETLDropForeignKeyConstraints;&#xA;--Select [Object] = 'pETLDropForeignKeyConstraints', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLTruncateTables;&#xA;--Select [Object] = 'pETLTruncateTables', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillDimDates;&#xA;--Select [Object] = 'pETLFillDimDates', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillDimCountries;&#xA;--Select [Object] = 'pETLFillDimProducts', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillDimRegions;&#xA;--Select [Object] = 'pETLFillDimCustomers', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillFactCovid;&#xA;--Select [Object] = 'pETLFillFactOrders', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLAddForeignKeyConstraints;&#xA;--Select [Object] = 'pETLAddForeignKeyConstraints', [Status] = @Status;&#xA;&#xA;--go&#xA;--Select [DimDates] = Count(*) From [dbo].[DimDates];&#xA;--Select [DimCountries] = Count(*) From [dbo].[DimCountrires];&#xA;--Select [DimRegions] = Count(*) From [dbo].[DimRegions];&#xA;--Select [FactCovid] = Count(*) From [dbo].[FactCovid];&#xA;--Select [FactDebt] = Count(*) From [dbo].[FactDebt];&#xA;--Select * From vETLLog;&#xA;----Delete From ETLLog;&#xA;&#xA;-------------------------------------------------&#xA;------CREATE FINAL VIEWS FOR POWER BI------------&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDimDatesView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vDimDates]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[DimDates] WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;  ORDER BY [FullDate] ASC&#xA;&#x9;&#x9;&#x9;  OFFSET 0 ROWS');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final DimDates View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDimDatesView;&#xA;--GO&#xA;&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDimCountriesView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vDimCountries]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[DimCountries] WITH (NOLOCK)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final DimCountries View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDimCountriesView;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDimRegionsView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vDimRegions]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[DimRegions] WITH (NOLOCK)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final DimRegions View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDimRegionsView;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFactCovidView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vFactCovid]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[FactCovid] WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;  ORDER BY [Updated] ASC&#xA;&#x9;&#x9;&#x9;  OFFSET 0 ROWS');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final FactCovid View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFactCovidView;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFactDebtView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vFactDebt]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[FactDebt] WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;  ORDER BY [Record_Date] ASC&#xA;&#x9;&#x9;&#x9;  OFFSET 0 ROWS');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final FactDebt View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFactDebtView;&#xA;--GO&#xA;&#xA;--WE ARE SETTING UP DAILY SCHEDULED REFRESHES USING SQL SERVER AGENT! --THIS CODE IS NOT COPIED IN THE FIRST SEQUENCE CONTAINERS THAT RUNS CODE. WE RUN THIS AS A SEPARATE SQL SCRIPT IN THE FIRST AND THIRD SEQUENCE CONTAINER AS WELL AS THE LAST SEQUENCE CONTAINER &quot;SQL SERVER AGENT SCHEDULE REFRESH &amp; NEXT STEPS&quot;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\PRE SSIS RUN\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:Disabled="True"
          DTS:DTSID="{5c915f79-6763-4615-b531-3558e0bb6436}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{206E145E-0BF0-4F36-969E-8839F40C0A2B}"
              SQLTask:SqlStatementSource="--WE ARE SETTING UP DAILY SCHEDULED REFRESHES USING SQL SERVER AGENT!&#xA;-------------------------------------------------------------------------------------------------------&#xA;--SQL SERVER AGENT SCHEDULED REFRESH FOR LOCAL INSTANCE&#xA;--DEPENDING ON WHICH SERVER YOU ARE ON, YOU WILL HAVE TO COMMENT ON AND OFF THE SQL SEVER AGENT BLOCKS OF CODE.&#xA;&#xA;&#xA;USE [msdb]&#xA;GO&#xA;--USE [Gold_Debt]&#xA;--GO &#xA;&#xA;--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_Gold_Debt_SQLServerAgentDailyRefresh AS&#xA;BEGIN&#xA;&#xA;/****** Object:  Job [Gold_Debt Daily Refresh]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;BEGIN TRANSACTION&#xA;DECLARE @ReturnCode INT&#xA;SELECT @ReturnCode = 0&#xA;DECLARE @jobID1 Binary(16)&#xA;SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;&#xA;/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)&#xA;BEGIN&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;&#xA;END&#xA;&#xA;DECLARE @jobId BINARY(16)&#xA;EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Gold_Debt Daily Refresh', &#xA;  @enabled=1, &#xA;  @notify_level_eventlog=0, &#xA;  @notify_level_email=0, &#xA;  @notify_level_netsend=0, &#xA;  @notify_level_page=0, &#xA;  @delete_level=0, &#xA;  @description=N'No description available.', &#xA;  @category_name=N'[Uncategorized (Local)]', &#xA;  @owner_login_name=N'DESKTOP-L3H8CVG\Felipe', @job_id = @jobId OUTPUT&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;/****** Object:  Step [Gold_Debt SSIS ETL Process]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Gold_Debt SSIS ETL Process', &#xA;  @step_id=1, &#xA;  @cmdexec_success_code=0, &#xA;  @on_success_action=1, &#xA;  @on_success_step_id=0, &#xA;  @on_fail_action=2, &#xA;  @on_fail_step_id=0, &#xA;  @retry_attempts=0, &#xA;  @retry_interval=0, &#xA;  @os_run_priority=0, @subsystem=N'SSIS', &#xA;  @command=N'/FILE &quot;\&quot;C:\_BISolutions\Gold_Debt\Gold_Debt\Gold_Debt SSIS ETL Process.dtsx\&quot;&quot; /CHECKPOINTING OFF /REPORTING E', &#xA;  @database_name=N'master', &#xA;  @flags=0&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Gold_Debt SSIS ETL Process Daily Refresh', &#xA;  @enabled=1, &#xA;  @freq_type=4, &#xA;  @freq_interval=1, &#xA;  @freq_subday_type=1, &#xA;  @freq_subday_interval=0, &#xA;  @freq_relative_interval=0, &#xA;  @freq_recurrence_factor=0, &#xA;  @active_start_date=20240527, &#xA;  @active_end_date=99991231, &#xA;  @active_start_time=10000, &#xA;  @active_end_time=235959, &#xA;  @schedule_uid=N'6d3e1ef9-abc3-4a5d-88fa-1c3288595d7d'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;COMMIT TRANSACTION&#xA;GOTO EndSave&#xA;QuitWithRollback:&#xA;    IF (@@TRANCOUNT &gt; 0) ROLLBACK TRANSACTION&#xA;EndSave:&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;--GO&#xA;&#xA;&#xA;------------------------------------------&#xA;--SQL SERVER AGENT SSIS DAILY ETL SCHEDULED RUN ON UW SERVER:&#xA;--DEPENDING ON WHICH SERVER YOU ARE ON, YOU WILL HAVE TO COMMENT ON AND OFF THE SQL SEVER AGENT BLOCKS OF CODE.&#xA;&#xA;&#xA;&#xA;&#xA;--USE [msdb]&#xA;--GO&#xA;----USE [Gold_Debt]&#xA;----GO &#xA;&#xA;----DECLARE @jobID1 Binary(16)&#xA;----SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;----IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;----GO&#xA;&#xA;--CREATE OR ALTER PROCEDURE sp_Gold_Debt_SQLServerAgentDailyRefresh AS&#xA;--BEGIN&#xA;--/****** Object:  Job [Gold_Debt Daily Refresh]    Script Date: 5/27/2024 3:48:22 PM ******/&#xA;--BEGIN TRANSACTION&#xA;--DECLARE @ReturnCode INT&#xA;--SELECT @ReturnCode = 0&#xA;--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;&#xA;--/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 5/27/2024 3:48:23 PM ******/&#xA;--IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)&#xA;--BEGIN&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;&#xA;--END&#xA;&#xA;--DECLARE @jobId BINARY(16)&#xA;--EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Gold_Debt Daily Refresh', &#xA;--  @enabled=1, &#xA;--  @notify_level_eventlog=0, &#xA;--  @notify_level_email=0, &#xA;--  @notify_level_netsend=0, &#xA;--  @notify_level_page=0, &#xA;--  @delete_level=0, &#xA;--  @description=N'No description available.', &#xA;--  @category_name=N'[Uncategorized (Local)]', &#xA;--  @owner_login_name=N'fdgomez', @job_id = @jobId OUTPUT&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--/****** Object:  Step [Gold_Debt SSIS ETL Process]    Script Date: 5/27/2024 3:48:23 PM ******/&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Gold_Debt SSIS ETL Process', &#xA;--  @step_id=1, &#xA;--  @cmdexec_success_code=0, &#xA;--  @on_success_action=1, &#xA;--  @on_success_step_id=0, &#xA;--  @on_fail_action=2, &#xA;--  @on_fail_step_id=0, &#xA;--  @retry_attempts=0, &#xA;--  @retry_interval=0, &#xA;--  @os_run_priority=0, @subsystem=N'SSIS', &#xA;--  @command=N'/FILE &quot;\&quot;C:\_BISolutions\Gold_Debt\Gold_Debt\Gold_Debt SSIS ETL Process.dtsx\&quot;&quot; /CHECKPOINTING OFF /REPORTING E', &#xA;--  @database_name=N'master', &#xA;--  @flags=0&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Gold_Debt SSIS ETL Process Daily Refresh', &#xA;--  @enabled=1, &#xA;--  @freq_type=4, &#xA;--  @freq_interval=1, &#xA;--  @freq_subday_type=1, &#xA;--  @freq_subday_interval=0, &#xA;--  @freq_relative_interval=0, &#xA;--  @freq_recurrence_factor=0, &#xA;--  @active_start_date=20240527, &#xA;--  @active_end_date=99991231, &#xA;--  @active_start_time=10000, &#xA;--  @active_end_time=235959, &#xA;--  @schedule_uid=N'b0dc3b6b-5960-4780-8dae-8e6e15b26258'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--COMMIT TRANSACTION&#xA;--GOTO EndSave&#xA;--QuitWithRollback:&#xA;--    IF (@@TRANCOUNT &gt; 0) ROLLBACK TRANSACTION&#xA;--EndSave:&#xA;--END&#xA;--GO&#xA;&#xA;----EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;----GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Raw Data Bulk Insert Into Staging Tables"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{676FDCEB-950A-4F70-959E-27F88A7AFD7E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Raw Data Bulk Insert Into Staging Tables">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Raw Data Bulk Insert Into Staging Tables\BULK INSERT Into Staging Table StagingBingCovid19DataRaw"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Perform BULK INSERT Into StagingBindCovid19DataRaw From CSV File"
          DTS:DTSID="{475D3264-9320-4967-B75D-9F5EE2712A1C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="BULK INSERT Into Staging Table StagingBingCovid19DataRaw"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLImportBingCovid19DataRawToStagingTable;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Raw Data Bulk Insert Into Staging Tables\BULK INSERT Into Staging Table StagingDebtPennyRaw"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Perform BULK INSERT Into StagingDebtPennyRaw From CSV File"
          DTS:DTSID="{6E6523F7-7189-4AF0-82AA-9867285E8F46}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="BULK INSERT Into Staging Table StagingDebtPennyRaw"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="EXEC sp_ETLImportDebtPennyRawToStagingTable;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{358C5BD0-4954-45FE-9711-351EE91AC88E}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert CSV Files Into Staging Tables"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="BingCovid19DataRaw"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Bing Covid19 Data]"
                      connectionManagerRefId="Package.ConnectionManagers[Bing Covid19 Data]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[id]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[id]"
                          name="id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[updated]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[updated]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[updated]"
                          name="updated"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[confirmed]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[confirmed]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[confirmed]"
                          name="confirmed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[confirmed_change]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[confirmed_change]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[confirmed_change]"
                          name="confirmed_change"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[deaths]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[deaths]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[deaths]"
                          name="deaths"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[deaths_change]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[deaths_change]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[deaths_change]"
                          name="deaths_change"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[recovered]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[recovered]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[recovered]"
                          name="recovered"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[recovered_change]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[recovered_change]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[recovered_change]"
                          name="recovered_change"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[latitude]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[latitude]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[latitude]"
                          name="latitude"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[longitude]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[longitude]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[longitude]"
                          name="longitude"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[iso2]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[iso2]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[iso2]"
                          name="iso2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[iso3]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[iso3]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[iso3]"
                          name="iso3"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[country_region]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[country_region]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[country_region]"
                          name="country_region"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[admin_region_1]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[admin_region_1]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[admin_region_1]"
                          name="admin_region_1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[iso_subdivision]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[iso_subdivision]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[iso_subdivision]"
                          name="iso_subdivision"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[admin_region_2]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[admin_region_2]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[admin_region_2]"
                          name="admin_region_2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[load_time]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[load_time]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[load_time]"
                          name="load_time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="id" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[updated]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="updated" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[confirmed]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="confirmed" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[confirmed_change]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="confirmed_change" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[deaths]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="deaths" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[deaths_change]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="deaths_change" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[recovered]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="recovered" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[recovered_change]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="recovered_change" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[latitude]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="latitude" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[longitude]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="longitude" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[iso2]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="iso2" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[iso3]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="iso3" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[country_region]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="country_region" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[admin_region_1]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="admin_region_1" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[iso_subdivision]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="iso_subdivision" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[admin_region_2]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="admin_region_2" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].ExternalColumns[load_time]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="load_time" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Inputs[Data Conversion Input].Columns[id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="id"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[id]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Outputs[Data Conversion Output].Columns[id]"
                          dataType="i1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Outputs[Data Conversion Output].Columns[id]"
                          name="id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[id]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="DebtPennyRaw"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Debt Penny]"
                      connectionManagerRefId="Package.ConnectionManagers[Debt Penny]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Record Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Record Date]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Record Date]"
                          name="Record Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Debt Held by the Public]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Debt Held by the Public]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Debt Held by the Public]"
                          name="Debt Held by the Public"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Intragovernmental Holdings]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Intragovernmental Holdings]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Intragovernmental Holdings]"
                          name="Intragovernmental Holdings"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Total Public Debt Outstanding]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Total Public Debt Outstanding]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Total Public Debt Outstanding]"
                          name="Total Public Debt Outstanding"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Source Line Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Source Line Number]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Source Line Number]"
                          name="Source Line Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Fiscal Year]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Fiscal Year]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Fiscal Year]"
                          name="Fiscal Year"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Fiscal Quarter Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Fiscal Quarter Number]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Fiscal Quarter Number]"
                          name="Fiscal Quarter Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Calendar Year]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Calendar Year]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Calendar Year]"
                          name="Calendar Year"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Calendar Quarter Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Calendar Quarter Number]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Calendar Quarter Number]"
                          name="Calendar Quarter Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Calendar Month Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Calendar Month Number]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Calendar Month Number]"
                          name="Calendar Month Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Calendar Day Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Calendar Day Number]"
                          length="50"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].Columns[Calendar Day Number]"
                          name="Calendar Day Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Record Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Record Date" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Debt Held by the Public]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Debt Held by the Public" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Intragovernmental Holdings]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Intragovernmental Holdings" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Total Public Debt Outstanding]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Total Public Debt Outstanding" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Source Line Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Source Line Number" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Fiscal Year]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Fiscal Year" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Fiscal Quarter Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Fiscal Quarter Number" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Calendar Year]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Calendar Year" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Calendar Quarter Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Calendar Quarter Number" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Calendar Month Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Calendar Month Number" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Output].ExternalColumns[Calendar Day Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Calendar Day Number" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[StagingBingCovid19DataRaw]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt_Test.fdgomez]"
                      connectionManagerRefId="Package.ConnectionManagers[uwc-studentsql.continuum.uw.edu\uwcbiddsql.Gold_Debt_Test.fdgomez]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[updated]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="updated"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[updated]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[updated]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[confirmed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="confirmed"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[confirmed]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[confirmed]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[confirmed_change]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="confirmed_change"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[confirmed_change]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[confirmed_change]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[deaths]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="deaths"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[deaths]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[deaths]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[deaths_change]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="deaths_change"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[deaths_change]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[deaths_change]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[recovered]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="recovered"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[recovered]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[recovered]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[recovered_change]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="recovered_change"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[recovered_change]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[recovered_change]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[latitude]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="latitude"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[latitude]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[latitude]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[longitude]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="longitude"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[longitude]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[longitude]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[iso2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="iso2"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso2]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[iso2]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[iso3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="iso3"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso3]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[iso3]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[country_region]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="country_region"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[country_region]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[country_region]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[admin_region_1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="admin_region_1"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[admin_region_1]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[admin_region_1]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[iso_subdivision]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="iso_subdivision"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso_subdivision]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[iso_subdivision]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[admin_region_2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="admin_region_2"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[admin_region_2]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[admin_region_2]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[load_time]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="load_time"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[load_time]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[load_time]" />
                        <inputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="id"
                          externalMetadataColumnId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output].Columns[id]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                          dataType="wstr"
                          length="200"
                          name="id" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[updated]"
                          dataType="wstr"
                          length="200"
                          name="updated" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[confirmed]"
                          dataType="wstr"
                          length="200"
                          name="confirmed" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[confirmed_change]"
                          dataType="wstr"
                          length="200"
                          name="confirmed_change" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[deaths]"
                          dataType="wstr"
                          length="200"
                          name="deaths" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[deaths_change]"
                          dataType="wstr"
                          length="200"
                          name="deaths_change" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[recovered]"
                          dataType="wstr"
                          length="200"
                          name="recovered" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[recovered_change]"
                          dataType="wstr"
                          length="200"
                          name="recovered_change" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[latitude]"
                          dataType="wstr"
                          length="200"
                          name="latitude" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[longitude]"
                          dataType="wstr"
                          length="200"
                          name="longitude" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso2]"
                          dataType="wstr"
                          length="200"
                          name="iso2" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso3]"
                          dataType="wstr"
                          length="200"
                          name="iso3" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[country_region]"
                          dataType="wstr"
                          length="200"
                          name="country_region" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[admin_region_1]"
                          dataType="wstr"
                          length="200"
                          name="admin_region_1" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[iso_subdivision]"
                          dataType="wstr"
                          length="200"
                          name="iso_subdivision" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[admin_region_2]"
                          dataType="nText"
                          name="admin_region_2" />
                        <externalMetadataColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[load_time]"
                          dataType="nText"
                          name="load_time" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables.Paths[Data Conversion Output]"
                  endId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables.Paths[Flat File Source Output]"
                  endId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion.Inputs[Data Conversion Input]"
                  name="Flat File Source Output"
                  startId="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw.Outputs[Flat File Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Run Gold_Debt SQL Queries"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{4BBDDA70-CF78-4899-B0AD-30C0D154799E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Run Gold_Debt SQL Queries">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Run Gold_Debt SQL Queries\Run Gold_Debt SQL Queries"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Run ALL Gold_Debt SQL Scripts"
          DTS:DTSID="{EBDD8CC1-DE48-45C3-96AD-7F9BD0C37645}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Run Gold_Debt SQL Queries"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{37D7DCC5-6601-42F5-9FB8-C59DE5855246}"
              SQLTask:SqlStatementSource="--*************************************************************************--&#xA;-- Title: BIDD330A Final&#xA;-- Author: Felipe Gomez&#xA;-- Desc: This file creates our Gold_Data Database, Staging Tables, BULK INSERT INTO our Staging Tables, Dimension and Fact Tables &amp; our Foreign Key Constraints, Flush and Fill ETL process with SQL code&#xA;-- Change Log: When,Who,What&#xA;-- 2024-05-27,Felipe Gomez,Created File&#xA;-- TODO: 05/27/2024,Felipe Gomez,Updated code to include logging and transaction handling&#xA;---------------------------------&#xA;--PLEASE MAKE SURE TO ADD BOTH COVID19 AND DEBT PENNY CSV FILES DO YOUR C:\Data directory!!!!!!!!!!!!!!!!!!!&#xA;USE MASTER&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLGoldDebtDatabaseCreation AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;IF EXISTS (SELECT 1 FROM sys.databases WHERE name = 'Gold_Debt')&#xA;&#x9;&#x9;ALTER DATABASE [Gold_Debt] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;&#xA;&#x9;&#x9;DROP DATABASE [Gold_Debt];&#xA;&#x9;&#x9;CREATE DATABASE [Gold_Debt]&#xA;&#x9;&#x9;ALTER DATABASE [Gold_Debt] SET MULTI_USER;&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Our Database/DataWarehouse Gold_Debt'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;&#xA;--EXEC sp_ETLGoldDebtDatabaseCreation;&#xA;--GO&#xA;------------------------------------&#xA;--CREATE STAGING TABLES&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLStagingBingCovid19DataRaw AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;If (SELECT Object_ID('StagingBingCovid19DataRaw')) IS NOT NULL&#xA;&#x9;&#x9;DROP TABLE StagingBingCovid19DataRaw;&#xA;&#x9;&#x9;CREATE TABLE StagingBingCovid19DataRaw (&#xA;&#x9;&#x9;&#x9;[id] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[updated] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[confirmed] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[confirmed_change] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[deaths] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[deaths_change] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[recovered] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[recovered_change] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[latitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[longitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[iso2] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[iso3] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[country_region] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[admin_region_1] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[iso_subdivision] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[admin_region_2] NVARCHAR(MAX),&#xA;&#x9;&#x9;&#x9;[load_time] NVARCHAR(MAX)&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Staging Table StagingBingCovid19DataRaw for BULK INSERT'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLStagingBingCovid19DataRaw;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLStagingDebtPennyRaw AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;If (SELECT Object_ID('StagingDebtPennyRaw')) IS NOT NULL&#xA;&#x9;&#x9;DROP TABLE StagingDebtPennyRaw;&#xA;&#x9;&#x9;CREATE TABLE StagingDebtPennyRaw (&#xA;&#x9;&#x9;&#x9;[Record Date] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Debt Held by the Public] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Intragovernmental Holdings] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Total Public Debt Outstanding] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Source Line Number] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Fiscal Year] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Fiscal Quarter Number] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Calendar Year] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Calendar Quarter Number] NVARCHAR(200),&#xA;&#x9;&#x9;    [Calendar Month Number] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Calendar Day Number]NVARCHAR(200)&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Staging Table StagingDebtPennyRaw for BULK INSERT'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLStagingDebtPennyRaw;&#xA;--GO&#xA;&#xA;--------------------------------------------------------BULK INSERT RAW CSV FILES INTO OUR STAGING TABLES&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLImportBingCovid19DataRawToStagingTable AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;BULK INSERT [StagingBingCovid19DataRaw]&#xA;&#x9;&#x9;FROM 'C:\Data\bing_covid-19_data.csv' --'\\DESKTOP\Data\bing_covid-19_data.csv' --&#xA;&#x9;&#x9;WITH (&#xA;&#x9;&#x9;&#x9;DATAFILETYPE = 'char',&#xA;&#x9;&#x9;&#x9;FORMAT = 'CSV',&#xA;&#x9;&#x9;&#x9;FIELDTERMINATOR = ',',&#xA;&#x9;&#x9;&#x9;ROWTERMINATOR = '0x0a',&#xA;&#x9;&#x9;&#x9;FIRSTROW = 2,&#xA;&#x9;&#x9;&#x9;MAXERRORS = 0&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Importing COVID19 Raw Data to Staging Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLImportBingCovid19DataRawToStagingTable;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLImportDebtPennyRawToStagingTable AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;BULK INSERT [StagingDebtPennyRaw]&#xA;&#x9;&#x9;FROM 'C:\Data\DebtPenny_20140426_20240425.csv'&#xA;&#x9;&#x9;WITH (&#xA;&#x9;&#x9;&#x9;DATAFILETYPE = 'char',&#xA;&#x9;&#x9;&#x9;FORMAT = 'CSV',&#xA;&#x9;&#x9;&#x9;FIELDTERMINATOR = ',',&#xA;&#x9;&#x9;&#x9;ROWTERMINATOR = '0x0a',&#xA;&#x9;&#x9;&#x9;FIRSTROW = 2,&#xA;&#x9;&#x9;&#x9;MAXERRORS = 0&#xA;&#x9;&#x9;);&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Importing Debt Penny Raw Data to Staging Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLImportDebtPennyRawToStagingTable;&#xA;--GO&#xA;&#xA;-------------------------------------------------------------------CREATE DIMENSION AND FACT TABLES (INCLUDING PRIMARY AND FOREGIN KEYS)&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLGoldDebtDimensionAndFactTablesCreation AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;/****** [dbo].[DimDates] ******/&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[DimDates]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[DimDates] (&#xA;&#x9;&#x9;&#x9;[DateKey] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[FullDate] DATETIME NOT NULL,&#xA;&#x9;&#x9;&#x9;[FullDateName] NVARCHAR(200) NULL,&#xA;&#x9;&#x9;&#x9;[WeekID] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[MonthID] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[MonthName] NVARCHAR(200) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Quarter] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[YearQuarter] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[YearID] INT NOT NULL,&#xA;&#x9;&#x9;&#x9;[YearName] NVARCHAR(200) NOT NULL,&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_DimDates] PRIMARY KEY CLUSTERED&#xA;&#x9;&#x9;&#x9;([DateKey])&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[DimCountries]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[DimCountries] (&#xA;&#x9;&#x9;&#x9;[CountryKey] INT IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Country] NVARCHAR (200)&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_DimCountries] PRIMARY KEY CLUSTERED&#xA;&#x9;&#x9;&#x9;([CountryKey])&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[DimRegions]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[DimRegions] (&#xA;&#x9;&#x9;&#x9;[RegionKey] INT IDENTITY (1, 1) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Region] NVARCHAR (200)&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_DimRegion] PRIMARY KEY CLUSTERED&#xA;&#x9;&#x9;&#x9;([RegionKey])&#xA;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[FactCovid]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[FactCovid] (&#xA;&#x9;&#x9;&#x9;[FactCovidKey] INT IDENTITY (1,1) NOT NULL, --future Surrogate Key&#xA;&#x9;&#x9;&#x9;[ID] INT,&#xA;&#x9;&#x9;&#x9;[Updated] DATE,&#xA;&#x9;&#x9;&#x9;[DateKey] INT,&#xA;&#x9;&#x9;&#x9;[Confirmed] INT,&#xA;&#x9;&#x9;&#x9;[Confirmed_Change] INT,&#xA;&#x9;&#x9;&#x9;[Deaths] INT,&#xA;&#x9;&#x9;&#x9;[Deaths_Change] INT,&#xA;&#x9;&#x9;&#x9;[Recovered] INT,&#xA;&#x9;&#x9;&#x9;[Recovered_Change] INT,&#xA;&#x9;&#x9;&#x9;[Latitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Longitude] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Iso2] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Iso3] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Country_Region] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[CountryKey] INT,&#xA;&#x9;&#x9;&#x9;[Admin_Region_1] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[RegionKey] INT NULL,&#xA;&#x9;&#x9;&#x9;[Iso_Subdivision] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Admin_Region_2] NVARCHAR(200),&#xA;&#x9;&#x9;&#x9;[Load_Time] datetime2,&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_FactCovid] PRIMARY KEY CLUSTERED ([FactCovidKey], [ID], [DateKey], [CountryKey])&#xA;&#x9;&#x9;) ON [PRIMARY]&#xA;&#xA;&#x9;&#x9;DROP TABLE IF EXISTS [dbo].[FactDebt]&#xA;&#x9;&#x9;CREATE TABLE [dbo].[FactDebt] (&#xA;&#x9;&#x9;&#x9;[FactDebtKey] INT IDENTITY(1,1) NOT NULL,&#xA;&#x9;&#x9;&#x9;[Record_Date] DATE NULL,&#xA;&#x9;&#x9;&#x9;[DateKey] INT,&#xA;&#x9;&#x9;&#x9;[Public_Debt] FLOAT NULL,&#xA;&#x9;&#x9;&#x9;[Intragovernmental_Holdings] FLOAT NULL,&#xA;&#x9;&#x9;&#x9;[Total_Public_Debt_Outstanding] FLOAT NULL,&#xA;&#x9;&#x9;&#x9;[Source_Line_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Fiscal_Year] INT NULL,&#xA;&#x9;&#x9;&#x9;[Fiscal_Quarter_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Year] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Quarter_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Month_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;[Calendar_Day_Number] INT NULL,&#xA;&#x9;&#x9;&#x9;CONSTRAINT [PK_FactDebt] PRIMARY KEY CLUSTERED ([FactDebtKey], [DateKey])&#xA;&#x9;&#x9;) ON [PRIMARY]&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Dimension and Fact Tables'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLGoldDebtDimensionAndFactTablesCreation;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLGoldDebtForeignKeyConstraints AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimDates] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimCountries] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([CountryKey]) REFERENCES [dbo].[DimCountries] ([CountryKey])&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimRegions] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([RegionKey]) REFERENCES [dbo].[DimRegions] ([RegionKey])&#xA;&#x9;&#x9;ALTER TABLE [dbo].[FactDebt] ADD CONSTRAINT [FK_FactDebt_DimDates] &#xA;&#x9;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating Foreign Key Constraints'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLGoldDebtForeignKeyConstraints;&#xA;--GO&#xA;&#xA;-------------------------------------------------------PERFORM OUR ETL FLUSH AND FILL PROCESS&#xA;&#xA;-- 1) CREATE OUR ETL TABLE, VIEW AND INSERT STORED PROCEDURE&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLLogTable AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;IF NOT Exists(SELECT * FROM Sys.tables WHERE [name] = 'ETLLog')&#xA;&#x9;&#x9;  CREATE -- Drop&#xA;&#x9;&#x9;  TABLE ETLLog&#xA;&#x9;&#x9;  (ETLLogID INT IDENTITY PRIMARY KEY&#xA;&#x9;&#x9;  ,ETLDateAndTime DATETIME DEFAULT GETDATE()&#xA;&#x9;&#x9;  ,ETLAction NVARCHAR(100)&#xA;&#x9;&#x9;  ,ETLLogMessage NVARCHAR(2000)&#xA;&#x9;&#x9;  );&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Log Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLLogTable;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLLogView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW vETLLog&#xA;&#x9;&#x9;AS&#xA;&#x9;&#x9;  SELECT&#xA;&#x9;&#x9;   ETLLogID&#xA;&#x9;&#x9;  ,ETLDate = Format(ETLDateAndTime, ''D'', ''en-us'')&#xA;&#x9;&#x9;  ,ETLTime = Format(Cast(ETLDateAndTime as datetime2), ''HH:mm'', ''en-us'')&#xA;&#x9;&#x9;  ,ETLAction&#xA;&#x9;&#x9;  ,ETLLogMessage&#xA;&#x9;&#x9;  FROM ETLLog');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Log View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLLogView;&#xA;--GO&#xA;&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLInsertETLLog (@ETLAction NVARCHAR(100), @ETLLogMessage NVARCHAR(2000)) AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;    BEGIN TRAN;&#xA;      INSERT INTO [ETLLog] (ETLAction, ETLLogMessage)&#xA;      Values&#xA;       (@ETLAction,@ETLLogMessage)&#xA;    Commit Tran;&#xA;    Set @RC = 1;&#xA;  End Try&#xA;  Begin Catch&#xA;    If @@TRANCOUNT &gt; 0 Rollback Tran;&#xA;    Set @RC = -1;&#xA;  End Catch&#xA;  Return @RC;&#xA;End&#xA;GO -- If you don't put a go here the test code will be included in the Sproc body!&#xA;&#xA;-- 2) CREATE OUR DROP FOREIGN KEY CONSTRAINTS STORED PROCEDURE&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDropForeignKeyConstraints AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;    ALTER TABLE [dbo].[FactCovid] &#xA;     DROP CONSTRAINT [FK_FactCovid_DimDates] &#xA;&#xA;    ALTER TABLE [dbo].[FactCovid] &#xA;     DROP CONSTRAINT [FK_FactCovid_DimCountries] &#xA;&#xA;    ALTER TABLE [dbo].[FactCovid] &#xA;     DROP CONSTRAINT [FK_FactCovid_DimRegions] &#xA;&#xA;    ALTER TABLE [dbo].[FactDebt] &#xA;     DROP CONSTRAINT [FK_FactDebt_DimDates] &#xA;&#xA;    -- Optional: Unlike the other tables DimDates does not change often --&#xA;    --Alter Table [dbo].[FactSalesOrders] &#xA;    -- Drop Constraint [FK_FactSalesOrders_DimDates]&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLDropForeignKeyConstraints'&#xA;&#x9;       ,@ETLLogMessage = 'Foreign Keys dropped';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     DECLARE @ErrorMessage nvarchar(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLDropForeignKeyConstraints'&#xA;&#x9;     ,@ETLLogMessage = 'Foreign Keys cannot be dropped (They may be missing or misnamed)';&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDropForeignKeyConstraints;&#xA;--GO&#xA;&#xA;-- 3) CREATE OUR TRUNCATE TABLES STORED PROCEDURE&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLTruncateTables AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;    -- ETL Processing Code --&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.DimCountries;&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.DimRegions;&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.FactCovid;   &#xA;&#x9;TRUNCATE TABLE [Gold_Debt].dbo.FactDebt;   &#xA;    -- Optional: Unlike the other tables DimDates does not change often --&#xA;    TRUNCATE TABLE [Gold_Debt].dbo.DimDates; &#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLTruncateTables'&#xA;&#x9;       ,@ETLLogMessage = 'Tables data removed';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLTruncateTables'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLTruncateTables;&#xA;--GO&#xA;&#xA;-- 4) CREATE OUR STORED PROCEDURES TO FILL IN OUR DIMENSIONS&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillDimDates AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;      DECLARE @StartDate DATETIME = '01/01/2014'&#xA;      DECLARE @EndDate DATETIME = '12/31/2024' &#xA;      DECLARE @DateInProcess DATETIME  = @StartDate&#xA;      -- Loop through the dates until you reach the end date&#xA;      BEGIN TRAN&#xA;      WHILE @DateInProcess &lt;= @EndDate&#xA;       BEGIN&#xA;       -- Add a row Into the date dimension table for this date&#xA;       INSERT INTO DimDates &#xA;       ( [DateKey],[FullDate],[FullDateName],[WeekID],[MonthID],[MonthName],[Quarter],[YearQuarter],[YearID],[YearName])&#xA;       VALUES ( &#xA;         Cast(Convert(NVARCHAR(50), @DateInProcess, 112) AS INT) -- [DateKey]&#xA;        ,@DateInProcess -- [FullDate]&#xA;        ,DateName(WEEKDAY, @DateInProcess) + ', ' + Convert(NVARCHAR(50), @DateInProcess, 110) -- [FullDateName]&#xA;&#x9;&#x9;,CAST(DATEPART(ISO_WEEK, @DateInProcess) AS INT) --[WeekID]&#xA;        ,Cast(Left(Convert(NVARCHAR(50), @DateInProcess, 112), 6) AS INT)  -- [MonthID]&#xA;        ,DateName(month, @DateInProcess) + ' - ' + DateName(YYYY,@DateInProcess) -- [MonthName]&#xA;&#x9;&#x9;,DATEPART(QUARTER,@DateInProcess) -- [Quarter]&#xA;&#x9;&#x9;,CAST(CONCAT(YEAR(@DateInProcess), DATEPART(QUARTER,@DateInProcess)) AS INT) -- [YearQuarter]&#xA;        ,Year(@DateInProcess) -- [YearID] &#xA;        ,Cast(Year(@DateInProcess ) AS NVARCHAR(50)) -- [YearName] &#xA;        )  &#xA;       -- Add a day and loop again&#xA;       SET @DateInProcess = DateAdd(d, 1, @DateInProcess)&#xA;       END&#xA;&#x9;   COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillDimDates'&#xA;&#x9;       ,@ETLLogMessage = 'DimDates filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog&#xA;&#x9;      @ETLAction = 'sp_ETLFillDimDates'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillDimDates;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLDimCountries AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLDimCountries]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for DimCountries*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9; SELECT DISTINCT [Country_Region] AS [Country]&#xA;&#x9;&#x9;&#x9; FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL DimCountries View For Inserting Data Into Our DimCountries Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLDimCountries;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLDimCountries!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLDimCountries&#xA;--/* Desc: Extracts and transforms data for DimCountries&#xA;--*/&#xA;--AS SELECT DISTINCT [Country_Region] AS [Country] FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillDimCountries AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT Count(*) FROM DimCountries) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].dbo.DimCountries&#xA;      ([Country]&#xA;      )&#xA;      SELECT [Country]&#xA;      FROM vETLDimCountries&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillDimCountries'&#xA;&#x9;       ,@ETLLogMessage = 'DimCountries filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillDimCountries'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillDimCountries;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLDimRegions AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLDimRegions]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for DimRegions*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9; SELECT DISTINCT [Admin_Region_1] AS [Region]&#xA;&#x9;&#x9;&#x9; FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL DimRegions View For Inserting Data Into Our DimRegions Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLDimRegions;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLDimRegions!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLDimRegions&#xA;--/* Desc: Extracts and transforms data for DimRegions&#xA;--*/&#xA;--AS SELECT DISTINCT [Admin_Region_1] AS [Region] FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillDimRegions AS&#xA;BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY&#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT COUNT(*) FROM DimRegions) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].dbo.DimRegions&#xA;      ([Region]&#xA;      )&#xA;      SELECT [Region]&#xA;      FROM vETLDimRegions&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillDimRegions'&#xA;&#x9;       ,@ETLLogMessage = 'DimRegions filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillDimRegions'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillDimRegions;&#xA;--GO&#xA;&#xA;-- 5) CREATE OUR STORED PROCEDURES TO FILL IN OUR FACTS&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLFactCovid AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLFactCovid]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for FactCovid*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9;  SELECT&#xA;&#x9;&#x9;&#x9;&#x9;   --[FactCovidKey]&#xA;&#x9;&#x9;&#x9;&#x9;   [ID]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Updated]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[DateKey] = [D].[DateKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Confirmed]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Confirmed_Change]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Deaths]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Deaths_Change]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Recovered]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Recovered_Change]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Latitude]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Longitude]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Iso2]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Iso3]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Country_Region]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[CountryKey] = [C].[CountryKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Admin_Region_1]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[RegionKey] = [R].[RegionKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Iso_Subdivision]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Admin_Region_2]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Load_Time]&#xA;&#x9;&#x9;&#x9;  FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimCountries] [C]&#xA;&#x9;&#x9;&#x9;   ON [C19].[Country_Region] = [C].[Country]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimRegions] [R]&#xA;&#x9;&#x9;&#x9;   ON [C19].[Admin_Region_1] = [R].[Region]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D]&#xA;&#x9;&#x9;&#x9;   ON CAST([C19].[Updated] AS DATE) = CAST([D].[FullDate] AS DATE)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL FactCovid View For Inserting Data Into Our FactCovid Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLFactCovid;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLFactCovid!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLFactCovid&#xA;--/* Desc: Extracts and transforms data for FactCovid&#xA;--*/&#xA;--AS&#xA;--  SELECT&#xA;--       --[FactCovidKey]&#xA;--       [ID],[Updated],[CovidDateKey] = [D].[DateKey],[Confirmed],[Confirmed_Change],[Deaths],[Deaths_Change],[Recovered],[Recovered_Change],[Latitude] ,[Longitude],[Iso2],[Iso3]&#xA;--      ,[Country_Region],[CountryKey] = [C].[CountryKey],[Admin_Region_1],[RegionKey] = [R].[RegionKey],[Iso_Subdivision],[Admin_Region_2],[Load_Time]&#xA;--  FROM [Gold_Debt].[dbo].[StagingBingCovid19DataRaw] [C19]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimCountries] [C] ON [C19].[Country_Region] = [C].[Country]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimRegions] [R] ON [C19].[Admin_Region_1] = [R].[Region]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D] ON CAST([C19].[Updated] AS DATE) = CAST([D].[FullDate] AS DATE)&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillFactCovid&#xA;/* Desc: Inserts data Into FactCovid using the vETLFactCovid view&#xA;*/&#xA;AS&#xA; BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY &#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT COUNT(*) FROM [Gold_Debt].[dbo].[FactCovid]) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].[dbo].[FactCovid]&#xA;      ([ID]&#xA;      ,[Updated]&#xA;      ,[DateKey]&#xA;      ,[Confirmed]&#xA;      ,[Confirmed_Change]&#xA;      ,[Deaths]&#xA;      ,[Deaths_Change]&#xA;      ,[Recovered]&#xA;      ,[Recovered_Change]&#xA;      ,[Latitude]&#xA;      ,[Longitude]&#xA;      ,[Iso2]&#xA;      ,[Iso3]&#xA;      ,[Country_Region]&#xA;      ,[CountryKey]&#xA;      ,[Admin_Region_1]&#xA;      ,[RegionKey]&#xA;      ,[Iso_Subdivision]&#xA;      ,[Admin_Region_2]&#xA;      ,[Load_Time]&#xA;      )&#xA;      SELECT&#xA;       [ID]&#xA;      ,[Updated]&#xA;      ,[DateKey]&#xA;      ,[Confirmed]&#xA;      ,[Confirmed_Change]&#xA;      ,[Deaths]&#xA;      ,[Deaths_Change]&#xA;      ,[Recovered]&#xA;      ,[Recovered_Change]&#xA;      ,[Latitude]&#xA;      ,[Longitude]&#xA;      ,[Iso2]&#xA;      ,[Iso3]&#xA;      ,[Country_Region]&#xA;      ,[CountryKey]&#xA;      ,[Admin_Region_1]&#xA;      ,[RegionKey]&#xA;      ,[Iso_Subdivision]&#xA;      ,[Admin_Region_2]&#xA;      ,[Load_Time]&#xA;      FROM [dbo].[vETLFactCovid]&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillFactCovid'&#xA;&#x9;       ,@ETLLogMessage = 'FactCovid filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillFactCovid'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillFactCovid;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLvETLFactDebt AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;--CAST(LEFT(TRIM([Calendar Day Number]), 2) AS char(2))&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vETLFactDebt]&#xA;&#x9;&#x9;&#x9; /* Desc: Extracts and transforms data for FactDebt*/&#xA;&#x9;&#x9;     AS&#xA;&#x9;&#x9;&#x9;  SELECT&#xA;&#x9;&#x9;&#x9;&#x9;   --[FactDebtKey]&#xA;&#x9;&#x9;&#x9;&#x9;   [RecordDate] = [Record Date]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[DateKey] = [D].[DateKey]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Public_Debt] = CAST([Debt Held by the Public] AS money)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Intragovernmental_Holdings] = CAST([Intragovernmental Holdings] AS money)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Total_Public_Debt_Outstanding] = CAST([Total Public Debt Outstanding] AS money)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Source_Line_Number] = [Source Line Number]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Fiscal_Year] = [Fiscal Year]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Fiscal_Quarter_Number] = [Fiscal Quarter Number]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendar_Year] = [Calendar Year]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendar_Quarter_Number] = CAST(TRIM([Calendar Quarter Number]) AS INT)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendar_Month_Number] = CAST(TRIM([Calendar Month Number]) AS INT)&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Calendary_Day_Number] = CAST(TRIM(REPLACE([Calendar Day Number], CHAR(13), '''')) AS INT)&#xA;&#x9;&#x9;&#x9;  FROM [Gold_Debt].[dbo].[StagingDebtPennyRaw] [DPR]&#xA;&#x9;&#x9;&#x9;  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D]&#xA;&#x9;&#x9;&#x9;   ON CAST([DPR].[Record Date] AS DATE) = CAST([D].[FullDate] AS DATE)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL FactDebt View For Inserting Data Into Our FactDebt Table'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLvETLFactDebt;&#xA;--GO&#xA;&#xA;--NO LONGER NEEDED BECAUSE WE CREATE A STORED PROCEDURE TO CREATE OR ALTER THE VIEW FOR vETLFactDebt!!!!!!!!!!!!!!!!!&#xA;--CREATE OR ALTER VIEW vETLFactDebt&#xA;--/* Desc: Extracts and transforms data for FactCovid&#xA;--*/&#xA;--AS&#xA;--  SELECT&#xA;--       --[FactDebtKey]&#xA;--&#x9;   [RecordDate] = [Record Date],[DebtDateKey] = [D].[DateKey],[Public_Debt] = [Debt Held by the Public],[Intragovernmental_Holdings] = [Intragovernmental Holdings],[Total_Public_Debt_Outstanding] = [Total Public Debt Outstanding],[Source_Line_Number] = [Source Line Number],[Fiscal_Year] = [Fiscal Year]&#xA;--      ,[Fiscal_Quarter_Number] = [Fiscal Quarter Number],[Calendar_Year] = [Calendar Year],[Calendar_Quarter_Number] = [Calendar Quarter Number],[Calendar_Month_Number] = [Calendar Month Number],[Calendary_Day_Number] = [Calendar Day Number]&#xA;--  FROM [Gold_Debt].[dbo].[StagingDebtPennyRaw] [DPR]&#xA;--  LEFT JOIN [Gold_Debt].[dbo].[DimDates] [D] ON CAST([DPR].[Record Date] AS DATE) = CAST([D].[FullDate] AS DATE)&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFillFactDebt&#xA;/* Desc: Inserts data Into FactCovid using the vETLFactCovid view&#xA;*/&#xA;AS&#xA; BEGIN&#xA;  DECLARE @RC INT = 0;&#xA;  BEGIN TRY &#xA;&#xA;    -- ETL Processing Code --&#xA;    IF ((SELECT COUNT(*) FROM FactDebt) = 0)&#xA;     BEGIN TRAN&#xA;      INSERT INTO [Gold_Debt].[dbo].[FactDebt]&#xA;      ([Record_Date]&#xA;      ,[DateKey]&#xA;      ,[Public_Debt]&#xA;      ,[Intragovernmental_Holdings]&#xA;      ,[Total_Public_Debt_Outstanding]&#xA;      ,[Source_Line_Number]&#xA;      ,[Fiscal_Year]&#xA;      ,[Fiscal_Quarter_Number]&#xA;      ,[Calendar_Year]&#xA;      ,[Calendar_Quarter_Number]&#xA;      ,[Calendar_Month_Number]&#xA;      ,[Calendar_Day_Number]&#xA;      )&#xA;      SELECT&#xA;&#x9;   [RecordDate]&#xA;&#x9;  ,[DateKey]&#xA;      ,[Public_Debt]&#xA;      ,[Intragovernmental_Holdings]&#xA;      ,[Total_Public_Debt_Outstanding]&#xA;      ,[Source_Line_Number]&#xA;      ,[Fiscal_Year]&#xA;      ,[Fiscal_Quarter_Number]&#xA;      ,[Calendar_Year]&#xA;      ,[Calendar_Quarter_Number]&#xA;      ,[Calendar_Month_Number]&#xA;      ,[Calendary_Day_Number]&#xA;      FROM vETLFactDebt&#xA;    COMMIT TRAN&#xA;&#xA;    EXEC sp_ETLInsertETLLog&#xA;&#x9;        @ETLAction = 'sp_ETLFillFactDebt'&#xA;&#x9;       ,@ETLLogMessage = 'FactDebt filled';&#xA;    SET @RC = +1&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;     IF @@TRANCOUNT &gt; 0 ROLLBACK TRAN;&#xA;     DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;&#x9; EXEC sp_ETLInsertETLLog &#xA;&#x9;      @ETLAction = 'sp_ETLFillFactDebt'&#xA;&#x9;     ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1&#xA;  END CATCH&#xA;  RETURN @RC;&#xA; END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFillFactDebt;&#xA;--GO&#xA;&#xA;-- 6) Add Back Foreign Keys&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLAddForeignKeyConstraints&#xA;/* Desc: This Sproc Replaces the Foreign Keys Constraints.&#xA;*/&#xA;AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 1;&#xA;&#x9;DECLARE @Message NVARCHAR(1000);&#xA;  BEGIN TRY&#xA;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimDates] &#xA;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimCountries] &#xA;&#x9;&#x9;FOREIGN KEY ([CountryKey]) REFERENCES [dbo].[DimCountries] ([CountryKey])&#xA;&#x9;ALTER TABLE [dbo].[FactCovid] ADD CONSTRAINT [FK_FactCovid_DimRegions] &#xA;&#x9;&#x9;FOREIGN KEY ([RegionKey]) REFERENCES [dbo].[DimRegions] ([RegionKey])&#xA;&#x9;ALTER TABLE [dbo].[FactDebt] ADD CONSTRAINT [FK_FactDebt_DimDates] &#xA;&#x9;&#x9;FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDates] ([DateKey])&#xA;&#x9;SET @Message = 'Foreign Keys replaced on all tables';&#xA;&#x9;EXEC sp_ETLInsertETLLog&#xA; &#x9;       @ETLAction = 'sp_ETLAddForeignKeyConstraints'&#xA; &#x9;      ,@ETLLogMessage = @Message;&#xA;    SET @RC = 1;&#xA;  END TRY&#xA;  BEGIN CATCH&#xA;    IF @@TRANCOUNT &gt; 0 ROLLBACK;&#xA;    DECLARE @ErrorMessage NVARCHAR(1000) = Error_Message();&#xA;    EXEC sp_ETLInsertETLLog &#xA;         @ETLAction = 'sp_ETLAddForeignKeyConstraints'&#xA;        ,@ETLLogMessage = @ErrorMessage;&#xA;    SET @RC = -1;&#xA;  END CATCH&#xA;  RETURN @RC;&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLAddForeignKeyConstraints;&#xA;--GO&#xA;&#xA;--********************************************************************--&#xA;-- D) Review the results of this script&#xA;--********************************************************************--&#xA;--go&#xA;--Declare @Status int;&#xA;--Exec @Status = sp_ETLDropForeignKeyConstraints;&#xA;--Select [Object] = 'pETLDropForeignKeyConstraints', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLTruncateTables;&#xA;--Select [Object] = 'pETLTruncateTables', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillDimDates;&#xA;--Select [Object] = 'pETLFillDimDates', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillDimCountries;&#xA;--Select [Object] = 'pETLFillDimProducts', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillDimRegions;&#xA;--Select [Object] = 'pETLFillDimCustomers', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLFillFactCovid;&#xA;--Select [Object] = 'pETLFillFactOrders', [Status] = @Status;&#xA;&#xA;--Exec @Status = sp_ETLAddForeignKeyConstraints;&#xA;--Select [Object] = 'pETLAddForeignKeyConstraints', [Status] = @Status;&#xA;&#xA;--go&#xA;--Select [DimDates] = Count(*) From [dbo].[DimDates];&#xA;--Select [DimCountries] = Count(*) From [dbo].[DimCountrires];&#xA;--Select [DimRegions] = Count(*) From [dbo].[DimRegions];&#xA;--Select [FactCovid] = Count(*) From [dbo].[FactCovid];&#xA;--Select [FactDebt] = Count(*) From [dbo].[FactDebt];&#xA;--Select * From vETLLog;&#xA;----Delete From ETLLog;&#xA;&#xA;-------------------------------------------------&#xA;------CREATE FINAL VIEWS FOR POWER BI------------&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDimDatesView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vDimDates]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[DimDates] WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;  ORDER BY [FullDate] ASC&#xA;&#x9;&#x9;&#x9;  OFFSET 0 ROWS');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final DimDates View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDimDatesView;&#xA;--GO&#xA;&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDimCountriesView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vDimCountries]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[DimCountries] WITH (NOLOCK)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final DimCountries View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDimCountriesView;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLDimRegionsView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vDimRegions]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[DimRegions] WITH (NOLOCK)');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final DimRegions View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLDimRegionsView;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFactCovidView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vFactCovid]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[FactCovid] WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;  ORDER BY [Updated] ASC&#xA;&#x9;&#x9;&#x9;  OFFSET 0 ROWS');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final FactCovid View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFactCovidView;&#xA;--GO&#xA;&#xA;USE [Gold_Debt]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_ETLFactDebtView AS&#xA;BEGIN&#xA;&#x9;DECLARE @RC INT = 0;&#xA;&#x9;BEGIN TRY&#xA;&#x9;&#x9;EXEC('CREATE OR ALTER VIEW [dbo].[vFactDebt]&#xA;&#x9;&#x9;      AS&#xA;&#x9;&#x9;      SELECT *&#xA;&#x9;&#x9;      FROM [Gold_Debt].[dbo].[FactDebt] WITH (NOLOCK)&#xA;&#x9;&#x9;&#x9;  ORDER BY [Record_Date] ASC&#xA;&#x9;&#x9;&#x9;  OFFSET 0 ROWS');&#xA;&#x9;&#x9;SET @RC = 1;&#xA;&#x9;END TRY&#xA;&#x9;BEGIN CATCH&#xA;&#x9;&#x9;PRINT 'Error Creating ETL Final FactDebt View For Our Power BI Report'&#xA;&#x9;&#x9;PRINT ERROR_MESSAGE()&#xA;&#x9;&#x9;SET @RC = -1&#xA;&#x9;END CATCH&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_ETLFactDebtView;&#xA;--GO&#xA;&#xA;--WE ARE SETTING UP DAILY SCHEDULED REFRESHES USING SQL SERVER AGENT! --THIS CODE IS NOT COPIED IN THE FIRST SEQUENCE CONTAINERS THAT RUNS CODE. WE RUN THIS AS A SEPARATE SQL SCRIPT IN THE FIRST AND THIRD SEQUENCE CONTAINER AS WELL AS THE LAST SEQUENCE CONTAINER &quot;SQL SERVER AGENT SCHEDULE REFRESH &amp; NEXT STEPS&quot;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Run Gold_Debt SQL Queries\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:DTSID="{5891261e-ef08-4d3e-a4c7-19d971843be4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{206E145E-0BF0-4F36-969E-8839F40C0A2B}"
              SQLTask:SqlStatementSource="--WE ARE SETTING UP DAILY SCHEDULED REFRESHES USING SQL SERVER AGENT!&#xA;-------------------------------------------------------------------------------------------------------&#xA;--SQL SERVER AGENT SCHEDULED REFRESH FOR LOCAL INSTANCE&#xA;--DEPENDING ON WHICH SERVER YOU ARE ON, YOU WILL HAVE TO COMMENT ON AND OFF THE SQL SEVER AGENT BLOCKS OF CODE.&#xA;&#xA;&#xA;USE [msdb]&#xA;GO&#xA;--USE [Gold_Debt]&#xA;--GO &#xA;&#xA;--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_Gold_Debt_SQLServerAgentDailyRefresh AS&#xA;BEGIN&#xA;&#xA;/****** Object:  Job [Gold_Debt Daily Refresh]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;BEGIN TRANSACTION&#xA;DECLARE @ReturnCode INT&#xA;SELECT @ReturnCode = 0&#xA;DECLARE @jobID1 Binary(16)&#xA;SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;&#xA;/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)&#xA;BEGIN&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;&#xA;END&#xA;&#xA;DECLARE @jobId BINARY(16)&#xA;EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Gold_Debt Daily Refresh', &#xA;  @enabled=1, &#xA;  @notify_level_eventlog=0, &#xA;  @notify_level_email=0, &#xA;  @notify_level_netsend=0, &#xA;  @notify_level_page=0, &#xA;  @delete_level=0, &#xA;  @description=N'No description available.', &#xA;  @category_name=N'[Uncategorized (Local)]', &#xA;  @owner_login_name=N'DESKTOP-L3H8CVG\Felipe', @job_id = @jobId OUTPUT&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;/****** Object:  Step [Gold_Debt SSIS ETL Process]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Gold_Debt SSIS ETL Process', &#xA;  @step_id=1, &#xA;  @cmdexec_success_code=0, &#xA;  @on_success_action=1, &#xA;  @on_success_step_id=0, &#xA;  @on_fail_action=2, &#xA;  @on_fail_step_id=0, &#xA;  @retry_attempts=0, &#xA;  @retry_interval=0, &#xA;  @os_run_priority=0, @subsystem=N'SSIS', &#xA;  @command=N'/FILE &quot;\&quot;C:\_BISolutions\Gold_Debt\Gold_Debt\Gold_Debt SSIS ETL Process.dtsx\&quot;&quot; /CHECKPOINTING OFF /REPORTING E', &#xA;  @database_name=N'master', &#xA;  @flags=0&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Gold_Debt SSIS ETL Process Daily Refresh', &#xA;  @enabled=1, &#xA;  @freq_type=4, &#xA;  @freq_interval=1, &#xA;  @freq_subday_type=1, &#xA;  @freq_subday_interval=0, &#xA;  @freq_relative_interval=0, &#xA;  @freq_recurrence_factor=0, &#xA;  @active_start_date=20240527, &#xA;  @active_end_date=99991231, &#xA;  @active_start_time=10000, &#xA;  @active_end_time=235959, &#xA;  @schedule_uid=N'6d3e1ef9-abc3-4a5d-88fa-1c3288595d7d'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;COMMIT TRANSACTION&#xA;GOTO EndSave&#xA;QuitWithRollback:&#xA;    IF (@@TRANCOUNT &gt; 0) ROLLBACK TRANSACTION&#xA;EndSave:&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;--GO&#xA;&#xA;&#xA;------------------------------------------&#xA;--SQL SERVER AGENT SSIS DAILY ETL SCHEDULED RUN ON UW SERVER:&#xA;--DEPENDING ON WHICH SERVER YOU ARE ON, YOU WILL HAVE TO COMMENT ON AND OFF THE SQL SEVER AGENT BLOCKS OF CODE.&#xA;&#xA;&#xA;&#xA;&#xA;--USE [msdb]&#xA;--GO&#xA;----USE [Gold_Debt]&#xA;----GO &#xA;&#xA;----DECLARE @jobID1 Binary(16)&#xA;----SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;----IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;----GO&#xA;&#xA;--CREATE OR ALTER PROCEDURE sp_Gold_Debt_SQLServerAgentDailyRefresh AS&#xA;--BEGIN&#xA;--/****** Object:  Job [Gold_Debt Daily Refresh]    Script Date: 5/27/2024 3:48:22 PM ******/&#xA;--BEGIN TRANSACTION&#xA;--DECLARE @ReturnCode INT&#xA;--SELECT @ReturnCode = 0&#xA;--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;&#xA;--/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 5/27/2024 3:48:23 PM ******/&#xA;--IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)&#xA;--BEGIN&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;&#xA;--END&#xA;&#xA;--DECLARE @jobId BINARY(16)&#xA;--EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Gold_Debt Daily Refresh', &#xA;--  @enabled=1, &#xA;--  @notify_level_eventlog=0, &#xA;--  @notify_level_email=0, &#xA;--  @notify_level_netsend=0, &#xA;--  @notify_level_page=0, &#xA;--  @delete_level=0, &#xA;--  @description=N'No description available.', &#xA;--  @category_name=N'[Uncategorized (Local)]', &#xA;--  @owner_login_name=N'fdgomez', @job_id = @jobId OUTPUT&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--/****** Object:  Step [Gold_Debt SSIS ETL Process]    Script Date: 5/27/2024 3:48:23 PM ******/&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Gold_Debt SSIS ETL Process', &#xA;--  @step_id=1, &#xA;--  @cmdexec_success_code=0, &#xA;--  @on_success_action=1, &#xA;--  @on_success_step_id=0, &#xA;--  @on_fail_action=2, &#xA;--  @on_fail_step_id=0, &#xA;--  @retry_attempts=0, &#xA;--  @retry_interval=0, &#xA;--  @os_run_priority=0, @subsystem=N'SSIS', &#xA;--  @command=N'/FILE &quot;\&quot;C:\_BISolutions\Gold_Debt\Gold_Debt\Gold_Debt SSIS ETL Process.dtsx\&quot;&quot; /CHECKPOINTING OFF /REPORTING E', &#xA;--  @database_name=N'master', &#xA;--  @flags=0&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Gold_Debt SSIS ETL Process Daily Refresh', &#xA;--  @enabled=1, &#xA;--  @freq_type=4, &#xA;--  @freq_interval=1, &#xA;--  @freq_subday_type=1, &#xA;--  @freq_subday_interval=0, &#xA;--  @freq_relative_interval=0, &#xA;--  @freq_recurrence_factor=0, &#xA;--  @active_start_date=20240527, &#xA;--  @active_end_date=99991231, &#xA;--  @active_start_time=10000, &#xA;--  @active_end_time=235959, &#xA;--  @schedule_uid=N'b0dc3b6b-5960-4780-8dae-8e6e15b26258'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--COMMIT TRANSACTION&#xA;--GOTO EndSave&#xA;--QuitWithRollback:&#xA;--    IF (@@TRANCOUNT &gt; 0) ROLLBACK TRANSACTION&#xA;--EndSave:&#xA;--END&#xA;--GO&#xA;&#xA;----EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;----GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Server Agent Schedule Refresh &amp; Next Steps"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{8881AB1D-D855-4EC5-A5D6-C01F390D0329}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Server Agent Schedule Refresh &amp; Next Steps">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SQL Server Agent Schedule Refresh &amp; Next Steps\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:Disabled="True"
          DTS:DTSID="{BC0F84B2-FE76-44B9-82DC-F742C555690B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{206E145E-0BF0-4F36-969E-8839F40C0A2B}"
              SQLTask:SqlStatementSource="--WE ARE SETTING UP DAILY SCHEDULED REFRESHES USING SQL SERVER AGENT!&#xA;-------------------------------------------------------------------------------------------------------&#xA;--SQL SERVER AGENT SCHEDULED REFRESH FOR LOCAL INSTANCE&#xA;--DEPENDING ON WHICH SERVER YOU ARE ON, YOU WILL HAVE TO COMMENT ON AND OFF THE SQL SEVER AGENT BLOCKS OF CODE.&#xA;&#xA;&#xA;USE [msdb]&#xA;GO&#xA;--USE [Gold_Debt]&#xA;--GO &#xA;&#xA;--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;--GO&#xA;&#xA;CREATE OR ALTER PROCEDURE sp_Gold_Debt_SQLServerAgentDailyRefresh AS&#xA;BEGIN&#xA;&#xA;/****** Object:  Job [Gold_Debt Daily Refresh]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;BEGIN TRANSACTION&#xA;DECLARE @ReturnCode INT&#xA;SELECT @ReturnCode = 0&#xA;DECLARE @jobID1 Binary(16)&#xA;SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;&#xA;/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)&#xA;BEGIN&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;&#xA;END&#xA;&#xA;DECLARE @jobId BINARY(16)&#xA;EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Gold_Debt Daily Refresh', &#xA;&#x9;&#x9;@enabled=1, &#xA;&#x9;&#x9;@notify_level_eventlog=0, &#xA;&#x9;&#x9;@notify_level_email=0, &#xA;&#x9;&#x9;@notify_level_netsend=0, &#xA;&#x9;&#x9;@notify_level_page=0, &#xA;&#x9;&#x9;@delete_level=0, &#xA;&#x9;&#x9;@description=N'No description available.', &#xA;&#x9;&#x9;@category_name=N'[Uncategorized (Local)]', &#xA;&#x9;&#x9;@owner_login_name=N'DESKTOP-L3H8CVG\Felipe', @job_id = @jobId OUTPUT&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;/****** Object:  Step [Gold_Debt SSIS ETL Process]    Script Date: 5/27/2024 4:21:54 PM ******/&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Gold_Debt SSIS ETL Process', &#xA;&#x9;&#x9;@step_id=1, &#xA;&#x9;&#x9;@cmdexec_success_code=0, &#xA;&#x9;&#x9;@on_success_action=1, &#xA;&#x9;&#x9;@on_success_step_id=0, &#xA;&#x9;&#x9;@on_fail_action=2, &#xA;&#x9;&#x9;@on_fail_step_id=0, &#xA;&#x9;&#x9;@retry_attempts=0, &#xA;&#x9;&#x9;@retry_interval=0, &#xA;&#x9;&#x9;@os_run_priority=0, @subsystem=N'SSIS', &#xA;&#x9;&#x9;@command=N'/FILE &quot;\&quot;C:\_BISolutions\Gold_Debt\Gold_Debt\Gold_Debt SSIS ETL Process.dtsx\&quot;&quot; /CHECKPOINTING OFF /REPORTING E', &#xA;&#x9;&#x9;@database_name=N'master', &#xA;&#x9;&#x9;@flags=0&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Gold_Debt SSIS ETL Process Daily Refresh', &#xA;&#x9;&#x9;@enabled=1, &#xA;&#x9;&#x9;@freq_type=4, &#xA;&#x9;&#x9;@freq_interval=1, &#xA;&#x9;&#x9;@freq_subday_type=1, &#xA;&#x9;&#x9;@freq_subday_interval=0, &#xA;&#x9;&#x9;@freq_relative_interval=0, &#xA;&#x9;&#x9;@freq_recurrence_factor=0, &#xA;&#x9;&#x9;@active_start_date=20240527, &#xA;&#x9;&#x9;@active_end_date=99991231, &#xA;&#x9;&#x9;@active_start_time=10000, &#xA;&#x9;&#x9;@active_end_time=235959, &#xA;&#x9;&#x9;@schedule_uid=N'6d3e1ef9-abc3-4a5d-88fa-1c3288595d7d'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'&#xA;IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;COMMIT TRANSACTION&#xA;GOTO EndSave&#xA;QuitWithRollback:&#xA;    IF (@@TRANCOUNT &gt; 0) ROLLBACK TRANSACTION&#xA;EndSave:&#xA;END&#xA;GO&#xA;&#xA;--EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;--GO&#xA;&#xA;&#xA;------------------------------------------&#xA;--SQL SERVER AGENT SSIS DAILY ETL SCHEDULED RUN ON UW SERVER:&#xA;--DEPENDING ON WHICH SERVER YOU ARE ON, YOU WILL HAVE TO COMMENT ON AND OFF THE SQL SEVER AGENT BLOCKS OF CODE.&#xA;&#xA;&#xA;&#xA;&#xA;--USE [msdb]&#xA;--GO&#xA;----USE [Gold_Debt]&#xA;----GO &#xA;&#xA;----DECLARE @jobID1 Binary(16)&#xA;----SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;----IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;----GO&#xA;&#xA;--CREATE OR ALTER PROCEDURE sp_Gold_Debt_SQLServerAgentDailyRefresh AS&#xA;--BEGIN&#xA;--/****** Object:  Job [Gold_Debt Daily Refresh]    Script Date: 5/27/2024 3:48:22 PM ******/&#xA;--BEGIN TRANSACTION&#xA;--DECLARE @ReturnCode INT&#xA;--SELECT @ReturnCode = 0&#xA;--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;&#xA;--/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 5/27/2024 3:48:23 PM ******/&#xA;--IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)&#xA;--BEGIN&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;&#xA;--END&#xA;&#xA;--DECLARE @jobId BINARY(16)&#xA;--EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Gold_Debt Daily Refresh', &#xA;--&#x9;&#x9;@enabled=1, &#xA;--&#x9;&#x9;@notify_level_eventlog=0, &#xA;--&#x9;&#x9;@notify_level_email=0, &#xA;--&#x9;&#x9;@notify_level_netsend=0, &#xA;--&#x9;&#x9;@notify_level_page=0, &#xA;--&#x9;&#x9;@delete_level=0, &#xA;--&#x9;&#x9;@description=N'No description available.', &#xA;--&#x9;&#x9;@category_name=N'[Uncategorized (Local)]', &#xA;--&#x9;&#x9;@owner_login_name=N'fdgomez', @job_id = @jobId OUTPUT&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--/****** Object:  Step [Gold_Debt SSIS ETL Process]    Script Date: 5/27/2024 3:48:23 PM ******/&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Gold_Debt SSIS ETL Process', &#xA;--&#x9;&#x9;@step_id=1, &#xA;--&#x9;&#x9;@cmdexec_success_code=0, &#xA;--&#x9;&#x9;@on_success_action=1, &#xA;--&#x9;&#x9;@on_success_step_id=0, &#xA;--&#x9;&#x9;@on_fail_action=2, &#xA;--&#x9;&#x9;@on_fail_step_id=0, &#xA;--&#x9;&#x9;@retry_attempts=0, &#xA;--&#x9;&#x9;@retry_interval=0, &#xA;--&#x9;&#x9;@os_run_priority=0, @subsystem=N'SSIS', &#xA;--&#x9;&#x9;@command=N'/FILE &quot;\&quot;C:\_BISolutions\Gold_Debt\Gold_Debt\Gold_Debt SSIS ETL Process.dtsx\&quot;&quot; /CHECKPOINTING OFF /REPORTING E', &#xA;--&#x9;&#x9;@database_name=N'master', &#xA;--&#x9;&#x9;@flags=0&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'Gold_Debt SSIS ETL Process Daily Refresh', &#xA;--&#x9;&#x9;@enabled=1, &#xA;--&#x9;&#x9;@freq_type=4, &#xA;--&#x9;&#x9;@freq_interval=1, &#xA;--&#x9;&#x9;@freq_subday_type=1, &#xA;--&#x9;&#x9;@freq_subday_interval=0, &#xA;--&#x9;&#x9;@freq_relative_interval=0, &#xA;--&#x9;&#x9;@freq_recurrence_factor=0, &#xA;--&#x9;&#x9;@active_start_date=20240527, &#xA;--&#x9;&#x9;@active_end_date=99991231, &#xA;--&#x9;&#x9;@active_start_time=10000, &#xA;--&#x9;&#x9;@active_end_time=235959, &#xA;--&#x9;&#x9;@schedule_uid=N'b0dc3b6b-5960-4780-8dae-8e6e15b26258'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'&#xA;--IF (@@ERROR &lt;&gt; 0 OR @ReturnCode &lt;&gt; 0) GOTO QuitWithRollback&#xA;--COMMIT TRANSACTION&#xA;--GOTO EndSave&#xA;--QuitWithRollback:&#xA;--    IF (@@TRANCOUNT &gt; 0) ROLLBACK TRANSACTION&#xA;--EndSave:&#xA;--END&#xA;--GO&#xA;&#xA;----EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;----GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SQL Server Agent Schedule Refresh &amp; Next Steps\SQL SERVER AGENT GOLD_DEBT DAILY ETL REFRESH"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3F2AB601-8F65-4539-8F4F-A145DA8E0E19}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL SERVER AGENT GOLD_DEBT DAILY ETL REFRESH"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{206E145E-0BF0-4F36-969E-8839F40C0A2B}"
              SQLTask:SqlStatementSource="--DECLARE @jobID1 Binary(16)&#xA;--SELECT @jobID1 = job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh'&#xA;--IF EXISTS (SELECT job_id FROM msdb.dbo.sysjobs WHERE name = N'Gold_Debt Daily Refresh') EXEC msdb.dbo.sp_delete_job @jobID1&#xA;--GO&#xA;&#xA;EXEC sp_Gold_Debt_SQLServerAgentDailyRefresh;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SQL Server Agent Schedule Refresh &amp; Next Steps.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{F64C8FC7-1D5A-4B03-874B-F74B6C50F181}"
          DTS:From="Package\SQL Server Agent Schedule Refresh &amp; Next Steps\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SQL Server Agent Schedule Refresh &amp; Next Steps\SQL SERVER AGENT GOLD_DEBT DAILY ETL REFRESH" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{CDEE3E53-724F-4CAC-B3B7-D916F1E7E3DD}"
      DTS:From="Package\Gold_Debt Database Creation"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Run Gold_Debt SQL Queries" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{B7F73828-B8B3-40C1-B63E-733B3C38EB20}"
      DTS:From="Package\Raw Data Bulk Insert Into Staging Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{0AA1E452-4F72-455C-B80F-0307B7F06065}"
      DTS:From="Package\Create Dimension and Fact ETL Views"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\Dimension &amp; Fact Tables Refresh" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{8056EF01-0EE5-4436-A4A3-9BD064203047}"
      DTS:From="Package\Run Gold_Debt SQL Queries"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\Gold_Debt Staging Tables Creation" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{A016B270-20FF-43E5-A55D-AC18B3E2A2A3}"
      DTS:From="Package\Dimension &amp; Fact Tables Refresh"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Add Back Foreign Keys" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{6F4E81D6-2BDB-475A-B37D-5DC59C08BBFD}"
      DTS:From="Package\Add Back Foreign Keys"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Generate Power BI Views Refresh" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{64415150-7E77-4778-8148-244AF42EC81E}"
      DTS:From="Package\Generate Power BI Views Refresh"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\SQL Server Agent Schedule Refresh &amp; Next Steps" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{D938A2ED-FB11-4A4C-80E0-DD8C1B8BB533}"
      DTS:From="Package\Gold_Debt Staging Tables Creation"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Raw Data Bulk Insert Into Staging Tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{3C336F58-B775-47BF-9D84-3F2BDBB7D28E}"
      DTS:From="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Create ETLLog Table &amp; ETLLogView" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{9CBD1ADE-CD71-4E3A-B15F-B8C8B2A9F93A}"
      DTS:From="Package\Create ETLLog Table &amp; ETLLogView"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Drop Foreign Keys &amp; Truncate Tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{DE171F6E-4AE7-4181-A62F-C82C977EF965}"
      DTS:From="Package\Drop Foreign Keys &amp; Truncate Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Create Dimension and Fact ETL Views" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{F09161E9-D66A-4517-AE4D-D3F96959BCED}"
      DTS:From="Package\PRE SSIS RUN"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Gold_Debt Database Creation" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="186,42"
          Id="Package\Add Back Foreign Keys\Add Back Foreign Keys"
          TopLeft="26.6666666666665,14.3333333333333" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="332,129"
          Size="332,172"
          Id="Package\Add Back Foreign Keys"
          TopLeft="735.35714285714,773.420634920634" />
        <NodeLayout
          Size="222,42"
          Id="Package\Create Dimension and Fact ETL Views\Create DimCountries ETL View"
          TopLeft="21.2222222222222,13.8888888888889" />
        <NodeLayout
          Size="215,42"
          Id="Package\Create Dimension and Fact ETL Views\Create DimRegions ETL View"
          TopLeft="20.2499999999998,58.75" />
        <NodeLayout
          Size="205,42"
          Id="Package\Create Dimension and Fact ETL Views\Create FactCovid ETL View"
          TopLeft="21.75,111" />
        <NodeLayout
          Size="209,42"
          Id="Package\Create Dimension and Fact ETL Views\Create FactDebt ETL View"
          TopLeft="20.5,159.75" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="296,249"
          Size="296,292"
          Id="Package\Create Dimension and Fact ETL Views"
          TopLeft="1546.17063492064,383.722222222222" />
        <NodeLayout
          Size="180,42"
          Id="Package\Create ETLLog Table &amp; ETLLogView\Create ETL Log Table"
          TopLeft="27.7777777777778,19.3333333333334" />
        <NodeLayout
          Size="176,42"
          Id="Package\Create ETLLog Table &amp; ETLLogView\Create ETL Log View"
          TopLeft="29.0277777777778,86.8333333333334" />
        <EdgeLayout
          Id="Package\Create ETLLog Table &amp; ETLLogView.PrecedenceConstraints[Constraint]"
          TopLeft="117.402777777778,61.3333333333334">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.5"
              Start="0,0"
              End="0,18">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="274,184"
          Size="274,227"
          Id="Package\Create ETLLog Table &amp; ETLLogView"
          TopLeft="825.97222222222,381.837301587301" />
        <NodeLayout
          Size="295,42"
          Id="Package\Dimension &amp; Fact Tables Refresh\Dim Countries Flush and Fill Stored Procedure"
          TopLeft="30.1666666666664,74" />
        <NodeLayout
          Size="293,42"
          Id="Package\Dimension &amp; Fact Tables Refresh\Dim Dates Flush and Fill Stored Procedure"
          TopLeft="28,16.2222222222223" />
        <NodeLayout
          Size="289,42"
          Id="Package\Dimension &amp; Fact Tables Refresh\Dim Regions Flush and Fill Stored Procedure"
          TopLeft="37.9444444444441,128.444444444444" />
        <NodeLayout
          Size="277,42"
          Id="Package\Dimension &amp; Fact Tables Refresh\Fact Covid Flush and Fill Stored Procedure"
          TopLeft="25.7222222222224,199.777777777778" />
        <NodeLayout
          Size="274,42"
          Id="Package\Dimension &amp; Fact Tables Refresh\Fact Debt Flush and Fill Stored Procedure"
          TopLeft="28.3888888888886,259.888888888889" />
        <EdgeLayout
          Id="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint]"
          TopLeft="28,37.2222222222223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2.1666666666664,52.111111111111"
              Start="0,0"
              End="-5.3333333333336,52.111111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,48.111111111111" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,48.111111111111"
                    Point2="-22.5,52.111111111111"
                    Point3="-18.5,52.111111111111" />
                  <mssgle:LineSegment
                    End="-5.3333333333336,52.111111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint 1]"
          TopLeft="30.1666666666664,100.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="7.77777777777771,48.7777777777778"
              Start="0,0"
              End="0.277777777777715,48.7777777777778">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,44.7777777777778" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,44.7777777777778"
                    Point2="-22.5,48.7777777777778"
                    Point3="-18.5,48.7777777777778" />
                  <mssgle:LineSegment
                    End="0.277777777777715,48.7777777777778" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint 2]"
          TopLeft="182.444444444444,170.444444444444">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18.2222222222217,29.3333333333339"
              Start="0,0"
              End="-18.2222222222217,21.8333333333339">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.666666666667"
                    Point2="0,14.666666666667"
                    Point3="-4,14.666666666667" />
                  <mssgle:LineSegment
                    End="-14.2222222222217,14.666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.2222222222217,14.666666666667"
                    Point2="-18.2222222222217,14.666666666667"
                    Point3="-18.2222222222217,18.666666666667" />
                  <mssgle:LineSegment
                    End="-18.2222222222217,21.8333333333339" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Dimension &amp; Fact Tables Refresh.PrecedenceConstraints[Constraint 3]"
          TopLeft="25.7222222222224,220.777777777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="2.66666666666617,60.1111111111104"
              Start="0,0"
              End="-4.83333333333383,60.1111111111104">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,56.1111111111104" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,56.1111111111104"
                    Point2="-22.5,60.1111111111104"
                    Point3="-18.5,60.1111111111104" />
                  <mssgle:LineSegment
                    End="-4.83333333333383,60.1111111111104" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="341,321"
          Size="341,364"
          Id="Package\Dimension &amp; Fact Tables Refresh"
          TopLeft="295.111111111107,614.694444444444" />
        <NodeLayout
          Size="165,42"
          Id="Package\Drop Foreign Keys &amp; Truncate Tables\Drop Foreign Keys"
          TopLeft="28,12.1111111111111" />
        <NodeLayout
          Size="155,42"
          Id="Package\Drop Foreign Keys &amp; Truncate Tables\Truncate Tables"
          TopLeft="23.5555555555557,76.5555555555557" />
        <EdgeLayout
          Id="Package\Drop Foreign Keys &amp; Truncate Tables.PrecedenceConstraints[Constraint]"
          TopLeft="193,33.1111111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14.4444444444443,64.4444444444446"
              Start="0,0"
              End="-6.94444444444434,64.4444444444446">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5,0"
                    Point2="22.5,0"
                    Point3="22.5,4" />
                  <mssgle:LineSegment
                    End="22.5,60.4444444444446" />
                  <mssgle:CubicBezierSegment
                    Point1="22.5,60.4444444444446"
                    Point2="22.5,64.4444444444446"
                    Point3="18.5,64.4444444444446" />
                  <mssgle:LineSegment
                    End="-6.94444444444434,64.4444444444446" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="284,141"
          Size="284,184"
          Id="Package\Drop Foreign Keys &amp; Truncate Tables"
          TopLeft="1200.1626984127,387.277777777777" />
        <NodeLayout
          Size="256,42"
          Id="Package\Generate Power BI Views Refresh\Create Or Alter vDimCountries View"
          TopLeft="25.8888888888889,52.1111111111111" />
        <NodeLayout
          Size="229,42"
          Id="Package\Generate Power BI Views Refresh\Create Or Alter vDimDates View"
          TopLeft="27,3.22222222222229" />
        <NodeLayout
          Size="240,42"
          Id="Package\Generate Power BI Views Refresh\Create Or Alter vDimRegions View"
          TopLeft="29.2222222222224,103.222222222222" />
        <NodeLayout
          Size="229,42"
          Id="Package\Generate Power BI Views Refresh\Create Or Alter vFactCovid View"
          TopLeft="28.1111111111111,154.333333333333" />
        <NodeLayout
          Size="225,42"
          Id="Package\Generate Power BI Views Refresh\Create Or alter vFactDebt View"
          TopLeft="31.4444444444443,209.888888888889" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="343,307"
          Size="343,350"
          Id="Package\Generate Power BI Views Refresh"
          TopLeft="1125.54761904762,772.424603174603" />
        <NodeLayout
          Size="228,42"
          Id="Package\Gold_Debt Database Creation\Gold_Debt Database Creation"
          TopLeft="6,22" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="249,156"
          Size="249,199"
          Id="Package\Gold_Debt Database Creation"
          TopLeft="625.107142857141,76.174603174603" />
        <NodeLayout
          Size="410,42"
          Id="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation\Gold_Debt Add Foreign Key Constraints To Dimension and Fact Tables"
          TopLeft="25,88" />
        <NodeLayout
          Size="301,42"
          Id="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation\Gold_Debt Dimension and Fact Tables Creation"
          TopLeft="26.6666666666667,15.2222222222222" />
        <EdgeLayout
          Id="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation.PrecedenceConstraints[Constraint]"
          TopLeft="177.166666666667,57.2222222222222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.8333333333333,30.7777777777778"
              Start="0,0"
              End="52.8333333333333,23.2777777777778">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.3888888888889" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.3888888888889"
                    Point2="0,15.3888888888889"
                    Point3="4,15.3888888888889" />
                  <mssgle:LineSegment
                    End="48.8333333333333,15.3888888888889" />
                  <mssgle:CubicBezierSegment
                    Point1="48.8333333333333,15.3888888888889"
                    Point2="52.8333333333333,15.3888888888889"
                    Point3="52.8333333333333,19.3888888888889" />
                  <mssgle:LineSegment
                    End="52.8333333333333,23.2777777777778" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="440,147"
          Size="440,190"
          Id="Package\Gold_Debt Dimension and Fact Tables &amp; Foreign Key Constraints Creation"
          TopLeft="298.738095238094,410.341269841269" />
        <NodeLayout
          Size="325,42"
          Id="Package\Gold_Debt Staging Tables Creation\StagingBingCovid19DataRaw Staging Table Creation"
          TopLeft="8,10" />
        <NodeLayout
          Size="296,42"
          Id="Package\Gold_Debt Staging Tables Creation\StagingDebtPennyRaw Staging Table Creation"
          TopLeft="11,74" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="338,218"
          Size="338,261"
          Id="Package\Gold_Debt Staging Tables Creation"
          TopLeft="1146.34523809523,56.1428571428573" />
        <NodeLayout
          Size="211,42"
          Id="Package\PRE SSIS RUN\Run Gold_Debt SQL Queries"
          TopLeft="30.8333333333334,134.162698412699" />
        <NodeLayout
          Size="200,68"
          Id="Package\PRE SSIS RUN\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          TopLeft="34.2698412698414,182.84126984127" />
        <AnnotationLayout
          Text="PLEASE MAKE SURE TO RUN ENTIRE&#xA; 'Gold_Debt Final SQL Queries' &#xA;SCRIPT BEFORE RUNNING &#xA;THIS SSIS PACKAGE!!!!!!!!!&#xA;&#xA;HAVE CSV FILES IN C:\DATA DIRECTORY"
          ParentId="Package\PRE SSIS RUN"
          FontInfo="{assembly:Null}"
          Size="238,120"
          Id="01cfcb05-2f26-4c9d-841d-d942319a1a8f"
          TopLeft="19.9444444444445,8.11111111111111" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="273,306"
          Size="273,349"
          Id="Package\PRE SSIS RUN"
          TopLeft="296.214285714286,47.5515873015873" />
        <NodeLayout
          Size="306,42"
          Id="Package\Raw Data Bulk Insert Into Staging Tables\BULK INSERT Into Staging Table StagingBingCovid19DataRaw"
          TopLeft="5,9" />
        <NodeLayout
          Size="343,42"
          Id="Package\Raw Data Bulk Insert Into Staging Tables\BULK INSERT Into Staging Table StagingDebtPennyRaw"
          TopLeft="4,76" />
        <NodeLayout
          Size="248,42"
          Id="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables"
          TopLeft="20.9722222222226,148.138888888889" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="352,250"
          Size="352,293"
          Id="Package\Raw Data Bulk Insert Into Staging Tables"
          TopLeft="1515.61507936508,36.8650793650795" />
        <NodeLayout
          Size="219,42"
          Id="Package\Run Gold_Debt SQL Queries\Run Gold_Debt SQL Queries"
          TopLeft="10.6071428571427,81.5" />
        <NodeLayout
          Size="200,68"
          Id="Package\Run Gold_Debt SQL Queries\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          TopLeft="22.1428571428571,138.142857142857" />
        <AnnotationLayout
          Text="RERUNNING ALL GOLD_DEBT SQL&#xA;SCRIPTS TO BE ABLE TO COMPLETE&#xA;SSIS PACKAGE"
          ParentId="Package\Run Gold_Debt SQL Queries"
          FontInfo="{assembly:Null}"
          Size="215,72"
          Id="36833591-f023-472c-93f7-c25e5c6b82cc"
          TopLeft="6.25,17" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="235,212"
          Size="235,255"
          Id="Package\Run Gold_Debt SQL Queries"
          TopLeft="898.472222222222,60.8452380952381" />
        <NodeLayout
          Size="326,42"
          Id="Package\SQL Server Agent Schedule Refresh &amp; Next Steps\SQL SCRIPT TO SET UP STORED PROCEDURE FOR SQL SERVER AGENT"
          TopLeft="28,9.42857142857133" />
        <NodeLayout
          Size="337,42"
          Id="Package\SQL Server Agent Schedule Refresh &amp; Next Steps\SQL SERVER AGENT GOLD_DEBT DAILY ETL REFRESH"
          TopLeft="34,82.7142857142853" />
        <AnnotationLayout
          Text="Remove Database Creation Sequence Container&#xA;In Order To Have ETL Log History Buildup.&#xA;&#xA;DISABLE ETLLOG TABLE CREATION SQL SCRIPT FOR ETL LOG &#xA;HISTORY BUILDUP&#xA;&#xA;DISABLE GOLD_DEBT SQL QUERIES UNLESS NEEDED AFTER &#xA;SUCCESSFULLY SETTING UP DATABASE FROM SSIS  EXECUTION&#xA;&#xA;Keep Gold_Debt SQL Scripts In Sync In SSIS&#xA;Sequence Container With Our Gold_Debt SQL Queries.sql&#xA;File&#xA;&#xA;DISABLE SQL SERVER AGENT SCHEDULE REFRESH SEQUENCE&#xA;CONTAINER ONCE THE REFRESH JOB HAS BEEN CREATED."
          ParentId="Package\SQL Server Agent Schedule Refresh &amp; Next Steps"
          FontInfo="{assembly:Null}"
          Size="365,263"
          Id="f59cf893-0734-41bb-96d5-bb7b8357f626"
          TopLeft="16.6388888888887,128.269841269841" />
        <EdgeLayout
          Id="Package\SQL Server Agent Schedule Refresh &amp; Next Steps.PrecedenceConstraints[Constraint]"
          TopLeft="191,51.4285714285713">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="11.5,31.285714285714"
              Start="0,0"
              End="11.5,23.785714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.642857142857" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.642857142857"
                    Point2="0,15.642857142857"
                    Point3="4,15.642857142857" />
                  <mssgle:LineSegment
                    End="7.5,15.642857142857" />
                  <mssgle:CubicBezierSegment
                    Point1="7.5,15.642857142857"
                    Point2="11.5,15.642857142857"
                    Point3="11.5,19.642857142857" />
                  <mssgle:LineSegment
                    End="11.5,23.785714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="400,446"
          Size="400,489"
          Id="Package\SQL Server Agent Schedule Refresh &amp; Next Steps"
          TopLeft="1503.70238095238,703.273809523808" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="874.107142857141,175.674603174603">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24.365079365081,12.6706349206351"
              Start="0,0"
              End="16.865079365081,12.6706349206351">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="8.18253968254049,0" />
                  <mssgle:CubicBezierSegment
                    Point1="8.18253968254049,0"
                    Point2="12.1825396825405,0"
                    Point3="12.1825396825405,4" />
                  <mssgle:LineSegment
                    End="12.1825396825405,8.67063492063505" />
                  <mssgle:CubicBezierSegment
                    Point1="12.1825396825405,8.67063492063505"
                    Point2="12.1825396825405,12.6706349206351"
                    Point3="16.1825396825405,12.6706349206351" />
                  <mssgle:LineSegment
                    End="16.865079365081,12.6706349206351" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="1691.61507936508,329.86507936508">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1172.87698412698,80.4761904761895"
              Start="0,0"
              End="-1172.87698412698,72.9761904761895">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.2380952380947" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.2380952380947"
                    Point2="0,40.2380952380947"
                    Point3="-4,40.2380952380947" />
                  <mssgle:LineSegment
                    End="-1168.87698412698,40.2380952380947" />
                  <mssgle:CubicBezierSegment
                    Point1="-1168.87698412698,40.2380952380947"
                    Point2="-1172.87698412698,40.2380952380947"
                    Point3="-1172.87698412698,44.2380952380947" />
                  <mssgle:LineSegment
                    End="-1172.87698412698,72.9761904761895" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="1546.17063492064,577.055555555556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-910.059523809533,160.305555555555"
              Start="0,0"
              End="-902.559523809533,160.305555555555">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-451.63872366791,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-451.63872366791,0"
                    Point2="-455.63872366791,0"
                    Point3="-455.63872366791,4" />
                  <mssgle:LineSegment
                    End="-455.63872366791,156.305555555555" />
                  <mssgle:CubicBezierSegment
                    Point1="-455.63872366791,156.305555555555"
                    Point2="-455.63872366791,160.305555555555"
                    Point3="-459.63872366791,160.305555555555" />
                  <mssgle:LineSegment
                    End="-902.559523809533,160.305555555555" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="1015.97222222222,315.845238095238">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="299.37301587301,1.29761904761926"
              Start="0,0"
              End="299.37301587301,8.79761904761926">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7976190476193" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.7976190476193"
                    Point2="0,23.7976190476193"
                    Point3="4,23.7976190476193" />
                  <mssgle:LineSegment
                    End="295.37301587301,23.7976190476193" />
                  <mssgle:CubicBezierSegment
                    Point1="295.37301587301,23.7976190476193"
                    Point2="299.37301587301,23.7976190476193"
                    Point3="299.37301587301,19.7976190476193" />
                  <mssgle:LineSegment
                    End="299.37301587301,8.79761904761926" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="636.111111111107,857.724206349205">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99.2460317460325,0"
              Start="0,0"
              End="91.7460317460325,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.7460317460325,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="1067.35714285714,859.420634920634">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="58.19047619048,88.003968253969"
              Start="0,0"
              End="50.69047619048,88.003968253969">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="25.09523809524,0" />
                  <mssgle:CubicBezierSegment
                    Point1="25.09523809524,0"
                    Point2="29.09523809524,0"
                    Point3="29.09523809524,4" />
                  <mssgle:LineSegment
                    End="29.09523809524,84.003968253969" />
                  <mssgle:CubicBezierSegment
                    Point1="29.09523809524,84.003968253969"
                    Point2="29.09523809524,88.003968253969"
                    Point3="33.09523809524,88.003968253969" />
                  <mssgle:LineSegment
                    End="50.69047619048,88.003968253969" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="1468.54761904762,947.599206349206">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="35.1547619047601,0"
              Start="0,0"
              End="27.6547619047601,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.6547619047601,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="1484.34523809523,185.003968253968">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="31.2698412698455,0"
              Start="0,0"
              End="23.7698412698455,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.7698412698455,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="738.738095238094,505.341269841269">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="87.234126984126,-10.003968253968"
              Start="0,0"
              End="79.734126984126,-10.003968253968">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="39.617063492063,0" />
                  <mssgle:CubicBezierSegment
                    Point1="39.617063492063,0"
                    Point2="43.617063492063,0"
                    Point3="43.617063492063,-4" />
                  <mssgle:LineSegment
                    End="43.617063492063,-6.00396825396797" />
                  <mssgle:CubicBezierSegment
                    Point1="43.617063492063,-6.00396825396797"
                    Point2="43.617063492063,-10.003968253968"
                    Point3="47.617063492063,-10.003968253968" />
                  <mssgle:LineSegment
                    End="79.734126984126,-10.003968253968" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="1099.97222222222,495.337301587301">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="100.19047619048,-16.059523809524"
              Start="0,0"
              End="92.69047619048,-16.059523809524">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="46.09523809524,0" />
                  <mssgle:CubicBezierSegment
                    Point1="46.09523809524,0"
                    Point2="50.09523809524,0"
                    Point3="50.09523809524,-4" />
                  <mssgle:LineSegment
                    End="50.09523809524,-12.059523809524" />
                  <mssgle:CubicBezierSegment
                    Point1="50.09523809524,-12.059523809524"
                    Point2="50.09523809524,-16.059523809524"
                    Point3="54.09523809524,-16.059523809524" />
                  <mssgle:LineSegment
                    End="92.69047619048,-16.059523809524" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="1484.1626984127,480.833333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62.00793650794,0"
              Start="0,0"
              End="54.50793650794,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="54.50793650794,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="569.214285714286,198.551587301587">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="55.8928571428559,-22.8769841269843"
              Start="0,0"
              End="48.3928571428559,-22.8769841269843">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.9464285714279,0" />
                  <mssgle:CubicBezierSegment
                    Point1="23.9464285714279,0"
                    Point2="27.9464285714279,0"
                    Point3="27.9464285714279,-4" />
                  <mssgle:LineSegment
                    End="27.9464285714279,-18.8769841269843" />
                  <mssgle:CubicBezierSegment
                    Point1="27.9464285714279,-18.8769841269843"
                    Point2="27.9464285714279,-22.8769841269843"
                    Point3="31.9464285714279,-22.8769841269843" />
                  <mssgle:LineSegment
                    End="48.3928571428559,-22.8769841269843" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="150,42"
          Id="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\DebtPennyRaw"
          TopLeft="338,59" />
        <NodeLayout
          Size="156,42"
          Id="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\Data Conversion"
          TopLeft="112,189" />
        <NodeLayout
          Size="171,42"
          Id="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination"
          TopLeft="83,293" />
        <NodeLayout
          Size="179,42"
          Id="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\BingCovid19DataRaw"
          TopLeft="121,58" />
        <EdgeLayout
          Id="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables.Paths[Flat File Source Output]"
          TopLeft="210.5,100">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.5,89"
              Start="0,0"
              End="-20.5,81.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.5"
                    Point2="0,44.5"
                    Point3="-4,44.5" />
                  <mssgle:LineSegment
                    End="-16.5,44.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.5,44.5"
                    Point2="-20.5,44.5"
                    Point3="-20.5,48.5" />
                  <mssgle:LineSegment
                    End="-20.5,81.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables.Paths[Data Conversion Output]"
          TopLeft="190,231">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-21.5,62"
              Start="0,0"
              End="-21.5,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27"
                    Point2="0,31"
                    Point3="-4,31" />
                  <mssgle:LineSegment
                    End="-17.5,31" />
                  <mssgle:CubicBezierSegment
                    Point1="-17.5,31"
                    Point2="-21.5,31"
                    Point3="-21.5,35" />
                  <mssgle:LineSegment
                    End="-21.5,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Raw Data Bulk Insert Into Staging Tables\Insert CSV Files Into Staging Tables\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>